{
  "index": 972,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure to ensure the generated code is executable for display purposes. Create a vocabulary memorization software for People's Education Press 8th grade (second semester) English textbook.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the vocabulary database implementation complete?",
      "description": "Check if the code includes a comprehensive vocabulary database for the 8th grade PEP textbook (second semester). The database should include words, meanings, example sentences, and unit classifications. Score 0 if there's no structured database, 5 if only words and meanings are included, and 10 if the database is complete with words, phonetics, definitions, example sentences, and unit organization.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the memorization system implement effective learning mechanisms?",
      "description": "Evaluate if the code implements scientifically-backed memorization techniques such as spaced repetition, recall testing, or the Leitner system. Check if the system tracks user learning progress and adapts difficulty accordingly. Deduct 5 points if there's no algorithm for spaced repetition, and 3 points if there's no mechanism to prioritize difficult words. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there a comprehensive assessment and progress tracking system?",
      "description": "Review if the code includes various test modes (multiple choice, spelling, matching, etc.) and maintains learning statistics. Check if it provides performance metrics like accuracy rates, mastery levels, and learning curves. Deduct 5 points if assessment lacks variety, and 5 points if there's no progress visualization. Give 10 points for a complete system with diverse test types and detailed analytics.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the software provide effective vocabulary organization by units/themes?",
      "description": "Check if vocabulary is properly organized according to PEP 8th grade textbook units, allowing students to focus on specific sections. The system should allow filtering by unit, difficulty level, and mastery status. Deduct 3 points if unit organization is missing, 3 points if there's no difficulty classification, and 4 points if there's no custom list feature. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as incorrect inputs, data loading failures, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the learning experience (e.g., 1. Visual mnemonics for vocabulary 2. Game-based learning modules 3. Voice recognition for pronunciation practice). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar learning methods (e.g., multiple flashcard systems with overlapping functionality) 2. Function modules unrelated to vocabulary learning (e.g., a built-in general calculator) 3. Fancy effects that affect performance (e.g., excessive animations that slow down word transitions). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data/learning logic/view layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern educational software design principles: 1) Age-appropriate color scheme for 8th graders 2) Proper layout spacing and information hierarchy 3) Professional font system with good readability (body font size â‰¥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for distracting color combinations, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and developmentally appropriate?",
      "description": "Judge whether the dynamic effects conform to adolescent learning characteristics: 1) Clear feedback for right/wrong answers within 100ms 2) Appropriate animation duration between 300-500ms 3) Intuitive navigation suitable for 13-14 year old users. Deduct 5 points for each operation without feedback, 3 points for distracting transitions, and 5 points if key learning functions are difficult to locate. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "medium"
}