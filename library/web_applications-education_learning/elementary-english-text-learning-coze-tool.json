{
  "index": 1607,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to provide executable code whenever possible. How should I create a tool for elementary school English text learning using Coze?",
  "checklist": [
    {
      "id": 0,
      "title": "Is the elementary English learning tool conceptually well-defined?",
      "description": "Review whether the solution clearly defines the core learning objectives for elementary English (vocabulary, reading comprehension, phonics, etc.). Evaluate if the content is age-appropriate and follows pedagogical principles for language acquisition. Score 0 if no clear learning objectives are defined, 5 if basic objectives exist but lack depth, and 10 if comprehensive learning goals with progression paths are established.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the Coze bot configuration fully implemented?",
      "description": "Check whether the code includes complete Coze bot setup instructions, including persona definition, knowledge base configuration, and prompt engineering. Deduct 5 points if the bot configuration lacks educational scaffolding, and 3 points if the bot doesn't include error handling for child interactions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are interactive learning modules designed for the tool?",
      "description": "Evaluate whether the solution implements engaging interactive components (quizzes, flashcards, story completion exercises, etc.) using Coze's capabilities. Check if the modules include proper feedback mechanisms for young learners. Deduct 5 points if interactivity is limited to basic Q&A, 3 points if feedback is generic rather than personalized. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is there an appropriate difficulty progression system?",
      "description": "Assess whether the tool includes a system for adapting content difficulty based on learner progress (vocabulary complexity increases, sentence structure advancement, etc.). Examine if there's logic for tracking student progress and adjusting content accordingly. Deduct 5 points if there's no adaptation mechanism, 3 points if progression lacks smoothness. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common issues in educational technology (such as unclear student inputs, repetitive questions, off-topic interactions, etc.) and provide appropriate guidance. Code with strong robustness should be able to effectively redirect learners back to educational objectives, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the solution includes surprise features that enhance the learning experience (e.g., 1. Animated character rewards for achievements 2. Voice interaction capabilities 3. Personalized learning paths based on interests). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Overlapping educational modules that teach the same concept in similar ways 2. Features unrelated to elementary English learning (e.g., advanced grammar unsuitable for the age group) 3. Overly complex interactions that could confuse young learners. Deduct 3 points for each redundancy found, and directly deduct 10 points if core learning functions are interfered with by redundant features.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (separating content/interaction logic/user progression tracking), reusability of educational components, and documentation quality. Deduct 5 points if global state management is chaotic; deduct 5 points if code organization makes content updates difficult; deduct 5 points if configuration lacks comments explaining pedagogical choices. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet child-friendly design standards?",
      "description": "Evaluate whether the design follows child-UX principles: 1) Age-appropriate visuals with clear, simple layouts 2) Large, readable text (minimum 16px, rounded friendly fonts) 3) Consistent, intuitive navigation with visual cues. Deduct 3 points for each complex menu structure, 5 points for overwhelming visual elements, and 5 points for inadequate spacing between interactive elements. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the learning interaction engaging and encouraging?",
      "description": "Judge whether the interactions support positive learning behaviors: 1) Immediate, constructive feedback for answers 2) Celebration of achievements with appropriate rewards 3) Gentle, encouraging correction for mistakes. Deduct 5 points for delayed or missing feedback, 3 points for discouraging messaging, and 5 points for lack of progression visibility. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "medium"
}