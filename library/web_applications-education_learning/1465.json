{
  "index": 1465,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to produce executable code for demonstration. Write a visualization-based Q&A software that includes 20 questions.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the Q&A system core functionality fully implemented?",
      "description": "Review whether the code accurately implements a complete question-answer system with 20 questions through HTML/JavaScript, including question navigation, answer selection/input validation, and scoring mechanism. Score 0 if basic Q&A logic is missing, 5 if only simple question display is implemented, and 10 if complete interactive Q&A with proper validation and scoring is included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the visualization component effectively implemented?",
      "description": "Check whether the visualization includes dynamic progress indicators, interactive charts/graphs for results display, and real-time visual feedback during Q&A sessions. Must include data visualization libraries (Chart.js/D3.js) or custom SVG implementations. Deduct 5 points if only static progress bars are used, and 3 points if result visualization lacks interactivity. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the question management system well-designed with proper data structure?",
      "description": "Evaluate whether the 20 questions are properly structured with categorization, difficulty levels, and metadata. Check if question randomization, filtering, and adaptive questioning logic are implemented. Deduct 5 points if questions are hard-coded without structure, and 3 points if no question management features exist. Full score requires dynamic question loading and intelligent sequencing.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is comprehensive user progress tracking and analytics implemented?",
      "description": "Check whether the code includes detailed progress tracking, performance analytics, time tracking per question, and historical data storage. Must include visual dashboards showing user performance trends and detailed statistics. Deduct 5 points if no data persistence is implemented, and 3 points if analytics are basic without visualization. Give 10 points if fully implemented with rich analytics.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid inputs, browser compatibility issues, data corruption, session timeouts, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Adaptive difficulty adjustment based on performance 2. Social sharing of results with custom visualizations 3. Voice input/output capabilities 4. Gamification elements like achievements/badges). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple scoring systems coexisting) 2. Function modules unrelated to Q&A (e.g., built-in games or entertainment features) 3. Excessive animations that impact performance (e.g., complex particle effects on every interaction). Deduct 3 points for each redundancy found, and directly deduct 10 points if core Q&A functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating question logic/UI components/data management), code organization, and maintainability. Deduct 5 points if global state pollution is found or no design patterns are used; deduct 5 points if code duplication rate is too high (over 30%); deduct 5 points if no proper separation of concerns exists. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional typography (body font size ≥ 14px, line height over 1.5 times) 4) Clear visual hierarchy for questions and answers. Deduct 3 points for each crowded visual element, 5 points for glaring color combinations, and 5 points for chaotic text layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Question transition animations (300-500ms duration) 2) Answer selection feedback ≤ 100ms 3) Progress visualization updates smoothly 4) Clear visual focus guidance throughout the Q&A flow. Deduct 5 points for each operation without feedback, 3 points for jarring transitions between questions, and 5 points for unclear navigation or progress indicators. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "medium"
}