{
  "index": 866,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, professional responses. Be sure to ensure that the code you generate is executable. Help me create a program for elementary school Chinese language recitation practice.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core Chinese recitation functionality implemented?",
      "description": "Evaluate whether the code implements the primary functionality for Chinese text recitation practice, including text display, reading aloud capability, and user input validation. Score 0 if the core mechanism is missing, 5 if only basic text display is implemented, and 10 if it includes comprehensive recitation features with pronunciation guidance.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is there an appropriate difficulty progression system?",
      "description": "Check if the program includes different difficulty levels suitable for elementary school students of various grades (e.g., simpler characters for lower grades, more complex texts for higher grades). Evaluate whether the system can adaptively adjust difficulty based on student performance. Score 0 if no progression system exists, 5 if basic levels are included, and 10 if a comprehensive adaptive difficulty system is implemented.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Does the program include a comprehensive vocabulary management system?",
      "description": "Assess whether the code implements proper vocabulary management, including categorization of characters/words by difficulty, pinyin notation, and frequency of appearance in elementary curriculum. Deduct 5 points if vocabulary is not age-appropriate, 3 points if pinyin is missing or incorrect, and 3 points if there's no organization by topics or lessons. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is there an effective feedback and scoring mechanism?",
      "description": "Evaluate whether the program provides clear feedback on student performance, tracking progress over time and highlighting areas for improvement. Check if there's a scoring system that rewards correct recitation and provides constructive feedback for mistakes. Score 0 if feedback is absent, 5 if basic scoring exists, and 10 if comprehensive performance analytics are included.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid user inputs, unexpected pronunciation attempts, system resource limitations) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the learning experience (e.g., 1. Animated character stroke order demonstrations 2. Gamification elements like achievement badges 3. Voice recognition for pronunciation correction). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple text-to-speech engines running simultaneously) 2. Function modules unrelated to Chinese language learning (e.g., a built-in calculator) 3. Fancy effects that affect performance (e.g., excessive animations that distract from learning). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating learning content/view/assessment components), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet child-friendly design standards?",
      "description": "Evaluate whether the design is appropriate for elementary school students: 1) Child-friendly color scheme with adequate contrast 2) Age-appropriate visual elements and typography (larger font size â‰¥ 16px, clear character display) 3) Intuitive layout with consistent navigation elements. Deduct 3 points for each hard-to-read text element, 5 points for visually overwhelming interfaces, and 5 points for unintuitive controls that would confuse children. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the learning interaction engaging and age-appropriate?",
      "description": "Judge whether the interaction design is suitable for elementary school students: 1) Clear instructions with audio cues 2) Appropriate reward mechanisms for correct recitations 3) Patience-oriented interaction flow with proper timing for young learners. Deduct 5 points if instructions are unclear, 3 points for lack of positive reinforcement, and 5 points for interactions requiring fine motor skills beyond the target age group. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "medium"
}