{
  "index": 1337,
  "question": "You are a coding expert. Please use your professional knowledge to generate accurate and professional responses. Make sure to ensure that the code you generate is executable for demonstration purposes. Help me write the project content for an AI teaching assistant educational platform.",
  "checklist": [
    {
      "id": 0,
      "title": "Is a comprehensive AI teaching assistant system architecture designed?",
      "description": "Review whether the architecture clearly defines the core components of an educational platform (user management, content delivery, AI assistant integration, database design). Score 0 if there's no clear architecture, 5 if basic components are outlined but connections are unclear, and 10 if a complete, well-integrated system architecture with clear data flows is provided.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the AI interaction model properly implemented?",
      "description": "Evaluate the implementation of the AI teaching assistant's core functionality, including natural language processing capabilities, response generation algorithms, and contextual understanding. Look for prompt engineering techniques, model selection justification, and handling of educational context. Deduct 5 points if the AI model lacks educational domain adaptation, and 3 points if there's no context retention between interactions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the educational content management system fully functional?",
      "description": "Check whether the platform includes a comprehensive content management system with curriculum organization, lesson planning, assessment creation, and learning path customization. Score 0 if content management is missing, 5 if basic management exists but lacks educational metadata/taxonomies, and 10 if there is a complete system with content versioning, learning objective mapping, and adapting content based on student progress.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are student progress tracking and analytics features implemented?",
      "description": "Evaluate the implementation of learning analytics, student performance tracking, and personalized feedback mechanisms. Score 10 points if the system includes comprehensive dashboards for educators, learning pattern detection algorithms, and personalized intervention suggestions. Deduct 5 points if analytics are limited to basic metrics without actionable insights, and 3 points if visualization components are missing or inadequate.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid user inputs, network interruptions, AI service failures, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the educational experience (e.g., 1. Real-time speech-to-text for lecture transcription 2. AI-generated visual concept maps 3. Personalized learning style adaptation). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar educational functions (e.g., multiple assessment systems) 2. Function modules unrelated to education (e.g., excessive gamification elements) 3. Fancy effects that affect platform performance (e.g., unnecessary animations that distract from learning). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core educational functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating educational content/AI service/user interface layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional educational design standards?",
      "description": "Evaluate whether the overall design follows modern educational UX principles: 1) Accessible color scheme (WCAG AA compliance) 2) Consistent information hierarchy (clear visual distinction between primary/secondary content) 3) Professional typography system (readable fonts with proper contrast). Deduct 3 points for cluttered learning interfaces, 5 points for cognitive overload-inducing layouts, and 5 points for non-intuitive navigation patterns. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the platform interaction designed for effective learning?",
      "description": "Judge whether the interaction design supports educational goals: 1) Clear feedback on learning activities within 1-2 seconds 2) Scaffolded interfaces that adapt to learner proficiency 3) Distraction-minimizing focus states during core learning activities. Deduct 5 points for cognitive friction in primary learning paths, 3 points for inconsistent interaction patterns across modules, and 5 points for excessive UI friction in assessment components. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "medium"
}