{
  "index": 872,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Be careful to ensure that the code you generate is executable for display. I want ready to generate a design for a daily water drinking, exercise, and customized app interface, where users can unlock official cards within the interface, similar to Duolingo and Candy Crush's path-unlocking interface. How should I write a prompt for ready to generate the style I want?",
  "checklist": [
    {
      "id": 0,
      "title": "Does the prompt effectively describe the daily tracking functionality requirements?",
      "description": "Check whether the prompt clearly specifies the core tracking features needed (water intake, exercise tracking, custom habit tracking). Evaluate if it includes specific metrics for each tracking type (e.g., ml/oz of water, minutes/calories for exercise, frequency/completion for custom habits). Deduct 5 points if tracking parameters are vague, 5 points if notification/reminder requirements are missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the card unlocking progression system adequately defined in the prompt?",
      "description": "Review if the prompt clearly explains the desired card unlocking mechanics, progression path structure, and achievement criteria. Check for specific references to Duolingo/Candy Crush mechanics as benchmarks. Score 0 if progression mechanics are entirely absent, 5 if only basic unlocking is mentioned, and 10 if the prompt includes detailed specifications for milestone achievements, conditional unlocking logic, and progression visualization requirements.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Does the prompt specify visual style requirements and UI/UX guidelines?",
      "description": "Evaluate if the prompt includes clear direction on desired aesthetic (e.g., flat design, skeuomorphic, minimalist), color scheme preferences, and specific UI component styling. Check if it references specific apps for visual benchmarking beyond just functionality. Deduct 5 points if visual style direction is completely missing, 3 points if only vague style references are included. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are gamification elements and reward systems clearly articulated?",
      "description": "Check if the prompt specifies desired gamification elements beyond card unlocking (e.g., points systems, badges, streaks, levels). Evaluate whether it defines how rewards should motivate users and integrate with the tracking features. Deduct 5 points if gamification elements are mentioned without connection to core functionality, 3 points if reward progression isn't specified. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the prompt requests code that can handle common abnormal situations (such as data input errors, network disconnections, accessibility considerations) and provide friendly error prompts or recovery mechanisms. Check if it asks for code that can effectively handle edge cases and device variations. Score 10 points for comprehensive robustness requirements, 5 points for average consideration, and 0 points if robustness is not mentioned.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the prompt requests innovative features that enhance the experience (e.g., 1. AR water visualization 2. Social challenges/competitions 3. Smart goal recommendations based on user data). Add 3 points for each practical innovative feature requested (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy in the prompt: 1. Overlapping tracking mechanisms 2. Feature requests unrelated to health/habit tracking 3. Complex visualizations that could hinder basic functionality. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are overshadowed by unnecessary feature requests.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the prompt request code with engineering quality?",
      "description": "Review if the prompt specifically asks for modular design, code organization standards, or architectural patterns. Check if it requests test coverage requirements or build process automation. Deduct 5 points if no code quality requirements are mentioned, 5 points if the prompt doesn't specify component reusability, 5 points if it doesn't address performance considerations. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the prompt specify interface vision meeting professional design standards?",
      "description": "Evaluate whether the prompt requests designs following modern design principles: 1) Harmonious color matching 2) Proper layout spacing 3) Professional font system and typography. Deduct 3 points if accessibility requirements are not mentioned, 5 points if responsive design requirements are missing, and 5 points if there's no request for consistent visual language. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Does the prompt request smooth and seamless dynamic interaction?",
      "description": "Judge whether the prompt specifies requirements for dynamic effects that conform to human perception: 1) Responsive feedback 2) Appropriate animation durations 3) Clear visual guidance. Deduct 5 points if the prompt doesn't mention interaction feedback requirements, 3 points if transition animations aren't addressed, and 5 points if it doesn't specify intuitive navigation requirements. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "easy"
}