{
  "index": 218,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to provide executable code when possible. Help me create an HTML webpage that compares chip performance.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the chip performance comparison functionality fully implemented?",
      "description": "Check whether the HTML/JavaScript code correctly implements a comprehensive comparison system for chip performance, including proper data visualization and comparison metrics (such as CPU benchmarks, GPU scores, memory bandwidth, power consumption). Score 0 if no comparison functionality exists, 5 points if only basic metrics are shown, 10 points if multiple sophisticated comparison metrics are implemented with proper visualization.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the data visualization component properly implemented?",
      "description": "Evaluate the implementation of charts and graphs (bar charts, radar charts, line graphs, etc.) for comparing chip performance. Check if appropriate visualization libraries (D3.js, Chart.js, Highcharts, etc.) are utilized effectively. Award 10 points for interactive, responsive visualizations with appropriate scales and legends; 5 points for static but accurate visualizations; 0 points if visualizations are missing or misleading.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the data source management properly implemented?",
      "description": "Check if the solution includes a proper data loading mechanism (AJAX calls, fetch API, or static data arrays), data filtering options, and the ability to update/refresh data. Deduct 5 points if there's no way to update or filter data, 3 points if the data structure is inefficient for the comparison task. Full score for a flexible data management system that can accommodate various chip types and metrics.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is user interaction for comparison selection implemented?",
      "description": "Assess whether users can select specific chips to compare, toggle between different metrics, customize the comparison view, and save/export comparison results. Deduct 5 points if chip selection is inflexible, 3 points if metric toggling is missing, and 3 points if there are no export/save capabilities. Award full points for an intuitive, comprehensive comparison UI.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code handles common edge cases (no data, incomplete data, unexpected data types, browser compatibility issues). Check if proper error handling exists with user-friendly error messages. Code with strong robustness should gracefully handle these cases, scoring 10 points. If robustness is average, give 5 points, and if no exception handling exists, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check for surprise features that enhance the experience (e.g., 1. Side-by-side animated comparison of thermal performance 2. Price-to-performance ratio calculator 3. Interactive historical performance trend visualization). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple chart libraries doing the same thing) 2. Function modules unrelated to chip comparison (e.g., unnecessary social media features) 3. Fancy effects that affect performance (excessive animations that slow rendering). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data management/visualization/UI components), code organization, and optimization techniques. Deduct 5 points if global variable pollution is found; deduct 5 points if the code duplication rate is too high; deduct 5 points if no performance optimizations are implemented for handling large datasets. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the design follows modern principles: 1) Harmonious color scheme that differentiates chips clearly 2) Proper information hierarchy with primary metrics emphasized 3) Responsive layout that works on different screen sizes. Deduct 3 points for cluttered visualization, 5 points for poor color differentiation making comparisons difficult, and 5 points for non-responsive designs. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge the quality of interactive elements: 1) Quick response time when selecting chips to compare (â‰¤100ms) 2) Smooth transitions when toggling between different metrics or views (300-500ms) 3) Intuitive tooltips or information panels for detailed chip specifications. Deduct 5 points for each interaction without visual feedback, 3 points for jerky transitions between comparison views, and 5 points for unintuitive navigation. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "medium"
}