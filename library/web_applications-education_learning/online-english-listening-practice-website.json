{
  "index": 495,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration purposes. Create an online English listening practice website where users can select from multiple audio exercises. When a user clicks the play button, the audio begins playing while displaying the listening comprehension questions. After completing the questions and submitting answers, the website immediately shows the correct answers and the user's score.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the audio player functionality fully implemented?",
      "description": "Review whether the code accurately implements an HTML5 audio player with essential controls (play, pause, volume, progress bar). Check if audio files can be loaded dynamically based on user selection and if the player correctly synchronizes with the exercise selection. Score 0 if the audio player is not functional, 5 if only basic playback works without proper controls, and 10 if the player is fully functional with all controls and proper error handling for audio loading failures.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the listening comprehension questions dynamically synchronized with audio?",
      "description": "Evaluate whether questions appear at appropriate times during audio playback, either all at once or timed to specific audio segments. Check if there's a mechanism to pause audio when navigating between questions or displaying new question sets. Deduct 5 points if questions aren't synchronized with audio content, 3 points if navigation between questions disrupts audio playback without recovery. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the answer submission and scoring system properly implemented?",
      "description": "Check if the submission mechanism captures all user answers, validates input completeness before submission, and calculates scores correctly. The system should prevent multiple submissions, clearly distinguish between correct and incorrect answers in the results display, and show percentage scores. Deduct 5 points if validation is missing, 3 points if the scoring algorithm has accuracy issues. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the exercise selection and management system well-designed?",
      "description": "Review the implementation of the exercise catalog, including proper categorization (by difficulty, topic, etc.), clear exercise descriptions, and seamless transitions between selection and exercise start. Check if exercise data is structured efficiently for loading and if user progress/history is tracked. Deduct 5 points if the selection interface is poorly organized, 3 points if exercise metadata is insufficient or missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as audio loading failures, network interruptions, invalid user inputs, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the learning experience (e.g., 1. Speech recognition for speaking practice 2. Progress tracking and analytics dashboard 3. Adaptive difficulty based on user performance). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple audio players on the same page) 2. Function modules unrelated to language learning (e.g., a built-in game not related to exercises) 3. Fancy effects that affect performance (e.g., unnecessary animations that slow page loading). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating audio handling/question display/scoring logic), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast sliding, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "easy"
}