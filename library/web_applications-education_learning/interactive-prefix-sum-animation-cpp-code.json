{
  "index": 421,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the code you generate is executable for demonstration. Create an interactive HTML animation that demonstrates and explains prefix sum arrays while simultaneously running C++ code line by line.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the prefix sum algorithm correctly implemented and explained?",
      "description": "Evaluate whether the code accurately implements the prefix sum algorithm in C++ and clearly explains the concept. Check if it covers the time complexity analysis (O(n) for construction, O(1) for queries), and demonstrates both the building process and query operations. Score 0 if the implementation is incorrect, 5 if basic implementation is present but lacks detailed explanation, and 10 if the implementation is correct and thoroughly explained with mathematical formulas and complexity analysis.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the HTML animation synchronize with C++ code execution?",
      "description": "Check if the HTML animation and C++ code execution are properly synchronized, with visual elements updating in real-time as the C++ code executes line by line. The animation should highlight the current line of code being executed and reflect changes in the corresponding data structures. Deduct 5 points if the animation and code execution are disconnected, 3 points if synchronization occasionally fails, and give full points if they remain perfectly in sync throughout the entire demonstration.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the visualization of the prefix sum array effective and informative?",
      "description": "Assess whether the visualization clearly shows how the prefix sum array is built and used. Check if it illustrates the relationship between the original array and the prefix sum array, shows the running sum calculation process, and demonstrates how range queries work. The visualization should include animated transitions between states. Deduct 5 points if the visualization is static, 3 points if transitions are abrupt, and give full points for smooth, clear, and informative visualizations.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the interactive component allow for user experimentation?",
      "description": "Evaluate whether users can interact with the demonstration through features like changing input arrays, adjusting animation speed, stepping through the code manually, or trying different range queries. The interaction should be intuitive and responsive. Deduct 5 points if interaction is limited to start/stop only, 3 points if interactions don't affect the visualization appropriately, and give full points for comprehensive, responsive interactive features.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as empty arrays, negative numbers, large inputs, etc.) and provide friendly error messages or recovery mechanisms. Code with strong robustness should handle edge cases effectively, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the learning experience (e.g., 1. Comparison with naive range sum method 2. Visual performance comparison charts 3. Interactive quiz elements to test understanding). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to calculate the same thing) 2. Function modules unrelated to prefix sums (e.g., a built-in calculator for unrelated operations) 3. Fancy effects that affect performance (e.g., excessive animations that distract from learning). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core educational functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating visualization/algorithm/interaction logic), code reusability, and maintainability. Deduct 5 points if global state pollution is found or appropriate design patterns aren't used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the code lacks comments or documentation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast animations, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "medium"
}