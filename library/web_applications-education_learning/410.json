{
  "index": 410,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to make the generated code executable for display. Write me a Chinese Chess commentary mini-program in HTML that can interpret input move notations with a colloquial language style inspired by \"Journey to the West.",
  "checklist": [
    {
      "id": 0,
      "title": "Chinese Chess board visualization implementation",
      "description": "Evaluate whether the HTML/CSS implementation accurately renders a standard xiangqi (Chinese Chess) board with proper piece representations. Check if the board follows the traditional 9×10 grid with river boundary, and if pieces are visually distinguishable (red vs. black sides). Score 0 if the board is missing or fundamentally incorrect, 5 if basic structure exists with minor issues, and 10 if the board is professionally implemented with proper Chinese characters for pieces.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Move notation parsing accuracy",
      "description": "Review the code's ability to interpret standard Chinese Chess algebraic notation (e.g., '炮二平五', '马八进七'). Test with various move types including special cases like piece captures. Deduct 3 points if it only handles basic moves, 5 points if it fails on ambiguous notations (when two identical pieces could make the same move), and 7 points if it cannot interpret traditional Chinese notation formats. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "'Journey to the West' commentary style implementation",
      "description": "Assess whether the commentary system successfully incorporates the colloquial style and character references from 'Journey to the West'. Check for varied commentary that includes recognizable phrases from characters like Sun Wukong, Zhu Bajie, and Tang Sanzang. Score 0 if no stylistic elements are present, 5 if style appears but is inconsistent or repetitive, and 10 if the commentary cleverly integrates authentic character voices with chess strategy observations.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Move validation and game rules enforcement",
      "description": "Evaluate whether the code properly validates moves according to Chinese Chess rules (including piece-specific movement patterns, check conditions, and illegal moves). Test with edge cases like flying generals or restricted palace movements. Deduct 5 points if basic movement validation is missing, 3 points if special rules are not enforced, and 2 points if the checking mechanism is incomplete. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid move notations, illegal moves, out-of-sequence inputs, etc.) and provide friendly error messages in the 'Journey to the West' style. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Animation of pieces with 'Journey to the West' character resemblances 2. Sound effects matching the commentary style 3. Special visual effects for important moves like checkmate). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple move validation methods) 2. Function modules unrelated to Chinese Chess or 'Journey to the West' theme 3. Fancy effects that affect performance (e.g., excessive animations that slow down the program). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/commentary generation layers), code reusability, and maintainability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the code lacks proper commenting or documentation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows traditional Chinese aesthetic principles while remaining functional: 1) Appropriate use of colors (red and black theme with complementary accents) 2) Proper layout spacing (clear separation between board and commentary) 3) Professional font system (traditional Chinese calligraphy for pieces, readable font for commentary). Deduct 3 points for each crowded visual element, 5 points for inconsistent visual theme, and 5 points for poor readability. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the interaction design meets user expectations: 1) Commentary updates immediately after move input 2) Clear visual feedback when moves are executed or rejected 3) Intuitive input method for move notation. Deduct 5 points if commentary delays exceed 300ms, 3 points if move execution lacks visual feedback, and 5 points if the input mechanism is confusing or counterintuitive. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "medium"
}