{
  "index": 1402,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to make the generated code executable for demonstration. Please help me create test questions about West Asia and Southeast Asia suitable for seventh-grade students, along with a random question selection button. Include at least 40 questions.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the quiz system fundamentally implemented?",
      "description": "Review whether the code accurately implements a basic quiz application with question display, answer selection/submission, and result feedback. Score 0 if there's no quiz functionality, 5 if basic questions are displayed but without answer checking, and 10 if the system includes questions, answer selection, validation, and feedback.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are there at least 40 geographically accurate questions about West Asia and Southeast Asia?",
      "description": "Check if the code contains at least 40 unique questions specifically about West Asia and Southeast Asia. Questions should be factually accurate and appropriate for seventh-grade students. Deduct 1 point for each question below 40, deduct 5 points if questions aren't focused on the required regions, and deduct 3 points if the difficulty level is clearly inappropriate for seventh-graders. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is a functional random question selection button implemented?",
      "description": "Evaluate if the code includes a working random question selection mechanism that presents different questions each time it's pressed. Check if the randomization algorithm ensures good distribution and doesn't repeat questions too frequently. Deduct 5 points if randomization is not implemented, deduct 3 points if it works but has noticeable patterns or repetitions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are the questions well-structured with proper educational content?",
      "description": "Assess whether the questions cover appropriate educational content (geography, culture, history, etc.) about West Asia and Southeast Asia. Check for a balanced distribution between regions, difficulty levels, and question types (multiple choice, true/false, etc.). Deduct 3 points for poorly structured questions, 3 points for uneven regional coverage, and 4 points for lack of educational value. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as unexpected user inputs, browser incompatibilities, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the learning experience (e.g., 1. Visual maps for context 2. Progress tracking 3. Difficulty adjustment based on performance). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to select random questions) 2. Function modules unrelated to the quiz (e.g., an unrelated game) 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data/view/control layers), maintainability, and code organization. Deduct 5 points if global variable pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the code lacks comments or is poorly organized. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface design meet professional educational standards?",
      "description": "Evaluate whether the overall design follows educational design principles: 1) Age-appropriate visual elements for seventh-graders 2) Clear and readable text (font size â‰¥ 16px, sufficient contrast) 3) Logical layout with intuitive navigation. Deduct 3 points for cluttered layouts, 5 points for poor readability, and 5 points for confusing navigation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and user-friendly?",
      "description": "Judge whether the interface provides appropriate feedback and guidance: 1) Clear indication of correct/incorrect answers 2) Intuitive navigation between questions 3) Visual feedback for button clicks and selections. Deduct 5 points for each operation without feedback, 3 points for confusing transitions between questions, and 5 points if the random selection button is difficult to locate or use. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Education/Learning",
  "difficulty": "easy"
}