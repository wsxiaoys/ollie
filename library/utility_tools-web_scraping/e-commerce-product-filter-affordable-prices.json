{
  "index": 1328,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure that any code you generate is executable and demonstrable. Could you write a small software for me that filters quality products at affordable prices on large e-commerce platforms?",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core product filtering logic correctly implemented?",
      "description": "Review whether the code implements robust filtering algorithms that can effectively identify quality-price ratio products. Check if it uses parameters like price ranges, ratings, review counts, and price history. Score 0 if there's no filtering logic, 5 if only basic filters exist, and 10 if advanced algorithms with multiple quality indicators are implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the software connect to e-commerce platforms properly?",
      "description": "Evaluate if the code properly implements API connections to major e-commerce platforms (Amazon, eBay, etc.) or uses proper web scraping techniques with respect to robots.txt. Check for error handling during connection failures, rate limiting management, and session persistence. Deduct 5 points if only one platform is supported, 3 points if there's no proper error handling. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there a proper data aggregation and normalization system?",
      "description": "Check if the code normalizes data from different sources into a unified format, handles currency conversions correctly, and standardizes product attributes. The system should be able to compare similar products across platforms. Deduct 5 points if normalization is missing, 3 points if comparison across platforms is not possible. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the software include price tracking and alerting functionality?",
      "description": "Verify if the code implements historical price tracking, price drop alerts, and deal notifications. Check if users can set thresholds for alerts and receive notifications through multiple channels (email, push notifications). Deduct 5 points if historical tracking is absent, 3 points if notification options are limited. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as API failures, malformed product data, network interruptions, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-powered deal recommendations 2. Price prediction algorithms 3. Social sharing of deals with friends). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar filters 2. Function modules unrelated to e-commerce filtering (e.g., a built-in weather app) 3. Fancy effects that affect performance (e.g., excessive animations on product cards). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data fetching/processing/presentation layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size â‰¥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Search results appear within 500ms 2) Transition animations controlled between 300-500ms 3) Clear visual feedback for filter applications. Deduct 5 points for each operation without feedback, 3 points for sluggish performance during filtering, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Web Scraping",
  "difficulty": "medium"
}