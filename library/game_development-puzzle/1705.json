{
  "index": 1705,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Ensure that the code you generate is executable for demonstration. Rewrite a simple match-3 game.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core match-3 gameplay mechanism properly implemented?",
      "description": "Review if the code accurately implements the match-3 mechanics, including grid initialization, piece swapping logic, match detection algorithms, and cascading effects after matches. Score 0 if core gameplay is missing, 5 if only basic matching works without cascades, and 10 if all standard match-3 mechanics are complete with proper animations.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the game state management comprehensive?",
      "description": "Evaluate whether the game properly handles different states (starting, playing, game over), tracks the score system, implements level progression, and manages win/lose conditions. Deduct 3 points if score tracking is simplistic, 3 points if level progression is missing, and 5 points if game state transitions are incomplete or buggy. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are special game mechanics and power-ups included?",
      "description": "Check for implementation of special match patterns (L-shapes, T-shapes, crosses) and corresponding special pieces or power-ups (row/column clearers, bombs, color eliminators). Give 3 points for basic special matches, 7 points for standard power-ups with animations, and 10 points for a complete system with varied special effects and strategic combinations.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the game responsive and adaptable to different screen sizes?",
      "description": "Assess whether the game uses responsive design techniques to adapt to different screen sizes and orientations. The grid should resize appropriately, UI elements should reposition correctly, and touch/click targets should be appropriately sized. Deduct 5 points if the game is fixed-size only, 3 points if it's partially responsive with layout issues, and give 10 points for fully fluid adaptation across devices.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid moves, rapid consecutive clicks, browser refresh, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Unique match patterns beyond the standard 3+ in a row 2. Dynamic difficulty adjustment 3. Thematic visual or audio effects tied to gameplay). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple scoring systems operating in parallel) 2. Function modules unrelated to match-3 gameplay (e.g., unnecessary mini-games) 3. Fancy effects that affect performance (e.g., excessive particle systems or animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/input handling), code organization, naming conventions, and optimization techniques. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if performance optimization is lacking for smooth gameplay. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern game design principles: 1) Harmonious color palette appropriate for the game theme 2) Proper layout with clear visual hierarchy 3) Professional typography and iconography (readable text, distinctive game pieces). Deduct 3 points for each inconsistent visual element, 5 points for poor color contrast affecting gameplay, and 5 points for cluttered UI that hinders game experience. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the game animations and interactions feel satisfying: 1) Piece swapping feels responsive (â‰¤ 100ms feedback) 2) Match clearing and cascade animations have appropriate timing (300-500ms) 3) Visual and audio feedback reinforce player actions. Deduct 5 points for laggy animations, 3 points for jarring transitions between game states, and 5 points for confusing or missing feedback on player actions. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Puzzle",
  "difficulty": "medium"
}