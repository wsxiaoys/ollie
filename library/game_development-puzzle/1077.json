{
  "index": 1077,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure that the code you provide is executable and can be demonstrated. Help me design a Tetris game code that can run directly in WeChat.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core Tetris gameplay mechanism fully implemented?",
      "description": "Review whether the code implements the complete Tetris game logic including random block generation, rotation, movement, collision detection, and line clearing. Score 0 if core gameplay is missing, 5 if basic movement is implemented but with defects, and 10 if all standard Tetris mechanics are properly implemented including wall kicks and SRS rotation system.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the game properly optimized for WeChat Mini Program environment?",
      "description": "Check if the code follows WeChat Mini Program development standards, uses appropriate APIs (wx.createCanvas, wx.createInnerAudioContext, etc.), and conforms to package size limitations (<2MB). Deduct 5 points if using incompatible libraries, 3 points if not using WeChat's lifecycle properly, and 2 points if not handling touch events correctly. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is mobile-specific control properly implemented for touch devices?",
      "description": "Evaluate whether the game implements intuitive touch controls (swipe gestures, tap areas) specifically designed for mobile interaction. Check if controls are responsive (<100ms latency), have proper hitbox sizes (â‰¥44px), and include visual feedback. Deduct 5 points for desktop-only controls, 3 points for unresponsive touch areas. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the game implement appropriate score and difficulty progression?",
      "description": "Check if the code implements Tetris scoring system (single/double/triple/tetris line clears), increasing difficulty (speed levels), and proper game progression management. Deduct 5 points if scoring is absent, 3 points if difficulty doesn't increase, and 5 points if there's no game over condition or restart mechanism. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as focus loss, WeChat app switching, memory limitations, unexpected user input) and provide friendly error handling or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Ghost piece preview 2. Hold piece function 3. Next pieces queue preview 4. WeChat friend leaderboards 5. Custom themes). Add 2 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple game loop systems) 2. Function modules unrelated to Tetris gameplay (e.g., irrelevant mini-games) 3. Fancy effects that affect performance (e.g., excessive particle animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (separation of game logic/rendering/input handling), code organization, and WeChat Mini Program best practices. Deduct 5 points if global state pollution is found; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if not using appropriate framework features like Component behaviors. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern mobile game design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout for portrait mode (elements properly scaled and positioned) 3) Respects different screen sizes (uses relative positioning/flex layouts). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for layouts that break on different devices. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the game performance and animations conform to mobile gaming standards: 1) Consistent 60fps framerate 2) Piece movement/rotation animations complete within 100ms 3) Line clear animations between 300-500ms 4) No input lag on controls. Deduct 5 points for frequent framerate drops, 3 points for jerky animations, and 5 points for delayed input response. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Puzzle",
  "difficulty": "hard"
}