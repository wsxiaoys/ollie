{
  "index": 933,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate is executable and can be displayed. I want to create a Windows built-in Spider Solitaire game and need to generate an HTML file.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core Spider Solitaire game logic fully implemented?",
      "description": "Review whether the code accurately implements the Spider Solitaire game mechanics, including deck generation, card dealing, valid move detection, completion sequences (when 13 cards of the same suit are collected), and game win/loss conditions. Score 0 if core game rules are missing, 5 if basic card movement is implemented but with rule errors, and 10 if all official Spider Solitaire rules are correctly implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the different difficulty levels (1, 2, or 4 suits) properly implemented?",
      "description": "Check if the code includes options for playing with 1 suit (easiest), 2 suits (intermediate), or 4 suits (hardest) as in the Windows version. Verify that the deck is properly constructed for each difficulty (e.g., 8 complete suit sets using different proportions based on the selected difficulty). Deduct 5 points if only one difficulty level is implemented, and 3 points if the suit distribution is incorrect. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the deal mechanism and stock pile functionality correctly implemented?",
      "description": "Evaluate whether the initial deal correctly places cards (face down and face up as appropriate) and if the stock pile allows dealing additional cards when no moves are available (10 cards at a time, once per click). Check if the game prevents dealing when there are empty columns. Deduct 5 points if the initial deal is incorrect, and 5 points if the stock pile mechanics have errors. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are the move tracking and undo/restart features implemented?",
      "description": "Check if the game tracks moves to allow undoing actions and if it provides a restart option without refreshing the page. The undo system should restore the exact game state before the last move, including card positions and facing. Deduct 5 points if undo only works for simple moves but not for completed sequences, and 5 points if the restart function doesn't preserve the same card arrangement for the current game. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle edge cases like rapid clicking, dragging cards outside the playable area, browser resizing, and attempting illegal moves. Code with strong robustness should prevent game-breaking scenarios and provide helpful feedback. Give 10 points if all common edge cases are handled, 5 points if only some are addressed, and 0 points if the game breaks easily under stress conditions.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Card movement animations that mimic physical cards 2. Hint system for possible moves 3. Statistics tracking for games played/won 4. Auto-complete feature when win is guaranteed). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple card movement algorithms) 2. Function modules unrelated to Spider Solitaire (e.g., unrelated mini-games) 3. Fancy effects that affect performance (e.g., excessive animations that slow down gameplay). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (separation of game logic, UI rendering, event handling), code readability, and implementation efficiency. Check if the code uses appropriate data structures for card representation and game state management. Deduct 5 points if global variables are overused; deduct 5 points if the code has significant duplication; deduct 5 points if the implementation uses inefficient algorithms that cause noticeable lag. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the game visually resembles the Windows Spider Solitaire: 1) Proper card design with clear suit symbols and numbers 2) Professional table background (green felt or similar) 3) Well-designed layout with appropriate spacing between columns. Deduct 3 points for unclear card designs, 5 points for inappropriate color schemes that hinder visibility, and 5 points for disorganized column arrangement. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge the quality of drag-and-drop implementation, card flipping animations, and sequence completion effects: 1) Cards should follow cursor precisely when dragged 2) Visual feedback should indicate valid/invalid drop targets 3) Completed sequences should have a satisfying animation when removed. Deduct 5 points for laggy card movement, 3 points for missing visual cues on valid/invalid moves, and 5 points if drag-and-drop is implemented but feels unnatural or clunky. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Puzzle",
  "difficulty": "hard"
}