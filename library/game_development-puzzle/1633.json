{
  "index": 1633,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be careful to ensure that the code you generate is executable. Create a web-based mini-game for the Chinese idiom solitaire game.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core idiom matching logic fully implemented?",
      "description": "Review whether the code accurately implements the Chinese idiom solitaire matching rules (matching the last character of one idiom with the first character of the next). Check for proper validation of user inputs against a comprehensive idiom database. Score 0 if the core matching logic is missing, 5 if basic matching works but with limitations, and 10 if all rules including special cases (rare characters, homonyms) are handled properly.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the idiom database comprehensive and well-structured?",
      "description": "Evaluate whether the code includes or connects to a substantial Chinese idiom database with at least 1000 common idioms. Check if the database structure efficiently enables first/last character lookups and prevents repetition in gameplay. Deduct 3 points if fewer than 500 idioms are included, 4 points if character-based indexing is inefficient, and 5 points if the database lacks meaning explanations for educational value. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the game progression and scoring system properly implemented?",
      "description": "Check if the game has clear progression mechanics (increasing difficulty, time limits, or chain bonuses), proper scoring logic (points based on character complexity, idiom rarity, or response time), and game ending conditions. Deduct 5 points for missing progression, 3 points for simplistic scoring, and 3 points for poorly defined win/lose states. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are accessibility and learning features incorporated?",
      "description": "Assess whether the game includes educational elements (idiom meanings, usage examples, historical context) and accessibility features (pinyin display, difficulty settings, hint systems). Deduct 3 points for each missing educational aspect and 4 points if accessibility considerations are absent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid inputs, server failures, edge cases like no more matching idioms available, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Animated character calligraphy 2. Traditional Chinese background music 3. Challenge modes like limited time or category-specific idioms). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to check idiom validity) 2. Function modules unrelated to the idiom game (e.g., unnecessary mini-games within the game) 3. Fancy effects that affect performance (e.g., excessive animations that slow down gameplay). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/data layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows traditional Chinese aesthetic principles while maintaining modern usability: 1) Traditional color palette appropriate for Chinese culture 2) Proper layout with adequate white space 3) Suitable typography using fonts that properly display Chinese characters. Deduct 3 points for cluttered visual elements, 5 points for culturally inappropriate visuals, and 5 points for poor readability of Chinese characters. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Immediate feedback when submitting idioms (â‰¤ 100ms) 2) Smooth transitions when showing new idioms or game states 3) Clear visual indicators for valid/invalid submissions. Deduct 5 points for each operation without feedback, 3 points for laggy animations during gameplay, and 5 points for confusing user interface that doesn't clearly show game state. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Puzzle",
  "difficulty": "hard"
}