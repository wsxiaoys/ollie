{
  "index": 1714,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Help me create a web-based Tetris mini-game.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core Tetris game mechanics fully implemented?",
      "description": "Review whether the code accurately implements the standard Tetris mechanics including tetromino generation, rotation, movement, collision detection, line clearing, and scoring system. Score 0 if the core gameplay is not implemented, 5 if only basic movement is implemented, and 10 if all standard Tetris rules (wall kicks, hard/soft drop, ghost piece) are fully included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the game feature proper tetromino shapes and colors?",
      "description": "Check if all 7 standard tetromino shapes (I, J, L, O, S, T, Z) are correctly implemented with proper colors following official Tetris guidelines. Verify that the rotation points are accurate and that the tetrominos display correctly on the grid. Deduct 2 points for each incorrect shape implementation and 3 points if the color scheme is inconsistent or clashes visually.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the game loop and state management properly implemented?",
      "description": "Evaluate the implementation of the game loop, including speed progression as score increases, proper pausing/resuming functionality, game over detection, and state transitions. Check for consistent frame rate and smooth animations. Deduct 5 points if speed progression is missing, 3 points if pause functionality is broken, and 5 points if game over detection fails.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the game include a proper scoring system and level progression?",
      "description": "Verify that the scoring system follows standard Tetris rules (points for line clears with bonuses for multiple lines), includes level progression that increases difficulty, and properly tracks and displays high scores. Deduct 3 points if scoring is inaccurate, 3 points if level progression is missing, and 4 points if there's no high score tracking.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as rapid key presses, browser resizing, focus loss, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Hold piece functionality 2. Next piece preview 3. Animated line clears 4. Sound effects/music 5. Custom themes). Add 2 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple movement handling systems) 2. Function modules unrelated to Tetris (e.g., unnecessary social media integration) 3. Fancy effects that affect performance (e.g., excessive particle effects). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/input handling), code organization, and maintenance patterns. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no clear separation between game logic and rendering. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching for the game elements and UI 2) Proper layout spacing and game board proportions 3) Professional font system for score/level display and menus (clear hierarchy, readable at all sizes). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for poor information hierarchy. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the control scheme and responsiveness appropriate?",
      "description": "Judge whether the game controls are intuitive and responsive: 1) Input delay â‰¤ 100ms 2) Support for both keyboard and touch controls on mobile 3) Clear visual feedback for actions. Deduct 5 points for sluggish controls, 3 points for missing key bindings (e.g., no hard drop), and 5 points for lack of mobile support if applicable. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Puzzle",
  "difficulty": "hard"
}