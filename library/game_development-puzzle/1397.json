{
  "index": 1397,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Ensure that the code you generate can be executed and displayed. Please help me write code for a Tetris game that can be played on a web browser.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core Tetris game mechanics properly implemented?",
      "description": "Review whether the code accurately implements standard Tetris mechanics including piece rotation, movement, collision detection, and line clearing. Score 0 if core mechanics are missing, 5 if basic movement and collision are implemented but with flaws, and 10 if all standard Tetris rules (including wall kicks, SRS rotation system, and proper piece spawning) are correctly implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the game board rendering and piece visualization complete?",
      "description": "Evaluate whether the game board is properly rendered with a clear grid system, displaying current and next pieces correctly. Check if piece colors follow the standard Tetris color scheme and if the ghost piece feature (showing where the piece will land) is implemented. Deduct 3 points if the grid system is unclear, 3 points if next piece preview is missing, and 5 points if ghost piece feature is absent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are all standard Tetris game features implemented?",
      "description": "Verify implementation of scoring system, level progression with increasing speed, next piece preview, held piece functionality, and game over detection. Deduct 2 points for each missing feature. Check if the scoring follows standard Tetris rules (single line: 100, double: 300, triple: 500, tetris: 800 points). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the control system responsive and user-friendly?",
      "description": "Check if keyboard controls are properly implemented (arrow keys/WASD for movement, space for hard drop, shift/C for hold), and if controls are customizable or if touch controls are available for mobile devices. Evaluate input responsiveness (key repeat rates for continuous movement). Deduct 5 points if basic controls are missing, 3 points if there's noticeable input lag, and 5 points if mobile compatibility is absent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as rapid input changes, browser resizing, focus loss during gameplay, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Battle mode or multiplayer options 2. Customizable themes or tetromino skins 3. Replay system or high score tracking). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple collision detection algorithms) 2. Function modules unrelated to Tetris (e.g., unnecessary animations or effects) 3. Fancy effects that affect performance (e.g., excessive particle effects that cause frame rate drops). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/input handling layers), code organization, and performance optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the game loop is inefficient (causing frame skips or performance issues). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors besides tetromino colors) 2) Proper layout spacing (clear separation between game board, score/level display, and next/hold piece areas) 3) Professional font system (readable score and level indicators, consistent style). Deduct 3 points for each cluttered UI element, 5 points for illegible text or confusing color schemes, and 5 points for poor organization of game elements. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the game animations and interactions conform to human perception characteristics: 1) Piece movement and rotation feels responsive (â‰¤ 100ms) 2) Line clearing animations are satisfying but not too lengthy (300-500ms) 3) Game over and level up transitions are clear. Deduct 5 points for stuttering animations, 3 points for inconsistent frame rates during intensive actions (like tetris clears), and 5 points for jarring transitions between game states. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Puzzle",
  "difficulty": "hard"
}