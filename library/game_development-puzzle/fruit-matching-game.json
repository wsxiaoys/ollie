{
  "index": 256,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Help me design a fruit matching game using HTML code. Please provide me with a complete code.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core fruit matching mechanic fully implemented?",
      "description": "Review whether the code accurately implements the matching logic, including detection of adjacent fruits, pattern recognition (minimum 3 matching fruits), and handling of cascading matches when new fruits fall. Score 0 if matching logic is missing, 5 if only basic matching is implemented, and 10 if advanced matching patterns and cascading effects are included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the game board generation and fruit distribution implemented properly?",
      "description": "Check whether the code includes dynamic board generation with appropriately sized grid cells, random but balanced fruit distribution (avoiding pre-matched patterns), and proper visual representation of different fruit types. Deduct 5 points if the board is static/hardcoded, 3 points if fruit distribution lacks variety. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there a scoring system and game progression mechanism?",
      "description": "Evaluate whether the game includes a proper scoring system (points for matches, bonuses for combos/larger matches), level progression, and increasing difficulty (time limits, target scores, etc.). Give 0 points if scoring is missing, 5 points if basic scoring exists, and 10 points if a complete progression system is implemented.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are animations and transitions implemented for game events?",
      "description": "Check whether the code implements smooth animations for fruit swapping, matching/disappearing, new fruits falling, and special effects for combos/achievements. Deduct 5 points if animations are missing entirely, and 3 points if they look choppy or incomplete. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as rapid clicking, invalid moves, browser resizing, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Special power-up fruits 2. Unique visual/sound effects for combos 3. Personalized themes or customization). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple scoring systems) 2. Function modules unrelated to fruit matching (e.g., unnecessary mini-games) 3. Fancy effects that affect performance (e.g., excessive particle effects). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/controller), code readability, and maintainability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no code documentation or comments. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (fruit colors contrast nicely with background) 2) Proper layout spacing (game board centered, UI elements properly aligned) 3) Professional font system (readable score display, clear instructions). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the game interactions conform to human perception characteristics: 1) Fruit selection/swapping responds within 100ms 2) Smooth transitions when fruits disappear/fall 3) Clear visual feedback for valid/invalid moves. Deduct 5 points for each operation without feedback, 3 points for jerky animations, and 5 points for confusing/unintuitive controls. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Puzzle",
  "difficulty": "medium"
}