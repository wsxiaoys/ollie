{
  "index": 1775,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, professional responses. Be sure to ensure that the generated code is executable for demonstration purposes. Demonstrate the process of deriving pi (π) in HTML.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the mathematical derivation of π correctly implemented?",
      "description": "Review whether the code accurately implements at least one classical π derivation method (such as Monte Carlo simulation, Leibniz series, Machin formula, or geometric methods like inscribed/circumscribed polygons). Check if the mathematical logic is sound and the algorithm converges correctly. Score 0 if no valid π derivation method is implemented, 5 if only basic approximation without proper mathematical foundation, and 10 if multiple rigorous mathematical methods are correctly implemented with proper convergence analysis.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the step-by-step visualization process effectively demonstrated?",
      "description": "Evaluate whether the HTML implementation provides clear visual representation of the π derivation process through interactive elements, animated sequences, or progressive displays. Check if intermediate steps, calculations, and convergence progress are visually presented. Deduct 5 points if only static results are shown without process visualization, and 3 points if the visualization lacks mathematical context or educational value. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is real-time calculation and accuracy tracking implemented?",
      "description": "Check whether the system provides real-time computation with accuracy metrics, iteration counters, and error analysis. Evaluate if the implementation shows convergence rates, precision improvements, and comparison with the actual π value. Deduct 5 points if no accuracy tracking is provided, and 3 points if the precision analysis is superficial or mathematically incorrect. Give 10 points for comprehensive accuracy analysis with multiple precision indicators.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are interactive controls and parameter adjustments provided?",
      "description": "Assess whether the code includes user controls for adjusting calculation parameters (such as iteration counts, sample sizes, or precision levels) and provides interactive elements to explore different aspects of π derivation. Check if users can modify computational parameters and observe real-time changes. Deduct 5 points if no interactive controls are implemented, and 3 points if controls are present but don't significantly impact the demonstration. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid input parameters, computational overflow, division by zero, infinite loops, or browser performance limitations) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should effectively handle edge cases and provide graceful degradation. Give 10 points for comprehensive error handling, 5 points for basic exception management, and 0 points if no exceptions are handled.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the mathematical demonstration experience (e.g., 1. Comparison of multiple π derivation methods simultaneously 2. Historical timeline of π calculation milestones 3. Interactive geometric proofs with dynamic manipulation 4. Performance benchmarking across different algorithms). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar calculation methods without clear distinction 2. Function modules unrelated to π derivation (e.g., unrelated mathematical calculators) 3. Overly complex animations that distract from the mathematical content. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core mathematical demonstration is interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating calculation logic/visualization/UI components), code organization, and performance optimization. Deduct 5 points if global state pollution is found or proper separation of concerns is not implemented; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if mathematical calculations are not optimized for performance. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching suitable for mathematical content (no more than 3 primary colors) 2) Proper layout spacing with clear mathematical notation (element spacing follows the 8px multiple principle) 3) Professional typography with readable mathematical expressions (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for distracting color combinations that hinder mathematical readability, and 5 points for poorly formatted mathematical expressions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the mathematical demonstration follows smooth interaction principles: 1) Parameter adjustment feedback delay ≤ 100ms 2) Animation transitions for mathematical processes controlled between 300-500ms 3) Clear visual focus on current calculation steps 4) Smooth progression through derivation stages. Deduct 5 points for each operation without immediate feedback, 3 points for jarring transitions that break mathematical flow, and 5 points for unclear progression indicators in the derivation process. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Statistical Analysis",
  "difficulty": "easy"
}