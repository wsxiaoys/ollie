{
  "index": 1430,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Design a chart to record and analyze the statistics of energy consumption and water consumption from multiple heat source stations.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the multi-source data collection and processing system fully implemented?",
      "description": "Review whether the code accurately implements data collection interfaces for multiple heat source stations through APIs/WebSocket connections, and whether it includes real-time data validation, data normalization, and timestamp synchronization mechanisms. Score 0 if no data collection logic is implemented, 5 if only basic data fetching is present, and 10 if comprehensive data processing with error handling and data quality checks are fully included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the energy and water consumption statistical analysis functions comprehensively implemented?",
      "description": "Check whether the statistical analysis includes multiple dimensions: hourly/daily/monthly consumption trends, peak/off-peak analysis, efficiency ratios, comparative analysis between stations, and anomaly detection algorithms. Deduct 5 points if aggregation functions are missing, and 3 points if no trend analysis is provided. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the chart visualization system designed with professional data presentation capabilities?",
      "description": "Evaluate whether the visualization system uses appropriate chart types (line charts for trends, bar charts for comparisons, heat maps for distribution patterns) with interactive features like zoom, filter, and drill-down capabilities. Deduct 5 points if chart types are inappropriate for data nature. Check whether real-time data updates are smoothly reflected in charts. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the complete data persistence and historical analysis framework constructed?",
      "description": "Check whether the code includes complete data storage mechanisms with efficient querying capabilities, historical data archiving, data export functionality (CSV/Excel/PDF), and backup/recovery systems. Deduct 5 points if no data persistence is implemented, and 3 points if historical data querying is inefficient (>3s response time). Give 10 points if fully implemented with optimized database indexing.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as network timeouts, invalid data formats, missing data points, API failures, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-powered consumption prediction models 2. Automated alert system for abnormal consumption patterns 3. Interactive dashboard with customizable widgets 4. Energy efficiency scoring system). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar chart types (e.g., multiple line chart libraries coexisting) 2. Function modules unrelated to energy/water analysis (e.g., built-in games or social features) 3. Excessive visual effects that slow down data rendering (e.g., unnecessary 3D animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if core analytics functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data layer/business logic/presentation layers), unit test coverage for calculation functions, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional dashboard design standards?",
      "description": "Evaluate whether the dashboard design follows modern data visualization principles: 1) Harmonious color coding for different data types (no more than 5 primary colors) 2) Proper grid layout with consistent spacing (following 8px grid system) 3) Professional typography hierarchy (headers ≥ 16px, body text ≥ 14px, line height 1.4-1.6). Deduct 3 points for each cluttered visual element, 5 points for poor color contrast in charts, and 5 points for inconsistent visual hierarchy. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the interactive elements conform to professional dashboard standards: 1) Chart loading and filtering response time ≤ 500ms 2) Smooth transitions between different time periods (200-400ms duration) 3) Clear hover states and tooltips with relevant context 4) Intuitive navigation between different analysis views. Deduct 5 points for each unresponsive interaction, 3 points for laggy chart updates, and 5 points for unclear data point identification. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Statistical Analysis",
  "difficulty": "hard"
}