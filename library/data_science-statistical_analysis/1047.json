{
  "index": 1047,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you provide is executable. Help me complete a program, a browser-based data post-processing software, with functions including data import, data processing, data statistics, and speed-based statistics.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the data import functionality comprehensively implemented?",
      "description": "Review whether the code supports multiple data formats (CSV, JSON, XML, Excel) with proper file validation and parsing. Check if drag-and-drop upload, batch import, and large file chunked processing are implemented. Score 0 if only basic file reading is present, 5 if single format import works, and 10 if multiple formats with validation and error handling are fully supported.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the data processing engine robust and feature-complete?",
      "description": "Evaluate whether the processing capabilities include data cleaning (null value handling, duplicate removal), transformation (filtering, sorting, grouping), and computation (aggregation, mathematical operations). Check for undo/redo functionality and processing history. Deduct 5 points if no data validation is present, 3 points if processing operations cannot be chained. Full score requires comprehensive processing pipeline with preview capabilities.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are comprehensive data statistics features implemented?",
      "description": "Check whether statistical analysis includes descriptive statistics (mean, median, mode, standard deviation), correlation analysis, and trend analysis. Verify if results are exportable and visualized through charts/graphs. Deduct 5 points if only basic calculations are present, 3 points if no visualization is provided. Full score requires advanced statistical functions with interactive charts.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is speed-based statistics functionality properly designed and implemented?",
      "description": "Evaluate whether the system can measure and analyze processing speeds, performance metrics, and throughput statistics. Check for real-time performance monitoring, benchmark comparisons, and performance optimization suggestions. Deduct 5 points if only basic timing is implemented, 3 points if no performance analytics dashboard is present. Full score requires comprehensive speed analysis with actionable insights.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as corrupted files, invalid data formats, memory limitations, browser compatibility issues) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should effectively handle edge cases including large dataset processing without crashes. Give 10 points if fully robust, 5 points if average, and 0 points if no exception handling.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Real-time data preview during processing 2. Smart data type detection and suggestions 3. Collaborative data sharing capabilities 4. Advanced visualization templates). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple data parsing logics coexisting) 2. Function modules unrelated to data processing (e.g., built-in games or social features) 3. Fancy effects that affect performance (e.g., excessive animations during data processing). Deduct 3 points for each redundancy found, and directly deduct 10 points if core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data processing/UI/storage layers), error handling coverage, and code organization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if no proper data validation or sanitization is implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times) 4) Clear data table presentation with proper contrast ratios. Deduct 3 points for each crowded visual element, 5 points for glaring color combinations, and 5 points for chaotic data layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) File upload feedback delay ≤ 100ms 2) Data processing progress indicators with smooth animations 3) Transition effects controlled between 300-500ms 4) Clear visual focus guidance during multi-step workflows. Deduct 5 points for each operation without feedback, 3 points for laggy data table scrolling, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Statistical Analysis",
  "difficulty": "hard"
}