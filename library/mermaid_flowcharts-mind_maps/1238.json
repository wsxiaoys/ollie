{
  "index": 1238,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Present the main research findings in a mind map format. Output using markmap code.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the markmap implementation complete and functional?",
      "description": "Evaluate whether the markmap code correctly implements the core HTML/JavaScript structure required for mind map visualization. Check if the code includes proper initialization of the markmap library, DOM element creation, and rendering logic. Score 0 if no functional markmap implementation is present, 5 if basic structure exists but has functionality issues, and 10 if the markmap renders properly with correct hierarchical structure.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the data structure for the mind map properly designed?",
      "description": "Assess whether the mind map data structure follows a logical hierarchical format with proper parent-child relationships. Check for appropriate nesting levels, clear node relationships, and coherent organization of information. Deduct 5 points if the hierarchy is flat or poorly organized, 3 points if some relationships are illogical. Full points require a well-structured tree-like data format that clearly represents conceptual relationships.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the research findings accurately represented in the mind map?",
      "description": "Verify that the mind map content properly represents research findings with accurate categorization and logical grouping. Primary branches should represent major research areas, with sub-branches showing detailed findings and relationships. Deduct 5 points if major research components are missing, 3 points if the categorization is misleading. Full score requires comprehensive representation of all key findings with proper context and relationships.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the markmap interactive and user-friendly?",
      "description": "Check whether the implementation includes essential interactive features like node expansion/collapse, zooming, panning, and clickable elements. Evaluate if the mind map responds to user interactions properly. Deduct 5 points if basic interactivity is missing, 3 points if the interaction is sluggish or unintuitive. Full points require smooth, intuitive interactions with appropriate visual feedback.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as malformed data, browser compatibility issues, rendering failures) and provide fallback mechanisms. Code with strong robustness should include error handling, browser feature detection, and graceful degradation. Give 10 points if comprehensive error handling exists, 5 points if basic error handling is present, and 0 points if no exception handling is implemented.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Custom node styling based on content type 2. Search/filter functionality for large mind maps 3. Export options to different formats). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant visualization libraries loaded but not used 2. Function modules unrelated to mind mapping 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data handling/visualization/interaction layers), code reusability, and optimization techniques. Deduct 5 points if global variable pollution is found or proper encapsulation is not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if no performance optimizations are implemented for large mind maps. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the mind map visualization follows modern design principles: 1) Harmonious color scheme for different hierarchy levels 2) Proper spacing between nodes and branches 3) Professional typography with readable font sizes and appropriate contrast. Deduct 3 points for cluttered node placement, 5 points for poor color choices that hinder readability, and 5 points for inconsistent visual hierarchy. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the mind map interactions conform to human perception characteristics: 1) Node expansion/collapse animations between 200-400ms 2) Smooth zooming and panning without visual stuttering 3) Clear visual focus indication for selected nodes. Deduct 5 points for jerky animations, 3 points for delayed response to user input, and 5 points for confusing state changes during interactions. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Mermaid Flowcharts-Mind Maps",
  "difficulty": "easy"
}