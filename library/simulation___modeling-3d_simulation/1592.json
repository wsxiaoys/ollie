{
  "index": 1592,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable. Create Vue 3 code for loading WMS layers in Cesium and implementing terrain excavation (hole digging) effects.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the Vue 3 integration with CesiumJS properly implemented?",
      "description": "Evaluate whether the code correctly integrates Vue 3 with CesiumJS using proper lifecycle hooks (onMounted, onBeforeUnmount). Check for proper viewer initialization, resource cleanup, and whether Vue reactivity is leveraged for Cesium entity management. Score 0 if there's no Vue 3 integration, 5 if basic integration exists but with flaws, 10 if integration follows Vue 3 best practices with Composition API.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the WMS layer loading functionality complete and configurable?",
      "description": "Examine whether the code implements proper WMS layer loading with all necessary parameters (URL, layers, format, transparent, etc.). Check if the implementation allows for dynamic layer switching, opacity control, and visibility toggling. Deduct 3 points if basic WMS parameters are missing, 3 points if there's no error handling for failed layer loading, and 2 points if layer customization options are limited. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the terrain excavation (hole digging) functionality correctly implemented?",
      "description": "Analyze the implementation of terrain excavation using techniques like ClippingPlanes or inverse polygon clipping. Check if the code handles proper depth testing, supports dynamic hole shapes, and maintains proper rendering performance. Score 0 if terrain excavation is not implemented, 5 if basic hole digging works but has visual artifacts or performance issues, 10 if the implementation is complete with smooth edges and proper depth handling.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the code provide interactive controls for excavation manipulation?",
      "description": "Evaluate whether the code allows users to interactively define and modify excavation areas through mouse/touch interactions. Check for features like drawing polygons, resizing holes, and adjusting excavation depth. Deduct 3 points if only predefined excavation areas are supported, 4 points if interaction is limited to basic operations, and 5 points if the interaction is not intuitive or has usability issues. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as WMS service unavailability, incorrect layer parameters, WebGL context loss, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Real-time excavation volume calculation 2. Multiple simultaneous excavation areas 3. Excavation animation effects with timing controls). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementations of similar functions (e.g., multiple clipping mechanisms coexisting) 2. Function modules unrelated to the core requirements (e.g., unnecessary camera animations) 3. Fancy effects that affect performance (e.g., excessive post-processing effects). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating Cesium logic/Vue components/utility functions), component reusability, and proper TypeScript typing (if applicable). Deduct 5 points if global state pollution is found or composition functions are not properly used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if proper types/interfaces are not defined for critical operations. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching for UI controls and visualization (no more than 3 primary colors) 2) Proper layout spacing for control panels (element spacing follows the 8px multiple principle) 3) Professional font system for labels and instructions (body font size â‰¥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Immediate visual feedback when defining excavation areas 2) Smooth camera transitions when focusing on areas 3) Responsive UI controls with clear state indication. Deduct 5 points for laggy excavation rendering, 3 points for jerky camera movements during interactions, and 5 points for delayed response when modifying excavation parameters. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-3D Simulation",
  "difficulty": "medium"
}