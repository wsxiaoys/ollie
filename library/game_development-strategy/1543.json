{
  "index": 1543,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate is executable for demonstration. Create a classical chess board in HTML format that can be run directly.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the chess board structure correctly implemented?",
      "description": "Review whether the code accurately creates an 8x8 chessboard using HTML structure with proper coordinate system (a1-h8). Check if the board uses semantic HTML elements and maintains correct alternating colors for squares. Score 0 if board structure is incorrect or non-standard, 5 if basic 8x8 grid is present but lacks proper labeling, and 10 if complete board with coordinates and proper square identification is implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are all chess pieces properly positioned and visually represented?",
      "description": "Evaluate whether all 32 chess pieces (16 white, 16 black) are correctly placed in their starting positions according to international chess standards. Check if pieces are clearly distinguishable and use appropriate symbols, images, or Unicode characters. Deduct 3 points for each incorrectly positioned piece type, 5 points if pieces are not visually distinct, and 2 points for poor piece representation quality. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the chessboard styling professionally designed with proper proportions?",
      "description": "Check whether the chessboard maintains proper square proportions (1:1 aspect ratio), uses traditional light/dark square colors (typically #F0D9B5/#B58863 or similar), and scales appropriately across different screen sizes. Board should be centered and have clear borders. Deduct 5 points if squares are not proportional, 3 points for non-standard colors, and 2 points for poor responsive design. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the implementation include proper board labeling and notation system?",
      "description": "Verify whether the chessboard includes file labels (a-h) and rank labels (1-8) positioned correctly around the board perimeter. Labels should be clearly visible and follow standard chess notation conventions. Score 0 if no labeling system exists, 5 if partial labeling is present but incomplete or incorrectly positioned, and 10 if complete and properly positioned algebraic notation system is implemented.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common edge cases such as different screen sizes, missing assets, and browser compatibility issues. The code should include proper error handling and fallback mechanisms. Code with strong robustness should gracefully handle these scenarios, giving 10 points. If robustness is average, give 5 points, and if no error handling exists, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that enhance the chess board experience?",
      "description": "Check whether the code includes additional features that improve usability (e.g., 1. Hover effects on squares 2. Click highlighting 3. Piece shadows or 3D effects 4. Board rotation capability 5. Theme switching). Add 2-3 points for each well-implemented enhancement (maximum 10 points). Features must be functional and add genuine value to the chess board experience.",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features or unnecessary complexity?",
      "description": "Strictly check for three types of redundancy: 1. Overly complex styling that doesn't improve functionality 2. Unnecessary JavaScript for a static board display 3. Excessive animations or effects that distract from the chess board. Deduct 3 points for each redundancy found, and directly deduct 10 points if core board functionality is compromised by unnecessary features.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code demonstrate good engineering practices?",
      "description": "Review code organization, CSS structure, and HTML semantics. Check for proper separation of concerns (HTML structure, CSS styling), clean and readable code formatting, appropriate use of CSS classes and IDs, and semantic HTML elements. Deduct 5 points for inline styles or poor organization; deduct 3 points for non-semantic HTML; deduct 2 points for inconsistent naming conventions. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the visual design meet professional chess board standards?",
      "description": "Evaluate whether the design follows traditional chess board aesthetics: 1) Appropriate contrast between light and dark squares 2) Professional color scheme that doesn't strain eyes 3) Clear piece visibility against square backgrounds 4) Proper spacing and margins. Deduct 3 points for poor color contrast, 5 points for unprofessional color choices, and 2 points for cramped or poorly spaced layout. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the chess board immediately usable and visually appealing?",
      "description": "Judge the overall user experience and visual impact: 1) Board loads quickly and displays correctly 2) All elements are properly aligned and proportioned 3) Professional appearance suitable for actual chess play 4) Clear visual hierarchy and focus. Deduct 5 points for slow loading or display issues, 3 points for misaligned elements, and 2 points for unprofessional appearance. Full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Strategy",
  "difficulty": "easy"
}