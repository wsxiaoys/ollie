{
  "index": 1106,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Ensure that the code you generate can be executed properly. Please create an HTML-based Dou Dizhu (Fighting the Landlord) card game that can be played offline without requiring an internet connection.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core card game rule system fully implemented?",
      "description": "Review whether the code correctly implements all Dou Dizhu rules including card ranking, valid combinations (singles, pairs, straights, bombs, etc.), and the special role of jokers. Score 0 if the core rules are missing, 5 if only basic play patterns are implemented, and 10 if all official rules including rocket bombs, sequence of 3 pairs, etc. are fully included with proper validation logic.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the single-player offline gameplay complete?",
      "description": "Check whether the implementation includes all game phases: card dealing, bidding for landlord role, playing rounds, determining winners, and scoring. The AI opponents should make reasonable decisions. Deduct 5 points if the bidding phase is missing, 5 points if the AI makes completely random moves without strategy, and 3 points if the scoring system isn't implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the card dealing and AI logic properly implemented?",
      "description": "Evaluate whether the card shuffling algorithm is truly random, if the 3 additional landlord cards are correctly allocated, and if the AI opponents have basic strategic thinking (e.g., saving bombs, recognizing card combinations). Deduct 5 points if the card distribution is predictable/biased, and 5 points if the AI cannot recognize basic strategic patterns like holding onto higher cards. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the game state management robust?",
      "description": "Check if the code maintains proper game state including current player's turn, played cards history, remaining cards for each player, and win conditions. There should be no way to get into an invalid game state. Deduct 5 points if game state can become corrupted during play, 3 points if the turn management can fail in edge cases, and 3 points if win detection has flaws. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid card plays, UI state corruption, rapid clicking, etc.) and provide friendly error handling or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Card play hints/suggestions 2. Game history replay 3. Different difficulty levels for AI 4. Card animation effects). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple card validation methods) 2. Function modules unrelated to the Dou Dizhu game (e.g., unnecessary minigames) 3. Fancy effects that affect performance (e.g., excessive animations that slow down gameplay). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/AI strategy layers), code organization, and maintainability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no clear separation between UI and game logic. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Clear card representation and differentiation 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for difficult-to-distinguish cards, and 5 points for chaotic player/card layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Card selection feedback delay ≤ 100ms 2) Card dealing and playing animations between 300-500ms 3) Clear visual guidance for whose turn it is. Deduct 5 points for each operation without feedback, 3 points for laggy card animations, and 5 points for unclear turn indicators. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Strategy",
  "difficulty": "hard"
}