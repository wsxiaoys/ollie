{
  "index": 77,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable when possible.\n\nPlease implement a strategy game: Economic Development and Technology Tree using HTML and JavaScript.\n\n**Task**: Design an economic development system where players can develop their economy and research technologies to unlock higher-level units and buildings.\n\n**Hint**: You can use a tech tree to manage the research order of technologies and allow players to freely choose their development direction.\n\nPlease include comments in your code to help other developers understand your implementation process.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the economic development system fully implemented?",
      "description": "Review whether the code accurately implements resource management (collection, storage, consumption), population management, and building construction mechanics through HTML/JavaScript. Check if there are clear economic progression paths with appropriate resource generation rates and balancing mechanisms. Score 0 if the core economic system is missing, 5 if only basic resource collection is implemented, and 10 if there's a complete economic simulation with multiple interdependent resources and feedback loops.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the technology tree research system properly implemented?",
      "description": "Evaluate whether the technology tree has clear progression paths, prerequisite relationships, and meaningful choices for players. Check if the implementation includes proper visualization of the tech tree, tooltips showing requirements and benefits, and proper unlocking mechanics. Score 0 if there's no tech tree, 5 if there's a basic linear progression system, and 10 if there's a complex branching tech tree with multiple viable research strategies and clear visual representation.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the higher-level units and buildings properly integrated with the tech tree?",
      "description": "Check if unlocked technologies meaningfully affect gameplay by enabling new units, buildings, or capabilities. Verify that unlocks are properly tied to research completion events and that the player receives clear feedback when new options become available. Deduct 5 points if unlocks don't change gameplay substantially, and 3 points if the connection between research and unlocks isn't clearly communicated to the player. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the player choice and strategic direction-setting implemented?",
      "description": "Assess whether players can meaningfully choose different development paths with distinct advantages and tradeoffs. Check for branching decisions in both economic and technological progression that lead to different gameplay experiences or victory conditions. Deduct 5 points if choices are mostly cosmetic without gameplay impact, and 3 points if there's only one optimal strategy. Give 10 points for multiple viable strategies with distinct strengths and weaknesses.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid inputs, resource shortages, attempting to research unavailable technologies, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dynamic market system with fluctuating prices 2. Random events affecting economy 3. Diplomatic interactions with AI factions). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple resource calculation systems) 2. Function modules unrelated to economic/tech development (e.g., a built-in weather simulator) 3. Fancy effects that affect performance (e.g., excessive particle animations for basic actions). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game state/view/controller layers), code organization, and appropriate design patterns. Check if the code includes comprehensive comments as requested in the requirements. Deduct 5 points if global state pollution is found; deduct 5 points if the code duplication rate is too high (over 30%); deduct 3 points if comments are missing or insufficient. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Clear visual hierarchy between resources, buildings, and tech tree elements. Deduct 3 points for cluttered UI elements, 5 points for poor color combinations that hinder readability, and 5 points for confusing information architecture. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and appropriate for a strategy game?",
      "description": "Judge whether the interaction design is appropriate for a strategy game: 1) Clear visual feedback for resource transactions and tech research 2) Tooltips or information panels for complex game elements 3) Appropriate pacing for economic development (neither too slow nor unrealistically fast). Deduct 5 points for unclear action feedback, 3 points for hidden critical information, and 5 points for confusing navigation between different game views. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Strategy",
  "difficulty": "easy"
}