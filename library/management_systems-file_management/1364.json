{
  "index": 1364,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate is executable. Help me provide an example of a WeChat Mini Program that downloads and forwards PDF files stored in the cloud.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the PDF download functionality fully implemented?",
      "description": "Review whether the code accurately implements the PDF download functionality through wx.downloadFile API, handling large files with proper timeout settings, progress indicators, and error handling. Score 0 if core download logic is not implemented, 5 if basic download works but lacks progress tracking, and 10 if it includes complete download management with retry mechanisms and network condition adaptations.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the file forwarding mechanism properly implemented?",
      "description": "Evaluate whether the code uses wx.shareFileMessage API correctly to forward PDF files to chats, including proper file selection UI, preview before sharing, and handling of sharing cancellations. Deduct 5 points if only direct forwarding is supported without preview, and 3 points if sharing failures aren't properly handled. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is cloud storage integration correctly implemented?",
      "description": "Check whether the code implements proper integration with cloud services (WeChat Cloud or third-party services like OSS), includes authentication mechanisms, handles token expiration, and implements proper file listing with pagination. Deduct 5 points if cloud authentication is hardcoded, 3 points if file listing doesn't support searching/filtering. Give 10 points if fully implemented with proper security measures.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is file management functionality comprehensive?",
      "description": "Assess whether the code includes complete file management features such as listing downloaded PDFs, deleting local files to free up space, file categorization, and search functionality. Deduct 5 points if only basic listing is provided, 3 points if file metadata (size, date) isn't displayed. The full score is 10 points for comprehensive file management with sorting options.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as broken downloads, network interruption, insufficient storage space, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should effectively handle edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. PDF thumbnail generation 2. Background downloading when app is inactive 3. Batch downloading/sharing). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple file download methods coexisting) 2. Function modules unrelated to PDF handling (e.g., built-in video player) 3. Fancy effects that affect performance (e.g., complex animations during downloads). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating network/storage/UI layers), component reuse, and proper code organization according to Mini Program standards. Deduct 5 points if global state pollution is found; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if custom components aren't properly encapsulated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows WeChat design guidelines: 1) Proper use of WeChat's design language 2) Consistent spacing and layout 3) Clear visual hierarchy for file operations. Deduct 3 points for each UI element that doesn't match WeChat's style, 5 points for overcomplicated interfaces, and 5 points for poor information hierarchy. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to Mini Program interaction standards: 1) Responsive download buttons 2) Smooth transitions between screens 3) Clear visual feedback during operations. Deduct 5 points for each operation without feedback, 3 points for laggy animations, and 5 points for unintuitive navigation patterns. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-File Management",
  "difficulty": "medium"
}