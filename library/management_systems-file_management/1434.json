{
  "index": 1434,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable and can be displayed. Help me write a web page code for a local HTML file that will display all image and video files from a folder located in the same directory as the HTML file when opened.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the local file system access implementation correct?",
      "description": "Evaluate whether the code properly implements the File System Access API or an alternative method to access local files. Check if it handles browser security restrictions correctly. Score 0 if no file system access is implemented, 5 if basic access is implemented but with limitations, and 10 if it handles all edge cases including file permissions and browser compatibility.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the file filtering mechanism work correctly?",
      "description": "Check if the code correctly identifies and filters image and video files by extension or MIME types. It should recognize common formats (JPG, PNG, GIF, WebP, MP4, WebM, etc.). Deduct 3 points if some common formats are missing, 5 points if the filtering logic has errors, and 7 points if there's no filtering at all.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the gallery rendering implementation complete?",
      "description": "Evaluate whether the code properly renders the discovered files in a gallery format. Check for proper image/video element creation, source setting, and container organization. Deduct 5 points if media doesn't display correctly, 3 points if there are rendering issues with certain file types, and 2 points if the display logic isn't optimized.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is there proper error handling and user feedback?",
      "description": "Assess whether the code includes comprehensive error handling for cases like permission denied, unsupported files, or empty directories. Check if clear feedback is provided to users when issues occur. Deduct 5 points if critical errors aren't handled, 3 points if error messages are unclear, and 2 points if minor edge cases are unhandled.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid file formats, large files, many files, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Thumbnail generation 2. Sorting options 3. Lightbox preview 4. Lazy loading for better performance). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple file loading methods) 2. Function modules unrelated to file display (e.g., a built-in editing tool) 3. Fancy effects that affect performance (e.g., unnecessary animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating file access/rendering/UI components), code organization, and maintainability. Deduct 5 points if global scope pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no clear separation of concerns. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional gallery design (consistent thumbnail sizes, proper margins). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic media layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Image loading indicators 2) Smooth transitions when browsing through media 3) Clear visual feedback for user actions. Deduct 5 points for each operation without feedback, 3 points for jarring transitions between media items, and 5 points for unresponsive UI when loading large files. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-File Management",
  "difficulty": "easy"
}