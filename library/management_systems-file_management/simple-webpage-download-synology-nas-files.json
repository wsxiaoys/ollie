{
  "index": 825,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate is executable for display. Help me create a simple webpage that can download files from a web folder in a Synology NAS.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the NAS connection and authentication mechanism properly implemented?",
      "description": "Review if the code provides proper authentication methods for Synology NAS (username/password, token-based, or OAuth). Verify error handling for authentication failures and timeout management. Score 0 if no authentication is implemented, 5 if basic authentication is present but lacks security features, and 10 if secure authentication with proper session management is fully implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the file browsing functionality complete?",
      "description": "Check if the code includes functions to browse directory structure, display file listings with metadata (size, date, type), and handle pagination for large directories. Verify that it properly handles special characters in filenames and hidden files. Give 10 points if fully implemented with sorting options, 5 points if basic browsing works but lacks features, 0 points if browsing is non-functional.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the file download mechanism properly implemented?",
      "description": "Evaluate if the code correctly implements file download functionality, including handling both small and large files, proper MIME type detection, and download progress indicators. Check for the ability to handle concurrent downloads and resumed downloads. Deduct 5 points if large file downloads aren't handled properly, 3 points if no download progress is shown. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is error handling comprehensive for network and file operations?",
      "description": "Assess the implementation of error handling for common scenarios like network timeouts, file not found, permission issues, and interrupted downloads. Check whether user-friendly error messages are displayed and recovery options are provided. Score 10 points if all common error cases are handled elegantly, 5 points if basic error handling exists, 0 points if errors crash the application.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as server disconnection, invalid paths, special characters in filenames, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Thumbnail previews for image files 2. Batch download functionality 3. Search capabilities across directories). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple file listing methods) 2. Function modules unrelated to file browsing/downloading (e.g., a built-in media player) 3. Fancy effects that affect performance (e.g., unnecessary animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/API/download logic), error handling consistency, and code reusability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no separation between presentation and business logic. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance for download buttons and actions. Deduct 5 points for each operation without feedback, 3 points for long loading times without indicators, and 5 points for confusing navigation or download workflow. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-File Management",
  "difficulty": "medium"
}