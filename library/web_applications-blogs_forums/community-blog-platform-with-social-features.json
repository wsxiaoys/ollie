{
  "index": 552,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the code you generate is executable whenever possible. Implement a community blog platform that includes user registration and login, avatar uploading, article publishing and editing. Users can follow other users, and the homepage will display the latest articles from followed users. Each article should support bookmarking and sharing functions, and users should be able to view a list of their bookmarked articles.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the user authentication system properly implemented?",
      "description": "Check whether the code includes secure user registration, login, password reset flows, and session management. Review for password hashing (bcrypt/Argon2), CSRF protection, and proper JWT/session implementation. Deduct 5 points if password storage is insecure, 3 points if registration lacks validation, and 5 points if the authentication flow has security vulnerabilities. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the avatar uploading feature fully functional?",
      "description": "Evaluate if the code includes file upload validation (file type/size checks), image processing (resizing/cropping), and secure storage with CDN integration. Check for client-side image preview before upload and server-side validation. Deduct 3 points if file type validation is missing, 3 points if there's no error handling for failed uploads, and 5 points if avatar storage isn't properly secured. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are article CRUD operations completely implemented?",
      "description": "Verify that the code supports full article lifecycle: creation with rich text editing, reading with proper formatting, updating with revision history, and deletion with confirmation. Check for draft saving functionality and content validation. Deduct 5 points if the rich text editor is missing essential features (image embedding, formatting), 3 points if article updates don't preserve history, and 5 points if content validation is inadequate. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the social functionality (following, feeds, bookmarking) work properly?",
      "description": "Assess the implementation of user following system, personalized feeds based on followed users, and article bookmarking functionality. Check for real-time feed updates, bookmark organization features, and sharing capabilities (social media integration, link copying). Deduct 3 points if the feed algorithm doesn't prioritize relevant content, 3 points if bookmark management is limited, and 5 points if social sharing options are missing. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid input, network errors, concurrent operations, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Smart content recommendation engine 2. Dark mode with automatic switching 3. Reading time estimation and progress tracking). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple validation systems coexisting) 2. Function modules unrelated to blog platform (e.g., a built-in game system) 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating frontend/backend, using MVC or similar patterns), test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast scrolling, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Blogs/Forums",
  "difficulty": "hard"
}