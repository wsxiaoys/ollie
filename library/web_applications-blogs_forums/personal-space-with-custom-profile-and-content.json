{
  "index": 1809,
  "question": "You are a coding expert. Please use your professional knowledge to generate accurate, expert responses. Make sure the code you provide is executable and demonstrable. Write a complete personal space using HTML, where the avatar and nickname can be customized through popup windows. It should allow posting of videos, images, text, music and other content. The UI must be aesthetically pleasing, and the data should be stored so it won't be lost when refreshing the page.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the customization system for avatar and nickname fully implemented?",
      "description": "Evaluate whether the popup windows for avatar/nickname customization function properly. Check if the avatar upload supports cropping, preview, and multiple file formats (JPG, PNG, WebP). Verify if the nickname change includes validation (length limits, forbidden characters). Score 0 if not implemented, 5 if basic functionality exists but lacks validation, 10 if fully implemented with proper validation and error handling.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the content posting system support all required media types?",
      "description": "Check if the system allows posting videos (with proper player controls and format support), images (with preview and lazy loading), text (with rich text formatting), and music (with audio controls). Verify that each media type has appropriate UI elements for creation, display, and management. Deduct 3 points for each missing media type. Give full score only if all media types are supported with proper UI integration.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the data persistence implementation robust?",
      "description": "Verify if localStorage/IndexedDB is properly used for data persistence. Check for proper data serialization/deserialization, error handling during storage operations, and automatic data recovery on page load. Examine if there's a backup mechanism or migration strategy for data structure changes. Score 0 if data is lost on refresh, 5 if basic persistence exists but has limitations, 10 if the persistence layer is comprehensive with proper error handling.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the interactive UI for content creation and management well-designed?",
      "description": "Evaluate the content creation interfaces (post editor, media upload UI) and management features (edit, delete, archive). Check if there are intuitive controls for sorting/filtering content and organization options (categories, tags, favorites). Deduct 5 points if content cannot be edited after posting, and 3 points if management features are limited. Give 10 points if the interface is comprehensive and intuitive.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid file uploads, storage quota exceeded, network interruption, user operation errors) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dark mode toggle 2. Customizable themes/layouts 3. Content analytics/insights 4. AI-assisted content creation tools). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple image upload modules) 2. Function modules unrelated to personal space (e.g., a built-in game) 3. Fancy effects that affect performance (e.g., excessive animations or transitions). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/data/storage layers), organization of CSS (use of CSS variables or preprocessors), and script modularity. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no separation of concerns. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast scrolling, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Blogs/Forums",
  "difficulty": "easy"
}