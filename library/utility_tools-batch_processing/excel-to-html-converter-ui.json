{
  "index": 918,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Please output this Excel file to an HTML file with an aesthetically pleasing UI interface.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the Excel-to-HTML conversion functionality fully implemented?",
      "description": "Review whether the code accurately parses the Excel data structure, handles cell formatting (including borders, backgrounds, text alignment, merged cells), and properly converts it to HTML. Score 0 if no parser is implemented, 5 if basic tabular data is shown without formatting, and 10 if the full Excel structure with formatting is preserved.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are all essential Excel features properly rendered in HTML?",
      "description": "Check whether the code handles critical Excel features such as formulas, data types (text, numbers, dates), conditional formatting, and cell styles. Deduct 3 points if formulas aren't calculated properly, 3 points if data types aren't preserved, and 3 points if conditional formatting is missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the solution responsive and compatible across browsers?",
      "description": "Evaluate whether the HTML output adapts to different screen sizes and renders consistently across major browsers (Chrome, Firefox, Safari, Edge). The solution should use responsive design principles and include appropriate CSS media queries. Deduct 3 points for each major browser compatibility issue, and 5 points if the design breaks on mobile devices. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the solution handle large datasets efficiently?",
      "description": "Test whether the code efficiently handles large Excel files without causing performance issues. Look for techniques like lazy loading, virtualization for large datasets, or pagination. Deduct 5 points if the solution slows down significantly with moderate-sized tables (>500 rows), and 10 points if it crashes with large datasets. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as malformed Excel files, missing data, invalid cell references, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Interactive sorting/filtering capabilities 2. Search functionality within the table 3. Export back to Excel or CSV 4. Print-friendly version). Add 2.5 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant parsing logic (e.g., multiple ways to handle the same Excel feature) 2. Function modules unrelated to Excel-to-HTML conversion (e.g., added image galleries) 3. Fancy effects that affect performance (e.g., unnecessary animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating parsing logic/rendering/styling layers), code reusability, and clear documentation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's inadequate documentation or comments. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size â‰¥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Scroll performance at 60fps 2) Hover/selection states provide clear feedback 3) Loading indicators for data processing. Deduct 5 points for jerky scrolling, 3 points for missing state indicators, and 5 points for unresponsive UI during data operations. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Batch Processing",
  "difficulty": "easy"
}