{
  "index": 953,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the code you generate is executable and ready for demonstration. Design a small, immediately playable game consisting of multiple-choice questions, similar to a character development/life simulation game.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the multiple-choice question system properly implemented?",
      "description": "Evaluate whether the code implements a robust question system with clear data structure for questions, options, and results. Check for features like question randomization, answer tracking, and proper state management. Score 0 if no functional question system exists, 5 if basic functionality is present but lacks variety, 10 if the system is comprehensive with validation and variety.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the character development/life simulation aspect implemented?",
      "description": "Check if the code includes character state variables (e.g., personality traits, skills, relationships) that evolve based on player choices. Verify the presence of a cause-effect system where choices influence character development. Score 0 if there's no character development, 5 if basic stat tracking exists, 10 if comprehensive character evolution with meaningful impacts is implemented.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the game flow and progression logic fully functional?",
      "description": "Analyze whether the code manages game stages, progression, and events properly. Look for features like branching storylines, milestone events based on character development, and proper game ending conditions. Deduct 5 points if progression is linear without branches, 3 points if there's no clear ending. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the game immediately playable with minimal setup?",
      "description": "Verify that the code can run directly in a browser without complicated setup steps. Check if it includes all necessary resources bundled together, proper initialization, and clear instructions for players. Deduct 5 points if external dependencies aren't properly managed, 5 points if initialization requires manual steps. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid user input, browser compatibility issues, or unexpected game states) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dynamic character portraits that change with development 2. Animated transitions between questions 3. Background music/sound effects tied to character mood). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple scoring systems coexisting) 2. Function modules unrelated to the character simulation (e.g., unnecessary mini-games) 3. Fancy effects that affect performance (e.g., excessive animations slowing gameplay). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game data/logic/view layers), maintainability, and code organization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no clear separation of concerns. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during transitions, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Role-Playing",
  "difficulty": "easy"
}