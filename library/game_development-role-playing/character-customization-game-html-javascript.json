{
  "index": 48,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration whenever possible.\n\nPlease use HTML and JavaScript to implement a character customization game that allows players to customize their character's appearance and abilities. You should provide a user interface that allows players to select different skins, colors, and ability configurations.\n\nInclude comments in your code so other developers can understand your implementation process.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the character customization interface fully implemented?",
      "description": "Review whether the code accurately implements all core customization elements including skin selection, color customization, and ability configuration through HTML/JavaScript. Score 0 if the core interface elements are missing, 5 if only partial customization options are available, and 10 if the interface provides comprehensive character customization with visual previews.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the appearance customization system comprehensive?",
      "description": "Evaluate the range and depth of appearance customization options. Check for variety in character elements (face, hair, body, clothing, accessories), color selection mechanisms (RGB/HSL pickers, preset palettes), and whether changes are immediately reflected in a preview. Deduct 3 points if fewer than 3 customizable appearance elements are available, 3 points if color customization is limited, and 2 points if there's no real-time preview. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the ability configuration system balanced and interactive?",
      "description": "Check whether the ability configuration system includes a balanced point allocation mechanism (e.g., limited total points, trade-offs between different abilities), visual representation of character stats, and effect demonstration. Deduct 5 points if there are no constraints on ability allocation, 3 points if visual feedback on abilities is missing, and 2 points if there's no effect preview or explanation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is persistence and state management properly implemented?",
      "description": "Evaluate whether the code includes state management to persist customization choices (localStorage/sessionStorage), undo/redo functionality, save/load character presets, and clean state transitions. Deduct 5 points if no persistence mechanism exists, 3 points if state history management is absent, and 2 points if there are no preset management features. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid inputs, browser compatibility issues, performance under heavy customization, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Randomize character feature 2. Social sharing of character designs 3. Animation of character based on ability scores 4. AR/camera integration for custom faces). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple color pickers with the same functionality) 2. Function modules unrelated to character customization (e.g., an unnecessary minigame) 3. Fancy effects that affect performance (e.g., excessive particle effects). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/logic/data layers), code comments as requested, consistency in naming conventions, and overall architecture. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if code comments are insufficient or misleading. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Changes to character appearance are instantly reflected (≤ 100ms) 2) Transition animations when switching between customization sections (300-500ms) 3) Clear visual feedback when selecting options. Deduct 5 points for each operation without feedback, 3 points for lagging character preview updates, and 5 points for unintuitive navigation between customization sections. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Role-Playing",
  "difficulty": "medium"
}