{
  "index": 386,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Try to ensure that the generated code is executable for demonstration. I am currently writing a Chrome browser extension.\n\nI want to implement the ability to control target webpage elements' clicking through my extension window.\n\nMy current browser extension page is as follows:\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>Order Assistant</title>\n  <!-- Must strictly maintain loading order -->\n  <script src=\"js/jquery.min.js\"></script>\n  <script src=\"js/jquery.cookie.js\"></script>\n  <script src=\"js/miaoshou.js\"></script>\n  <script src=\"js/main.js\" type=\"module\"></script>\n\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n</head>\n<body>\n  <button id=\"getOrderBtn\" class=\"jq-btn\">Get Order</button>\n  <button id=\"refreshOrderBtn\" class=\"jq-btn\">Refresh Order</button>\n  <div id=\"resultContainer\"></div>\n</body>\n</html>\n```\n\nI'm using \"manifest_version\": 3,\nThe target website I want to operate on is erp.91miaoshou.com\nThe button to operate is the search button with attribute .J_queryFormSearch\nI want to use the query.main.js library.\nPlease help me output the complete extension code and the calling method.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the Content Script properly implemented to interact with target webpage?",
      "description": "Check if the code properly implements a content script that can access and interact with DOM elements on erp.91miaoshou.com. It should include proper event listeners, message passing mechanisms between content script and background/popup, and target the correct elements (.J_queryFormSearch). Score 0 if content script is missing, 5 if basic implementation exists but has limitations, 10 if fully implemented with error handling.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the Message Passing mechanism between extension components properly implemented?",
      "description": "Evaluate whether the code implements Chrome extension message passing (chrome.tabs.sendMessage/chrome.runtime.sendMessage) correctly for communication between popup, background script, and content script. Check for proper message formatting, response handling, and error handling. Deduct 5 points if one-way communication only, 3 points if error handling is missing. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the manifest.json file correctly configured?",
      "description": "Check if manifest.json follows Manifest V3 specification with proper permissions (host permissions for erp.91miaoshou.com), content scripts declaration with correct matches, background script configuration, and web_accessible_resources if needed. Deduct 3 points for each missing critical permission, 5 points for incorrect content script matching patterns, and 5 points for security issues like excessive permissions. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the integration with query.main.js library properly implemented?",
      "description": "Verify whether query.main.js is correctly incorporated and utilized in the extension. Check if it's properly loaded, initialized, and used for DOM manipulation. Examine if the library's dependencies are handled correctly. Deduct 5 points if the library is included but not properly initialized, 3 points if there are conflicts with jQuery, 5 points if the library functionality is reimplemented instead of using the library. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as target element not found, website structure changes, network issues, permission denials, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Advanced element targeting with fallback selectors 2. Visual feedback for clicked elements 3. Automated action sequences). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to access the DOM) 2. Function modules unrelated to the clicking operation (e.g., unnecessary analytics) 3. Fancy effects that affect performance (e.g., complex animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI logic/DOM manipulation/message passing), error handling, and code organization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no clear separation of concerns. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the extension UI meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the extension interaction smooth and responsive?",
      "description": "Judge whether the interaction flows conform to user expectations: 1) Click feedback delay ≤ 100ms 2) Clear visual indication of operation success/failure 3) Logical workflow from popup to target website. Deduct 5 points for each operation without feedback, 3 points for delayed responses (> 300ms), and 5 points for confusing user flow. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Automation",
  "difficulty": "easy"
}