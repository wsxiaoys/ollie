{
  "index": 1566,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable for demonstration. Help me create a bi-weekly plan random selection tool using Python with buttons that randomly selects from the following items: Wood Carving, I Ching, Seal Engraving, Shoujinti Calligraphy, Butterfly Knife, Sketching, Small Liuren Divination, Chess, HTML Front-end Development, Piano, Sign Language, Novel, Comic Strip, Traditional Chinese Medicine, 3D Printing, Website Development, 3D Modeling, Braille. The buttons should be light gray, the page background should be black, and the text should be white. I have a website and need clear code that I can integrate into my webpage.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core random selection functionality properly implemented?",
      "description": "Evaluate whether the Python code correctly implements a random selection algorithm that evenly distributes the probability across all items. Check if the selection is truly random (using appropriate libraries like random.choice) and if it avoids repetition in consecutive selections. Score 0 if randomization is missing, 5 if basic randomization exists but lacks proper distribution, and 10 if it includes both even distribution and protection against repeated consecutive selections.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the bi-weekly plan concept properly reflected in the implementation?",
      "description": "Check if the tool addresses the bi-weekly nature of the planning. Does it track selection history? Does it have date tracking or scheduling capabilities? Does it prevent the same activity from being selected twice in the same bi-weekly period? Deduct 3 points if it lacks date tracking, 3 points if it doesn't maintain history, and 4 points if it allows duplicate selections within the same period. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the UI implementation complete with the specified design requirements?",
      "description": "Verify that the interface strictly follows the specified color scheme (light gray buttons, black background, white text). Check if the buttons are properly styled, accessible, and responsive. Deduct 3 points if colors don't match specifications, 3 points if buttons are poorly styled, and 4 points if the interface is not responsive to different screen sizes. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the code structured for easy website integration?",
      "description": "Evaluate whether the provided code can be easily integrated into an existing website. Check for modular design, self-contained components, minimal dependencies, and clear documentation on how to integrate. Deduct 3 points if external dependencies aren't clearly specified, 3 points if integration instructions are missing, and 4 points if the code heavily modifies existing page structure. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser inconsistencies, failed random selections, empty item lists, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Animation effects when selecting an item 2. Option to exclude certain activities 3. History tracking with visual representation). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple random selection methods) 2. Function modules unrelated to the random selection tool (e.g., unnecessary analytics) 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating logic/view layers), code reusability, and maintainability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the code is not well-documented with comments. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (proper contrast between black background, white text, and light gray buttons) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for poor contrast or readability, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual feedback when an item is selected. Deduct 5 points for each operation without feedback, 3 points for sluggish response times, and 5 points for confusing or unclear selection indication. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Automation",
  "difficulty": "easy"
}