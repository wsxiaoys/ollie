{
  "index": 1734,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the generated code is executable for demonstration. Write an HTML code that can randomly assign people from an uploaded Excel file into groups, allowing selection of the number of people per group, while balancing gender and department distribution. The groups should be displayed on the page after completion, with a button to export the results to Excel. The Excel workbook contains a sheet with \"Name,\" \"Gender,\" and \"Department\" data.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the Excel file upload and parsing functionality properly implemented?",
      "description": "Check if the code uses reliable libraries (like SheetJS/xlsx) to handle Excel file parsing. Verify that file validation is implemented (file type check, size limit). Verify error handling for malformed Excel files. Score 0 if file upload is missing, 5 if basic upload works but lacks validation, and 10 if robust upload with proper error handling is implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the group assignment algorithm properly implemented with balanced distribution?",
      "description": "Evaluate if the algorithm effectively balances gender and department distribution across groups. Check if it handles edge cases (uneven distribution possibilities, empty cells). The algorithm should use statistical methods to ensure fairness. Deduct 5 points if only simple random assignment is implemented, 3 points if either gender or department balancing is missing, and give 10 points if sophisticated balancing with optimization logic is implemented.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the group size selection interface properly implemented?",
      "description": "Check if users can select the number of people per group through an intuitive interface. Verify validation for input values (minimum/maximum constraints based on total participants). The interface should provide real-time feedback on how many groups will be created. Deduct 3 points if validation is missing, 5 points if there's no feedback on resulting group count, and give 10 points for a complete implementation with validation and feedback.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the group result display and Excel export functionality properly implemented?",
      "description": "Verify that grouped results are clearly displayed on the page with visual separation between groups. Check if the export to Excel functionality works correctly, maintaining the grouping structure in the exported file. Deduct 5 points if export doesn't maintain proper formatting, 3 points if visual display is confusing, and give 10 points for clear display with proper Excel export functionality.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid Excel files, unexpected data formats, empty fields, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Visualization of gender/department distribution per group 2. Drag-and-drop manual adjustments after auto-grouping 3. Group naming or color-coding options). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple parsing methods) 2. Function modules unrelated to group assignment (e.g., unnecessary analytics) 3. Fancy effects that affect performance (e.g., complex animations that slow down the page). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data processing/UI/export functionality), code organization, and maintainability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no separation of concerns. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast processing, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Automation",
  "difficulty": "easy"
}