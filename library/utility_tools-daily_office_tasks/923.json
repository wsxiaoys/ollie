{
  "index": 923,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Read excel file and display data, HTML code",
  "checklist": [
    {
      "id": 0,
      "title": "Is the Excel file reading functionality properly implemented?",
      "description": "Check if the code correctly implements file input for Excel files (.xlsx, .xls, .csv) and handles different Excel formats. Score 0 if no file loading is implemented, 5 if only basic file reading is done, and 10 if the implementation handles various Excel formats with robust error checking for file corruption or format issues.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the data parsing and extraction logic complete?",
      "description": "Verify that the code correctly extracts data from Excel sheets, handling different data types (text, numbers, dates, formulas), empty cells, and merged cells. Deduct 3 points if certain data types aren't properly handled, 5 points if merged cells cause issues, and 3 points if there's no error handling for invalid data. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the HTML display of Excel data implemented effectively?",
      "description": "Evaluate whether the HTML representation maintains the original Excel structure (tables, rows, columns) with appropriate styling that resembles Excel's visual layout. Check if column widths, row heights, cell alignments, and text formatting are preserved. Score 0 if data is just dumped without structure, 5 if basic table structure exists, and 10 if the display closely resembles Excel's appearance.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are interactive data manipulation features implemented?",
      "description": "Check if the HTML implementation includes features like sorting, filtering, searching, or basic cell editing. Deduct 3 points for each missing core feature (sorting, filtering, search). Award full 10 points only if the implementation allows for data manipulation comparable to basic Excel functionality.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid Excel files, large datasets, unexpected data formats, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Live data visualization options 2. Excel formula support in the HTML view 3. Multi-sheet navigation tabs). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant libraries for similar functions (e.g., multiple Excel parsers loaded) 2. Function modules unrelated to Excel data display (e.g., unnecessary animations) 3. Overly complex implementations that affect performance (e.g., excessive DOM manipulation). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating file loading/parsing/display logic), error handling coverage, and proper documentation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there are no comments explaining complex logic. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern data presentation principles: 1) Clean table styling with appropriate borders and spacing 2) Visual hierarchy that makes headers distinct from data 3) Consistent typography and alignment across the table. Deduct 3 points for cluttered visual presentation, 5 points for inconsistent styling that makes data hard to read, and 5 points for poor responsive design on different screen sizes. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to user expectations: 1) File upload feedback is immediate 2) Large data sets load with progress indicators 3) Sorting/filtering operations complete within 300ms for standard datasets. Deduct 5 points for operations without loading indicators for large files, 3 points for jerky scrolling on large tables, and 5 points for unresponsiveness during data processing. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Daily Office Tasks",
  "difficulty": "medium"
}