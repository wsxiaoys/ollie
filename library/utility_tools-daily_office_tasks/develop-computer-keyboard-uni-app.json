{
  "index": 1460,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the code you generate is executable for demonstration purposes. Develop a computer keyboard using uni-app.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the basic keyboard UI layout correctly implemented?",
      "description": "Check whether the keyboard layout follows standard QWERTY design with proper key spacing and row alignment. Verify if all standard keys (letters, numbers, function keys) are present and properly sized. Score 0 if basic keyboard structure is missing, 5 if layout exists but has alignment issues, and 10 if the layout is professional and follows standard keyboard conventions.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the keyboard event handling system properly implemented?",
      "description": "Evaluate whether key press/release events are correctly captured and processed. Check if the code handles multi-touch scenarios and prevents ghost touches. The implementation should include visual feedback on key press. Deduct 5 points if key events don't trigger appropriate actions, and 3 points if the code doesn't handle simultaneous key presses. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are special keyboard features implemented?",
      "description": "Review implementation of modifier keys (Shift, Ctrl, Alt), toggle keys (Caps Lock, Num Lock), and special function keys. Check if the keyboard can switch between different layouts (e.g., alphabetic, numeric, symbol). Deduct 5 points if modifier keys don't change keyboard state properly, and 3 points if layout switching is buggy. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the uni-app cross-platform compatibility addressed?",
      "description": "Assess whether the code utilizes uni-app framework properly to ensure compatibility across multiple platforms (iOS, Android, H5, etc.). Check if platform-specific APIs are conditionally used when necessary. Deduct 5 points if the code only works on one platform, 3 points if there are minor platform-specific issues. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as rapid tapping, long-press operations, screen orientation changes, etc.) and provide friendly error recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Haptic feedback 2. Swipe typing capability 3. Custom theme options 4. Predictive text/auto-complete). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple event handlers for the same action) 2. Function modules unrelated to keyboard functionality (e.g., unnecessary animations) 3. Fancy effects that affect performance (e.g., complex animations that slow down key response). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI layout/event handling/state management), component reusability, and proper use of uni-app best practices. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if uni-app components are not properly leveraged. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern keyboard design principles: 1) Consistent key sizes and spacing 2) Clear visual differentiation between key groups 3) Professional color scheme with good contrast for readability 4) Proper use of shadows and highlights for visual depth. Deduct 3 points for each visual inconsistency, 5 points for poor color contrast that affects usability, and 5 points for unprofessional appearance. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Key press visual feedback delay â‰¤ 50ms 2) Smooth animations for layout transitions 3) Proper haptic/audio feedback when available. Deduct 5 points for each key press without feedback, 3 points for laggy animations during typing, and 5 points for unresponsive interfaces during fast typing. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Daily Office Tasks",
  "difficulty": "easy"
}