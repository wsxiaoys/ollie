{
  "index": 1359,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to provide executable code for demonstration when possible. Help me write a small Japanese translation program.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core translation functionality implemented correctly?",
      "description": "Evaluate whether the code implements the essential Japanese-English translation capability through proper API integration or local dictionary lookup. Score 0 if no translation functionality exists, 5 if basic word translation is implemented, and 10 if the solution handles phrases, sentences, and different forms of Japanese characters (hiragana, katakana, kanji).",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the input processing for Japanese text properly implemented?",
      "description": "Check whether the code correctly handles various Japanese character inputs (hiragana, katakana, kanji, romaji conversion) and implements proper text segmentation for accurate translation. Deduct 3 points if romaji-to-kana conversion is missing, 3 points if text normalization is absent, and 4 points if there's no handling for mixed character types. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there a flexible user interface for text input and display?",
      "description": "Assess whether the program provides a clean interface for entering Japanese text and viewing translations, including proper text direction support and appropriate fonts. Score 0 for command-line only, 5 for basic UI without proper Japanese text rendering, and 10 for a complete UI with proper Japanese font rendering and text direction support.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the program handle language-specific features?",
      "description": "Evaluate support for Japanese-specific linguistic features such as particles, honorifics, context-dependent meanings, and furigana display. Deduct 2 points for each missing key feature. Check if the solution provides explanations for grammar points or cultural context when relevant. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid input, network interruption when using translation APIs, unsupported characters, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Audio pronunciation 2. Handwriting recognition for kanji 3. Character stroke order animations 4. Context-aware translations). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple translation engines doing the same thing without clear benefit) 2. Function modules unrelated to translation (e.g., a built-in game) 3. Fancy effects that affect performance (e.g., unnecessary animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating translation logic/UI/API layers), error handling, and documentation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there are no comments or documentation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the design follows modern standards: 1) Clear visual distinction between Japanese and English text 2) Proper font selection for both languages (proper rendering of Japanese characters) 3) Consistent spacing and alignment for bidirectional text. Deduct 3 points for each readability issue, 5 points for inappropriate font usage, and 5 points for poor layout that affects text legibility. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the translation experience is responsive and intuitive: 1) Translation response time â‰¤ 1 second 2) Smooth transitions between input and output 3) Clear visual feedback during processing. Deduct 5 points for each operation without feedback, 3 points for noticeable lag in translation responses, and 5 points for confusing interaction flow. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Daily Office Tasks",
  "difficulty": "easy"
}