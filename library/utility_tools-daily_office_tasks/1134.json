{
  "index": 1134,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, professional responses. Be sure to ensure that the code you generate can be executed and displayed properly. Please help me write a browser extension that runs in the Chrome browser sidebar.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the Chrome extension manifest and core architecture properly implemented?",
      "description": "Review whether the code includes a properly configured manifest.json (v3 or v2) with correct permissions, service worker registration, and sidebar panel configuration. Check if the extension architecture follows Chrome's extension development standards including proper message passing between content scripts, background scripts, and popup/sidebar components. Score 0 if manifest is missing or invalid, 5 if basic structure exists but lacks proper permissions or service worker setup, and 10 if fully compliant with Chrome extension standards including proper API usage.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the sidebar panel functionality correctly integrated with Chrome's Side Panel API?",
      "description": "Evaluate whether the extension properly utilizes Chrome's Side Panel API (chrome.sidePanel) for sidebar implementation, including proper panel registration, opening/closing mechanisms, and tab-specific or global panel behavior. Check if the sidebar can be properly activated through extension actions and maintains proper lifecycle management. Deduct 5 points if using deprecated methods or workarounds instead of official Side Panel API, and 3 points if panel state management is inconsistent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is cross-context communication and data persistence properly handled?",
      "description": "Check whether the extension implements proper communication between different contexts (background, content script, sidebar panel) using chrome.runtime messaging or other appropriate APIs. Evaluate if data persistence is handled correctly using chrome.storage API with proper synchronization and error handling. Deduct 5 points if using unreliable communication methods (like DOM events for cross-context communication), and 3 points if storage operations lack proper error handling or data validation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the extension's security model and permission handling implemented correctly?",
      "description": "Review whether the extension follows Chrome's security best practices including Content Security Policy (CSP) compliance, minimal permission requests, and proper handling of user data. Check if the extension properly sandboxes potentially dangerous operations and validates all inputs. Deduct 5 points if requesting excessive permissions not used by the extension, and 5 points if CSP violations or XSS vulnerabilities are present. Give 10 points if security model is properly implemented with principle of least privilege.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as extension context invalidation, Chrome API failures, network interruptions, user permission denials, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should effectively handle extension-specific edge cases like context menu conflicts and tab lifecycle issues, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the extension includes surprise features that enhance user productivity or browsing experience (e.g., 1. Smart content extraction and organization 2. Cross-tab data synchronization 3. Integration with external APIs for enhanced functionality 4. Keyboard shortcuts and accessibility features). Add 3 points for each practical innovative feature implemented that goes beyond basic sidebar functionality (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple storage mechanisms coexisting) 2. Function modules unrelated to the extension's core purpose (e.g., built-in games or unnecessary widgets) 3. Performance-heavy features that slow down browser experience (e.g., constant DOM polling or excessive background processing). Deduct 3 points for each redundancy found, and directly deduct 10 points if core extension functionality is interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/logic/API layers), proper build process for extension packaging, and code organization following extension development best practices. Deduct 5 points if global namespace pollution is found or extension-specific patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process doesn't properly handle extension packaging and asset optimization. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the sidebar UI follows modern design principles and Chrome's design guidelines: 1) Harmonious color matching that integrates well with Chrome's interface (no more than 3 primary colors) 2) Proper layout spacing that works in narrow sidebar context (element spacing follows the 8px multiple principle) 3) Professional typography system (body font size ≥ 14px, line height over 1.5 times) 4) Responsive design for different sidebar widths. Deduct 3 points for each crowded visual element, 5 points for colors that clash with Chrome's theme, and 5 points for poor mobile responsiveness in sidebar context. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the sidebar interactions conform to browser extension UX standards: 1) Click feedback delay ≤ 100ms without blocking browser performance 2) Smooth transitions that don't interfere with main browser UI (300-500ms duration) 3) Clear visual focus guidance and keyboard navigation support 4) Proper loading states for async operations. Deduct 5 points for each operation without feedback, 3 points for animations that cause browser lag, and 5 points for poor accessibility or keyboard navigation support. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Daily Office Tasks",
  "difficulty": "medium"
}