{
  "index": 526,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to provide executable code in your responses. Develop an online scheduling tool where users can add, edit, and delete events in a calendar view. The tool should support day, week, and month view switching, event recurrence settings, reminder functionality, and a search feature to quickly find specific events. User data should be able to synchronize across different devices.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the calendar view system fully implemented?",
      "description": "Review whether the code accurately implements day/week/month view switching through HTML/JavaScript, and whether it includes proper date navigation, grid layout rendering, and event positioning calculations. Check if timezone handling is implemented and if the calendar correctly displays events across different time periods. Score 0 if core calendar rendering is not implemented, 5 if only basic month view is working, and 10 if all three views are fully functional with smooth transitions.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the event management functionality complete?",
      "description": "Evaluate whether the code implements comprehensive CRUD operations for events including add/edit/delete with form validation, drag-and-drop rescheduling, event recurrence patterns (daily/weekly/monthly/yearly), and exception handling for recurring events. Check if event data structure supports all required fields (title, description, start/end time, recurrence rules, reminders). Deduct 5 points if recurrence logic is missing, 3 points if drag-and-drop is not implemented. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the reminder system and search functionality implemented?",
      "description": "Check whether the reminder system uses appropriate browser APIs (Notification API, Service Workers) with proper permission handling and scheduling mechanisms. Evaluate search functionality including text search across event titles/descriptions, date range filtering, and real-time search suggestions. Deduct 5 points if notifications don't work properly, 3 points if search is limited to exact matches only, 2 points if no search result highlighting. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is cross-device data synchronization properly designed?",
      "description": "Evaluate whether the synchronization mechanism includes proper data persistence (localStorage/IndexedDB), conflict resolution strategies for concurrent edits, and real-time sync capabilities (WebSocket/Server-Sent Events). Check if offline functionality is supported with proper sync when connection is restored. Deduct 5 points if no real-time sync is implemented, 3 points if conflict resolution is missing, 5 points if offline mode is not supported. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid date inputs, network interruption, browser storage limits, concurrent editing conflicts, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Smart scheduling suggestions based on user patterns 2. Integration with external calendar services (Google Calendar, Outlook) 3. Collaborative scheduling with invitation system 4. AI-powered event categorization 5. Weather integration for outdoor events). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple date picker implementations coexisting) 2. Function modules unrelated to scheduling (e.g., built-in games or social media feeds) 3. Fancy effects that affect performance (e.g., excessive animations or heavy graphics). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core scheduling functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating calendar logic/view components/data layer), component reusability, state management patterns, and build process automation. Deduct 5 points if global state pollution is found or proper architecture patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if no bundling/minification process is implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the calendar design follows modern UI principles: 1) Clean and readable date grid layout with proper contrast ratios 2) Consistent color coding system for different event types 3) Professional typography (calendar dates clearly readable, event text ≥ 12px) 4) Responsive design that works on mobile devices. Deduct 3 points for each cramped calendar cell, 5 points for poor color accessibility, and 5 points for non-responsive layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the calendar interactions conform to user expectations: 1) View switching animations ≤ 300ms 2) Event creation/editing modal appears within 100ms 3) Drag-and-drop operations provide clear visual feedback 4) Date navigation is intuitive with proper loading states 5) Touch gestures work properly on mobile devices. Deduct 5 points for each laggy interaction, 3 points for missing hover/focus states, and 5 points for confusing navigation patterns. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Other-Productivity/Scheduling",
  "difficulty": "hard"
}