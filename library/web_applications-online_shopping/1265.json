{
  "index": 1265,
  "question": "You are a coding expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you provide is executable and demonstrable. Implement seamless printing of retail receipts in a React frontend.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the receipt printing functionality fully implemented?",
      "description": "Review whether the code correctly implements receipt generation and printing in React, including handling of line items, price calculations, taxes, and discounts. Score 0 if core printing logic is missing, 5 if basic printing is implemented but lacks formatting options, and 10 if the solution offers complete receipt formatting with configurable templates.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the printing method compatible with different browsers and devices?",
      "description": "Evaluate whether the implementation uses cross-browser compatible APIs (like window.print()) or specialized libraries (like react-to-print) properly. Check if it handles different browser environments and printer configurations. Deduct 5 points if mobile printing is not supported, 3 points if print previews aren't available. Full score requires graceful fallbacks for environments without direct printing access.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there appropriate printer communication and error handling?",
      "description": "Check if the code handles printer connection issues, print job failures, and provides user feedback. Assess whether it implements polling for printer status or alternative delivery methods (email/PDF) when printing fails. Deduct 5 points if no error handling exists, 3 points if feedback is inadequate. Full score requires complete error recovery with actionable user guidance.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the receipt design handle various retail scenarios?",
      "description": "Evaluate if the implementation supports different receipt types (returns, exchanges, gift receipts), variable-length item lists, and special retail elements (loyalty points, coupons, QR codes). Deduct 3 points for each missing retail-specific feature. Give 10 points if the solution comprehensively addresses diverse retail scenarios.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as printer disconnection, malformed data, network issues) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Digital receipt copies to customer emails 2. Integration with customer loyalty systems 3. Thermal printer-optimized graphics). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementations of similar printing functions 2. Function modules unrelated to receipt printing (e.g., unnecessary analytics) 3. Heavy UI elements that could slow down the printing process. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating receipt data model/view/printing logic), unit test coverage for printing functions, and React best practices. Deduct 5 points if global state management is poorly implemented; deduct 5 points if there's excessive prop drilling or component coupling; deduct 5 points if there are no tests for critical printing functions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the receipt layout meet professional design standards?",
      "description": "Evaluate whether the receipt design follows retail standards: 1) Clear visual hierarchy with proper spacing 2) Appropriate font choices and sizing (readable on thermal paper) 3) Professional alignment of price columns and totals. Deduct 3 points for each layout inconsistency, 5 points for poor information hierarchy, and 5 points for layouts that would be illegible when printed. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the printing process user-friendly?",
      "description": "Judge whether the printing workflow is intuitive: 1) Clear print button placement 2) Appropriate user feedback during printing process 3) Print preview capabilities before committing to paper. Deduct 5 points if the user has no indication of printing progress, 3 points for unnecessary confirmation steps, and 5 points for unintuitive placement of printing controls. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Online Shopping",
  "difficulty": "medium"
}