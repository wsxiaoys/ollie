{
  "index": 756,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you provide is executable whenever possible. I am a clothing maker who wants to design a mini program that allows customers to independently select the clothing styles and details they want.",
  "checklist": [
    {
      "id": 0,
      "title": "Is there a complete clothing style selection system?",
      "description": "Evaluate whether the code implements a comprehensive clothing style selection system with clear categorization (tops, bottoms, dresses, etc.), filtering capabilities, and preview functionality. Score 0 if there's no selection system, 5 if only basic categories exist without filtering, and 10 if the system includes advanced filtering by material, occasion, season, etc.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the customization of clothing details fully implemented?",
      "description": "Check if the code allows for detailed customization of elements such as collars, sleeves, buttons, pockets, hems, etc. Deduct 3 points if any major clothing component can't be customized, 5 points if the customization options are too limited (less than 3 options per component). The full score is 10 points for comprehensive customization options with at least 5 options per component.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there a real-time visualization system for design changes?",
      "description": "Examine if the implementation includes a real-time rendering system that updates as customers make selections (using SVG/Canvas/WebGL). Check for features like zoom functionality, 360-degree rotation, and accurate representation of fabric textures. Deduct 5 points if visualizations lag more than 300ms, 3 points if texture rendering is unrealistic, and 3 points if rotation controls are missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is there a measurement and sizing system integration?",
      "description": "Review whether the code includes functionality for users to input or select body measurements, automatically suggest sizes, or visualize fit on different body types. Score 0 if there's no sizing system, 5 if there's only basic size selection without visualization, and 10 if there's an advanced system with body type simulation and precise fit prediction.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as incomplete selections, missing measurements, unsupported browser features, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AR try-on capabilities 2. AI-based style recommendations 3. Share design with friends for feedback). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple color pickers with different interfaces) 2. Function modules unrelated to clothing design (e.g., a built-in game while waiting) 3. Fancy effects that affect performance (e.g., unnecessary animations that slow down the design process). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/business logic/data models), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast selection changes, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Online Shopping",
  "difficulty": "medium"
}