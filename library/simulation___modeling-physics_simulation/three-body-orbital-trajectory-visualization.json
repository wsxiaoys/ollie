{
  "index": 1129,
  "question": "You are a coding expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration purposes. Write a visualization program for the three-body orbital trajectory using HTML.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the three-body physics simulation accurately implemented?",
      "description": "Review whether the code correctly implements Newton's gravitational equations and numerical integration methods (such as Runge-Kutta or Verlet integration) for three-body dynamics. Check if gravitational forces between all three bodies are calculated with proper vector mathematics and if the simulation maintains energy conservation principles. Score 0 if basic physics is wrong, 5 if only simplified gravity is implemented, and 10 if accurate three-body dynamics with proper numerical methods are fully implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the orbital trajectory visualization effectively rendered?",
      "description": "Evaluate whether the visualization uses appropriate HTML5 Canvas or SVG to render smooth orbital paths with historical trajectory trails. Check if the rendering includes proper scaling, coordinate transformation, and viewport management to display the complex orbital patterns clearly. Deduct 5 points if trajectories are choppy or discontinuous, 3 points if scaling is inappropriate making orbits hard to observe. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are interactive controls and real-time parameter adjustment provided?",
      "description": "Check whether the code includes interactive controls for adjusting simulation parameters such as initial velocities, masses, time step, and simulation speed. Evaluate if users can pause/resume, reset, or modify the system in real-time. Deduct 5 points if controls are unresponsive or cause simulation instability, 3 points if parameter ranges are not properly bounded. Give 10 points if comprehensive interactive controls are smoothly implemented.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the animation performance optimized and frame rate stable?",
      "description": "Assess whether the animation loop uses requestAnimationFrame for smooth rendering and maintains consistent frame rates (ideally 60fps). Check if the code implements proper performance optimization techniques such as object pooling, efficient collision detection, and avoiding unnecessary DOM manipulations. Deduct 5 points if frame rate drops below 30fps during normal operation, 3 points if animation stutters during parameter changes. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as extreme parameter values, numerical instabilities, browser compatibility issues, and user input errors) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should prevent simulation explosion and handle edge cases gracefully, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the visualization experience (e.g., 1. Multiple preset famous three-body configurations like Figure-8 or Lagrange points 2. Data export functionality for trajectory coordinates 3. Comparative view showing energy/momentum conservation graphs 4. Poincaré section analysis visualization). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar physics calculations (e.g., multiple integration methods running simultaneously) 2. Function modules unrelated to orbital simulation (e.g., built-in games or unrelated widgets) 3. Excessive visual effects that impact performance (e.g., complex particle systems or heavy animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core simulation is interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating physics engine/renderer/UI components), code organization with proper separation of concerns, and maintainable structure. Deduct 5 points if global variables pollute the namespace or no design patterns are used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if mathematical calculations are not properly encapsulated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern visualization principles: 1) Harmonious color scheme with good contrast for celestial bodies (no more than 3 primary colors) 2) Proper layout spacing with clear control panels (element spacing follows the 8px multiple principle) 3) Professional typography for labels and values (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for poor color choices that hinder visibility, and 5 points for chaotic interface layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the interactive elements conform to user experience standards: 1) Control response delay ≤ 100ms 2) Smooth transitions when changing parameters with duration between 300-500ms 3) Clear visual feedback for all user interactions 4) Intuitive zoom and pan controls for viewing different scales. Deduct 5 points for each unresponsive control, 3 points for jarring transitions during parameter changes, and 5 points for unintuitive navigation controls. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-Physics Simulation",
  "difficulty": "medium"
}