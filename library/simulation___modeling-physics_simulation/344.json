{
  "index": 344,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate is executable for demonstration purposes. I am writing a frontend program that simulates the movement of celestial bodies in the solar system.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the solar system model correctly implemented with accurate celestial mechanics?",
      "description": "Verify whether the code accurately implements orbital mechanics (Kepler's laws), gravitational interactions (Newton's law), and proper scaling of planetary sizes and distances. Check if planets follow elliptical orbits with the Sun at one focus. Score 0 if basic movement is missing, 5 if only circular orbits are implemented, and 10 if the model includes accurate elliptical orbits with proper orbital parameters (eccentricity, semi-major axis, inclination).",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the celestial bodies rendered with appropriate visual fidelity?",
      "description": "Examine whether planets, moons, and the Sun are represented with texture mapping, appropriate lighting effects (including shadows), and surface details. Check if the rendering includes atmosphere effects where applicable. Deduct 3 points if textures are missing, 2 points if lighting is unrealistic, and 3 points if relative sizes are grossly inaccurate. Give 10 points for photorealistic rendering with detailed textures and correct proportions.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the simulation interactive with proper camera controls?",
      "description": "Evaluate whether users can zoom in/out, rotate the view, focus on specific planets, and adjust simulation speed. Check if the camera transition animations are smooth when switching focus between celestial bodies. Deduct 3 points if zooming is jerky, 3 points if rotation controls are unintuitive, and 4 points if the system lacks a way to focus on specific objects. Full score requires seamless transitions and intuitive controls.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the simulation include accurate time-based celestial events?",
      "description": "Check if the code simulates astronomical events like eclipses, planetary conjunctions, and seasonal variations based on axial tilts. Verify if time controls allow for accelerating/decelerating simulation speed to observe these phenomena. Deduct 5 points if no time-based events are implemented, 3 points if events occur but with inaccurate timing. Award full points for accurately timed events with educational explanations.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code handles edge cases such as extreme zoom levels, rapid simulation speeds, and browser resizing. Check for appropriate frame rate management to prevent performance issues on different devices. Deduct 3 points for each unhandled edge case (zooming too far in/out, performance degradation at high speeds). Give 10 points if the simulation maintains stability across various conditions and device capabilities.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check for creative features that enhance the educational or visual experience (e.g., 1. Trajectory visualization with orbital paths 2. Interactive information panels with real astronomical data 3. Realistic star field background with actual constellations). Add 3 points for each well-implemented innovative feature (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check for unnecessary elements: 1. Redundant animation systems that could be consolidated 2. Excessive UI controls that clutter the interface 3. Over-detailed calculations that don't contribute to visual accuracy or educational value. Deduct 3 points for each redundancy found, and directly deduct 10 points if core simulation performance is compromised by unnecessary features.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review the code architecture (separation of physics engine, rendering system, and UI controls), optimization techniques for smooth animation (requestAnimationFrame usage, object pooling), and code maintainability. Deduct 5 points for global variable abuse, 5 points for poor performance optimization (no frame limiting or object reuse), and 5 points for duplicated rendering logic. The full score requires clean architecture with clear separation of concerns.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the UI follows modern design principles: 1) Clean control panel layout with logical grouping 2) Proper contrast between space background and interface elements 3) Consistent iconography and typography (body font size â‰¥ 14px, sufficient contrast with background). Deduct 3 points for cluttered controls, 5 points for poor readability against the space background, and 5 points for inconsistent UI elements. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the interactions feel natural and responsive: 1) Camera movements respond within 50ms of input 2) Celestial body selection has clear visual feedback 3) Time control adjustments show immediate effect on simulation speed. Deduct 5 points for laggy camera movement, 3 points for jerky planet rotation/revolution, and 5 points for simulation stuttering when changing parameters. The full score requires consistent 60fps animation with smooth transitions between different views and speeds.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-Physics Simulation",
  "difficulty": "hard"
}