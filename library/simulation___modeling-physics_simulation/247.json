{
  "index": 247,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for display. Help me create a webpage that shows the orbital patterns of celestial bodies in the solar system.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the solar system model scientifically accurate?",
      "description": "Review whether the code accurately represents celestial bodies with correct relative sizes, orbital distances, and orbital periods according to astronomical data. Check if planets follow Kepler's laws of planetary motion with proper elliptical orbits and orbital inclinations. Score 0 if planets are randomly positioned, 5 if basic circular orbits are implemented, and 10 if elliptical orbits with proper physics parameters are included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are all major celestial bodies of the solar system represented?",
      "description": "Check whether the implementation includes all eight planets (Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune), the Sun at the center, and optionally dwarf planets, moons, and asteroid belts. Deduct 1 point for each missing major planet, 3 points if the Sun isn't centralized correctly, and 2 points if Earth's moon is missing. Award bonus points for including accurate representations of moons for other planets or asteroid belts.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the orbital visualization interactive and dynamic?",
      "description": "Evaluate if the orbital patterns are animated to show planetary movement with correct relative speeds. Check for interactive features such as zoom in/out, rotation of view angle, time controls (speed up/slow down/pause), and ability to focus on specific celestial bodies. Deduct 3 points if orbits are static, 3 points if user interaction is missing, and 5 points if planetary motion doesn't reflect relative orbital periods.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is there educational information about the celestial bodies?",
      "description": "Check if the visualization provides educational value through tooltips, information panels, or labels showing details about each planet (e.g., diameter, mass, distance from sun, orbital period, composition). Deduct 5 points if no information is provided, 3 points if information is inaccurate, and 2 points if information is difficult to access or read while viewing the simulation.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as window resizing, browser compatibility issues, touch vs. mouse input) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Realistic lighting and shadow effects 2. Trajectory tracking visualization 3. Toggle between 2D and 3D views 4. Simulation of historical astronomical events). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple zoom controls) 2. Function modules unrelated to solar system visualization (e.g., unrelated animations) 3. Fancy effects that affect performance (e.g., excessive particle effects that slow down the simulation). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating astronomical data/rendering/interaction logic), use of appropriate libraries (Three.js, D3.js, etc.), and performance optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if no performance optimizations are implemented for smooth animation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color scheme that represents space and celestial bodies accurately 2) Proper layout spacing for controls and information panels 3) Professional font system that ensures readability against the space background. Deduct 3 points for each visually cluttered element, 5 points for inaccurate celestial body representations, and 5 points for poor contrast making text unreadable. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the orbital animations and user interactions conform to human perception characteristics: 1) Animation runs at minimum 30fps without stuttering 2) Camera transitions are smooth when changing focus between planets 3) UI controls are responsive with clear visual feedback. Deduct 5 points for choppy animations, 3 points for abrupt camera movements, and 5 points for laggy UI responses. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-Physics Simulation",
  "difficulty": "easy"
}