{
  "index": 422,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure to ensure that the generated code is executable for demonstration. Write a front-end program that simulates the operation of the solar system.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the solar system model accurately implemented?",
      "description": "Review whether the code accurately implements astronomical bodies (Sun, planets, moons) with correct relative sizes, positions, and orbital parameters. Score 0 if only static objects are displayed, 5 if basic orbital mechanics are implemented but with inaccurate parameters, and 10 if the model reflects realistic astronomical data (planet sizes, orbital distances, inclinations).",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is planetary motion physics correctly implemented?",
      "description": "Evaluate if the code implements Kepler's laws of planetary motion with elliptical orbits, varying orbital speeds, and correct orbital periods. Check if gravitational interactions are simulated. Deduct 5 points if orbits are simplified to perfect circles, 3 points if orbital periods are not proportionally accurate, and 2 points if axial tilts are missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Does the simulation include interactive time control and viewing options?",
      "description": "Check if the program allows users to control simulation speed (pause/play, fast-forward, rewind), change viewing perspectives (top-down view, ecliptic plane view, from specific planets), and zoom functionality. Deduct 3 points for each missing core control feature, and 2 points if controls are implemented but not intuitive. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are celestial bodies rendered with appropriate visual details?",
      "description": "Review if planets and moons have appropriate textures/colors, visible rotation, atmospheric effects where applicable, and if the sun has solar phenomena (corona, flares). Score 3 points for basic colored spheres, 7 points for textured bodies with rotation, and 10 points for detailed models with atmospheric effects and lighting phenomena.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as window resizing, browser compatibility issues, performance throttling, etc.) and provide graceful degradation. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Comet/asteroid visualization 2. Space mission trajectories 3. Educational information overlays 4. Astronomical events simulation like eclipses). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple camera control systems) 2. Function modules unrelated to the solar system simulation (e.g., irrelevant UI elements) 3. Fancy effects that affect performance (e.g., excessive particle systems that cause lag). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating physics engine/rendering/UI layers), use of appropriate design patterns, and optimization techniques for 3D rendering. Deduct 5 points if global state pollution is found; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if no performance optimizations are implemented for smooth animation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Clean space visualization without visual clutter 2) Proper UI layout with intuitive controls 3) Professional font system and information display (body font size ≥ 14px, clear labeling of celestial bodies). Deduct 3 points for each crowded visual element, 5 points for poor contrast or visibility issues, and 5 points for chaotic information layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the simulation maintains consistent frame rates (minimum 30fps), smooth camera transitions, and responsive controls: 1) Control input response ≤ 100ms 2) Smooth zoom and rotation 3) Clear visual feedback for all interactions. Deduct 5 points for noticeable frame drops, 3 points for jerky camera movement, and 5 points for unresponsive controls. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-Physics Simulation",
  "difficulty": "medium"
}