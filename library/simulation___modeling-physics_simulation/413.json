{
  "index": 413,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable whenever possible. Create a frontend program that simulates the movement of the sun.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the sun's basic movement simulation implemented correctly?",
      "description": "Check if the code accurately simulates the sun's arc movement across the sky using proper mathematics (sin/cos functions for circular path). Verify if the animation runs smoothly with requestAnimationFrame rather than setInterval. Score 0 if no movement, 5 if basic animation exists but path is inaccurate, 10 if the trajectory is physically realistic with proper timing.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the simulation include day/night cycle visualization?",
      "description": "Evaluate if the code implements a complete day/night cycle with color changes in the sky (gradient from blue to orange/red at sunset/sunrise to dark blue/black at night). Check if light intensity changes accordingly and if there's appropriate ambient lighting simulation. Deduct 5 points if the transition isn't smooth, 3 points if only basic color change exists. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there an interactive control mechanism for the simulation?",
      "description": "Assess if users can control the simulation through features like play/pause buttons, speed adjustment, manual time setting, or dragging the sun. Check if controls respond immediately (â‰¤100ms) and if transitions between states are smooth. Deduct 3 points for each missing core control, and 5 points if interaction is sluggish. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the visualization include environmental elements that respond to the sun's position?",
      "description": "Check if the code includes reactive elements like shadows that change direction/length based on sun position, plants/objects that respond to daylight, or atmospheric effects (like lens flare). Deduct 3 points for each missing environmental response that would make the simulation more realistic. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as window resizing, browser compatibility issues, performance throttling on slow devices) and provide graceful degradation. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Geographic location input to match real-world sun patterns 2. Weather effects that interact with sunlight 3. Realistic light refraction/atmosphere simulation). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementations of similar animations 2. Function modules unrelated to sun movement simulation 3. Fancy effects that significantly affect performance without adding to the core simulation. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating animation logic/rendering/user interface), consistent naming conventions, and optimized rendering techniques (like canvas vs. DOM elements). Deduct 5 points if global state pollution is found; deduct 5 points if animation frames are inefficiently managed; deduct 5 points if there's no performance optimization for complex visuals. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the visual design follows modern principles: 1) Natural color palette for sky/sun gradients 2) Proper scaling that works across different screen sizes 3) Professional use of light/shadow effects that mimic real physics. Deduct 3 points for unrealistic colors, 5 points for poor scaling on different screens, and 5 points for physically impossible lighting effects. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the animation performs consistently: 1) Maintains 60fps even with complex elements 2) Sun movement is fluid without jitter 3) Transitions between time periods are natural and gradual. Deduct 5 points for each noticeable frame drop or stutter, 3 points for abrupt transitions between day/night states, and 5 points for inconsistent animation speeds. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-Physics Simulation",
  "difficulty": "medium"
}