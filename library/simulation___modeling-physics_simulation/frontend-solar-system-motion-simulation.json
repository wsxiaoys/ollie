{
  "index": 291,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, professional responses. Make sure the code you generate is executable for demonstration. Help me write frontend code that simulates the solar system in motion.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the solar system structure accurately modeled?",
      "description": "Review whether the code correctly sets up the sun and planets with appropriate scaling for size, distance, and orbital periods. Check if all eight planets are included (Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune) with their distinctive characteristics. Score 0 if only basic circles are used, 5 if planets have appropriate sizes but incorrect orbital distances, and 10 if the model maintains scientifically accurate relative proportions.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the planetary motion mathematically correct?",
      "description": "Evaluate whether the orbital mechanics follow Kepler's laws with elliptical orbits and varying speeds (faster when closer to the sun). Check if the rotation axes and tilts are implemented correctly. Deduct 5 points if orbits are perfectly circular rather than elliptical, 3 points if orbital speeds don't vary according to position, and 5 points if rotation mechanics are missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the visual representations of celestial bodies detailed?",
      "description": "Check if the planets have distinctive textures/appearances (Earth's blue oceans/white clouds, Jupiter's bands, Saturn's rings, etc.). Verify if lighting effects create appropriate shadowing as planets rotate. Award 0 points for basic colored circles, 5 points for basic textures, and 10 points for detailed textures with proper lighting effects.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the simulation include interactive features?",
      "description": "Assess whether users can interact with the simulation (zoom in/out, change perspective, adjust simulation speed, focus on specific planets). Deduct 3 points for each missing core interaction feature. Award full 10 points only if the simulation allows smooth camera transitions between different celestial bodies with intuitive controls.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser resize, different screen sizes, varying performance capabilities) and provide fallback mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Realistic star background 2. Comet/asteroid visualizations 3. Time progression display 4. Educational information tooltips). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar rendering logics 2. Function modules unrelated to astronomical simulation (e.g., unnecessary UI elements) 3. Fancy effects that affect performance (e.g., excessive particle systems that cause lag). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating physics/rendering/interaction layers), performance optimization techniques (like instancing for stars), and browser compatibility. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code recomputes stable values in render loops; deduct 5 points if the simulation drastically slows down on mobile devices. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Appropriate use of space (planets properly scaled against the vastness of space) 2) Balanced composition that guides the eye naturally 3) Controls that are intuitive yet unobtrusive. Deduct 3 points for cluttered UI elements, 5 points for confusing visual hierarchy, and 5 points for controls that obscure the simulation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the animation smooth and performance optimized?",
      "description": "Judge whether the animation maintains a consistent frame rate (minimum 30fps) and uses appropriate rendering techniques: 1) Efficient use of WebGL/Canvas 2) Level-of-detail adjustments based on zoom level 3) Proper handling of off-screen objects. Deduct 5 points for noticeable stuttering during normal operation, 3 points for lack of performance optimizations, and 5 points if the simulation becomes unusable on average hardware. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-Physics Simulation",
  "difficulty": "hard"
}