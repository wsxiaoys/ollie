{
  "index": 500,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the generated code is executable and displayable.\n\n======== ROLE ========\nYou are an experienced code expert. You have been provided with a software development requirement description and are asked to generate project code based on this requirement. Follow the rules strictly to help users generate complete project code with comprehensive comments in simple, easy-to-understand language. Do not output anything else.\n\n======== OUTPUT RULES ========\n1. Always generate complete, runnable project code. Make sure the project is fully executable\n2. Ensure all code files you output are complete, with no omitted code\n3. Carefully review and check all code before final output, evaluating its executability. If the code cannot be executed or contains errors, it needs to be regenerated\n4. If the requirements involve external API access or need to use user data (images, videos, audio, etc.), please provide simulated data\n\n======== PROJECT REQUIREMENTS ========\nDevelop a multi-step experimental simulator (such as a physics circuit experiment) where users can drag and drop components like batteries, resistors, and wires onto a workspace to form a circuit. Contact points are automatically generated when components touch. Users can double-click on components to set properties (such as voltage). A \"Start Test\" button on the right side verifies if the circuit is closed - if successful, it displays the current intensity; if unsuccessful, it highlights the disconnected location.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the drag-and-drop functionality for circuit components properly implemented?",
      "description": "Check if the code implements a complete drag-and-drop system for circuit components (batteries, resistors, wires, etc.) with accurate positioning, smooth movement, and proper event handling. Components should be draggable from a component palette to the workspace and repositionable within the workspace. Verify if the drag system handles z-index correctly to prevent visual glitches when components overlap. Score 0 if drag-and-drop is not implemented, 5 if basic movement is implemented but with bugs, and 10 if the system is complete with snap-to-grid and intuitive user feedback.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the automatic contact point detection system functional?",
      "description": "Evaluate the implementation of the contact point detection algorithm. The system should accurately detect when component terminals are close enough to form connections, visualize these connections appropriately, and update the circuit graph model. Check if the code handles different component orientations and contains collision detection logic with appropriate tolerances. Deduct 5 points if the detection is imprecise (>5px tolerance), 3 points if connection visualization is unclear, and 5 points if the underlying circuit graph is not properly updated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the component property editing functionality complete?",
      "description": "Verify if double-clicking on components opens a properly designed properties dialog that allows users to modify relevant parameters (voltage for batteries, resistance for resistors, etc.). The interface should validate inputs, prevent invalid values, and immediately update the circuit model after changes. Deduct 3 points if validation is missing, 4 points if the UI is not intuitive, and 5 points if property changes don't update the underlying model. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the circuit verification and simulation system correctly implemented?",
      "description": "Check if the 'Start Test' button triggers appropriate circuit analysis, including closed-circuit verification, current flow calculation using Ohm's Law and Kirchhoff's Laws, and proper visual feedback. The system should identify disconnected points with clear highlighting and display accurate current values for working circuits. Deduct 5 points if the circuit analysis is incomplete, 5 points if the current calculation is incorrect, and 3 points if the visual feedback is inadequate. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as rapid component manipulation, invalid circuit configurations, extreme property values, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Real-time circuit analysis visualization 2. Component behavior animation when current flows 3. Export/import of circuit designs 4. Multiple experiment templates). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to create connections) 2. Function modules unrelated to circuit simulation (e.g., unnecessary game-like elements) 3. Fancy effects that affect performance (e.g., excessive animations that slow down the simulation). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating circuit model/view/simulation logic), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size â‰¥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Immediate feedback when dragging components 2) Transition animation duration controlled between 300-500ms for property changes 3) Clear visual feedback for successful/unsuccessful connections. Deduct 5 points for each operation without feedback, 3 points for jerky component movement, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-Physics Simulation",
  "difficulty": "hard"
}