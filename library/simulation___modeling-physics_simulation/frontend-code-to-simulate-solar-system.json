{
  "index": 444,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the generated code is executable for demonstration. Write a frontend code to simulate the solar system.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the basic solar system simulation accurately implemented?",
      "description": "Review whether the code correctly implements the celestial bodies of our solar system (Sun, 8 planets, and optionally dwarf planets/moons) with their relative sizes and orbital distances. Check if planet positions are calculated using proper mathematical formulas (Kepler's laws or simplified circular orbits). Score 0 if fewer than 5 planets are implemented, 5 if all planets are present but with inaccurate scales/orbits, and 10 if an astronomically accurate model is implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the planetary motion animation properly implemented?",
      "description": "Evaluate the orbital mechanics implementation, including correct rotation speed ratios between planets, proper direction of rotation, and smooth animation rendering (using requestAnimationFrame or similar techniques). Check if the animation maintains a consistent frame rate (ideally 60fps). Deduct 3 points if planets move at arbitrary speeds, 4 points if animations stutter noticeably, and 3 points if orbital periods don't maintain proper relative timing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there a user interaction system for exploring the solar system?",
      "description": "Check whether the simulation allows users to interact with the solar system through features like zooming, rotating the viewpoint, clicking on planets for details, adjusting simulation speed, or following specific planets. Deduct 3 points if only basic zoom functionality exists, 4 points if the camera control is difficult to use, and 3 points if no detailed information is available when selecting celestial bodies. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is there accurate visual representation of celestial characteristics?",
      "description": "Assess whether the code includes realistic visual elements such as planet textures, relative sizes, distinctive features (Saturn's rings, Jupiter's Great Red Spot), appropriate lighting effects (with the Sun as light source), and shadow casting. Deduct 3 points if textures are missing, 4 points if lighting/shadows are incorrectly implemented, and 3 points if distinctive planetary features are absent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser resizing, varying device performance, touch vs. mouse inputs, WebGL support detection) and provide fallback mechanisms or helpful error messages. Code with strong robustness should gracefully degrade on lower-end devices and handle window resizing properly, giving 10 points. If the robustness is average, give 5 points, and if no edge cases are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Time controls to speed up/slow down/reverse simulation 2. Educational information about each planet 3. Accurate star background with constellations 4. Orbital path visualization 5. Space missions/satellites visualization). Add 2 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant calculation of planetary positions (e.g., recalculating constants repeatedly) 2. Function modules unrelated to solar system simulation (e.g., unnecessary UI elements) 3. Fancy effects that affect performance without adding value (e.g., excessive particle effects that cause lag). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating astronomy logic/rendering/UI layers), performance optimization techniques (object pooling, shader efficiency), and code maintainability. Deduct 3 points if global state pollution is found; deduct 4 points if the rendering pipeline isn't optimized for a large number of objects; deduct 3 points if there's no separation between the celestial mechanics calculations and rendering logic. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the visual design follows modern UI principles: 1) Clean interface with unobstructed view of the simulation 2) Proper contrast between UI elements and the space background 3) Professional typography for informational elements (readable against dark backgrounds, proper hierarchy). Deduct 3 points for cluttered UI elements, 4 points for poor readability of text against the background, and 3 points for inconsistent design language. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and responsive?",
      "description": "Judge whether the interaction meets performance standards: 1) Smooth camera movements without jittering 2) Responsive controls with immediate visual feedback 3) Consistent frame rate even with multiple planets in view. Deduct 3 points for input lag exceeding 100ms, 4 points for frame rate drops below 30fps during normal operation, and 3 points for jerky transitions when changing view modes or focusing on different planets. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-Physics Simulation",
  "difficulty": "hard"
}