{
  "index": 219,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to provide executable code for demonstration purposes. Create a frontend program that showcases the orbital mechanics of the solar system.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the solar system orbital mechanics accurately implemented?",
      "description": "Review whether the code correctly implements planetary orbital mechanics using physics formulas (Kepler's laws, gravitational forces). Check if orbital parameters include semi-major axis, eccentricity, inclination, and orbital period calculations. Verify that planetary positions are computed using real astronomical data rather than simple circular motion. Score 0 if only basic circular rotation is implemented, 5 if elliptical orbits are included but without proper physics, and 10 if accurate orbital mechanics with realistic parameters are fully implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are all major celestial bodies of the solar system included with proper scaling?",
      "description": "Check whether the visualization includes all 8 planets, major moons (at least Earth's Moon, Jupiter's Galilean moons), asteroid belt, and the Sun with appropriate relative scaling. Evaluate if the code implements both realistic scale options and compressed scale for better visualization. Deduct 3 points for each missing major celestial body, 5 points if no scaling options are provided. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is real-time orbital simulation with time control implemented?",
      "description": "Evaluate whether the system provides real-time orbital simulation with adjustable time speed (1x, 10x, 100x, 1000x speeds). Check if the code includes play/pause controls, date/time display, and the ability to jump to specific dates. Verify that orbital positions remain mathematically accurate across different time speeds. Deduct 5 points if time controls are missing, 3 points if accuracy degrades at high speeds. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is comprehensive interactive exploration functionality provided?",
      "description": "Check whether the code includes interactive features such as: camera controls (zoom, pan, rotate), clickable celestial bodies with information panels, orbital path visualization toggles, and follow-camera mode for selected objects. Evaluate if the interface provides educational information (orbital period, distance, composition) for each celestial body. Deduct 5 points if basic camera controls are missing, 3 points if no information panels are provided. Give 10 points if fully interactive with educational content.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid date inputs, extreme time speeds, browser performance limitations, and WebGL compatibility issues) and provide friendly error prompts or fallback mechanisms. Code with strong robustness should gracefully handle edge cases and provide appropriate user feedback, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Spacecraft trajectory planning and visualization 2. Historical astronomical events simulation 3. Exoplanet comparison mode 4. VR/AR compatibility 5. Real-time data integration from NASA APIs). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple camera control systems coexisting) 2. Function modules unrelated to solar system visualization (e.g., built-in games or social features) 3. Excessive visual effects that impact performance (e.g., unnecessary particle systems, overly complex shaders). Deduct 3 points for each redundancy found, and directly deduct 10 points if core orbital mechanics are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating physics engine/rendering/UI layers), proper use of design patterns, and code organization. Check for proper resource management (texture loading, memory cleanup), performance optimization (LOD systems, culling), and build process automation. Deduct 5 points if global state pollution is found or no design patterns are used; deduct 5 points if frame rate drops below 30fps on standard hardware; deduct 5 points if no build process is provided. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern UI/UX principles: 1) Space-themed color palette with high contrast for readability 2) Proper layout spacing with clear information hierarchy 3) Professional typography system with readable fonts against dark backgrounds 4) Intuitive iconography and controls. Deduct 3 points for each poorly designed UI element, 5 points for poor color contrast affecting usability, and 5 points for cluttered interface layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the 3D rendering performance smooth and visually appealing?",
      "description": "Judge whether the 3D visualization maintains smooth performance: 1) Consistent 60fps frame rate during normal operation 2) Smooth camera transitions and object animations 3) High-quality textures and lighting effects 4) Proper depth perception and spatial orientation cues. Deduct 5 points for each noticeable frame rate drop, 3 points for choppy animations, and 5 points for poor visual quality that hampers the educational experience. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Simulation & Modeling-Physics Simulation",
  "difficulty": "hard"
}