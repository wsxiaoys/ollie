{
  "index": 183,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate can be executed and displayed. Please help me implement this SVG image using code. The raincoat is water-resistant clothing for the weather.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the SVG raincoat structure properly implemented?",
      "description": "Check whether the code properly implements the basic structure of a raincoat (hood, body, sleeves, buttons/zipper). Score 0 if the basic raincoat outline is missing, 5 if only a basic outline is present without details, and 10 if the SVG includes a complete and recognizable raincoat structure with appropriate proportions.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the SVG properly represent the water-resistant nature of the raincoat?",
      "description": "Evaluate whether the code includes visual elements that communicate water resistance (such as water droplets rolling off, glossy/waterproof texture, or appropriate material representation). Deduct 5 points if no water-resistant characteristics are represented and 3 points if the representation is minimal. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the SVG code optimized and standards-compliant?",
      "description": "Review whether the SVG uses appropriate elements (path, rect, circle) efficiently, includes proper viewBox attributes, and follows SVG best practices. Check for unnecessary nested groups, redundant paths that could be combined, or inefficient use of transforms. Deduct 3 points for each significant optimization issue found. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are weather elements incorporated to contextualize the raincoat?",
      "description": "Assess whether the SVG includes contextual weather elements (rain droplets, clouds, puddles) that help communicate the purpose of the raincoat. Score 0 if no weather context is provided, 5 if minimal context is shown, and 10 if the raincoat is clearly placed in a weather-related context with appropriate visual elements.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle different viewport sizes without breaking, includes appropriate fallbacks for older browsers, and properly manages aspect ratios. Code with strong robustness should scale appropriately on different devices and degrade gracefully. Give 10 points if fully responsive with fallbacks, 5 points if partially responsive, and 0 points if the SVG breaks on resizing.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Animated rain effects 2. Interactive elements like toggleable hood or buttons 3. Color-changing options to show different raincoat styles). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant SVG elements that could be simplified 2. Elements unrelated to the raincoat or weather context 3. Overly complex effects that make the SVG unnecessarily large or slow to render. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core representation is obscured by redundant elements.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review code organization (such as meaningful IDs/classes, grouped related elements), reusability of components, and documentation. Deduct 5 points if SVG elements are poorly organized; deduct 5 points if there's excessive repetition of values that could be defined once; deduct 5 points if the code lacks comments explaining complex parts. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (appropriate colors for a raincoat and weather elements) 2) Balanced composition (proper visual weight and negative space) 3) Attention to detail (texture, shadows, highlights where appropriate). Deduct 3 points for each visual harmony issue, 5 points for inappropriate color choices, and 5 points for poor detail rendering. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether any animations or interactive elements (if implemented) conform to natural movement: 1) Smooth transitions between states 2) Animation timing that feels natural (e.g., rain falling at realistic speed) 3) Logical interaction points if the SVG is interactive. Deduct 5 points for jarring animations, 3 points for unrealistic movement patterns, and 5 points for confusing interactive elements. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "SVG Generation-SVG Images",
  "difficulty": "medium"
}