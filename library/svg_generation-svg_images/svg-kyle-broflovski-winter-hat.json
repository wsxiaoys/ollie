{
  "index": 145,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Ensure that the code you produce is executable for demonstration purposes.\nPlease help me implement the following requirements using code. Create an SVG that shows Kyle Broflovski from South Park wearing his winter hat.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the basic shape of Kyle Broflovski's head accurately implemented?",
      "description": "Check whether the SVG correctly renders Kyle's round face with appropriate dimensions, skin tone, and facial structure. The head should have the characteristic South Park style with simple shapes. Score 0 if the face is missing or unrecognizable, 5 if basic shape is present but proportions are off, and 10 if the head is accurately depicted in South Park style.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is Kyle's iconic green ushanka (winter hat) properly implemented?",
      "description": "Verify if the SVG includes Kyle's signature green winter hat with earflaps and proper positioning on his head. The hat should be the correct shade of green and cover most of his hair except for the distinctive red curls that may peek out. Deduct 5 points if the hat color is incorrect, 3 points if the shape is wrong, and 7 points if the hat is missing entirely. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are Kyle's facial features correctly rendered?",
      "description": "Evaluate whether the SVG includes Kyle's characteristic facial features: wide eyes, small nose, simple mouth, and other South Park style facial elements. Ensure the facial expression is appropriate. Deduct 3 points if any major feature is missing, 2 points if proportions are incorrect, and 5 points if the features don't resemble Kyle's character. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is Kyle's iconic red/orange hair (curls) visible where appropriate?",
      "description": "Check if the SVG shows Kyle's characteristic red/orange curly hair peeking out from under his hat, typically visible at the sides or bottom. This is a defining feature of his character. Deduct 5 points if the hair is the wrong color, 3 points if it's not curly, and 7 points if it's missing completely. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the SVG code is well-structured, using proper grouping (<g> elements), appropriate naming conventions, and whether it would display consistently across browsers. Code with strong robustness should use viewBox for scaling, include appropriate fallbacks, and handle rendering correctly. Give 10 points for excellent robustness, 5 points for average implementation, and 0 points if the SVG won't render properly across platforms.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the SVG includes surprise features that enhance the experience (e.g., 1. Animation of Kyle's expressions 2. Interactive elements that respond to user input 3. Dynamic color adjustments). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant shapes or paths that could be simplified 2. Elements unrelated to Kyle's character (e.g., unrelated background elements) 3. Excessive detail that complicates the SVG without adding to the South Park style. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core character is obscured by redundant elements.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review the organization of SVG elements, use of CSS (either inline or external), optimization of paths, and appropriate use of SVG features like groups, symbols, or reusable components. Deduct 5 points for excessive inline styles instead of grouped CSS; deduct 5 points for unnecessarily complex paths or unoptimized code; deduct 5 points for lack of comments or documentation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the SVG follows the South Park aesthetic while maintaining quality: 1) Color accuracy matching the show's palette 2) Proper proportions consistent with the character's appearance 3) Clean lines and shapes without jagged edges. Deduct 3 points for each significant deviation from South Park's style, 5 points for poor color choices, and 5 points for messy implementation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the implementation complete and faithful to the character?",
      "description": "Judge how well the overall SVG captures Kyle's essence: 1) Immediately recognizable as Kyle 2) Maintains South Park's characteristic style 3) Includes all defining visual elements of the character. Deduct 5 points if the character could be confused with another South Park character, 3 points if key identifying features are poorly executed, and 5 points if the SVG fails to evoke Kyle's character. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "SVG Generation-SVG Images",
  "difficulty": "hard"
}