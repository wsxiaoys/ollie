{
  "index": 154,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you provide is executable for demonstration.\n\nPlease help me implement the following requirement using code. Create a: cubic box packaging using SVG code.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the cubic box structure accurately represented in SVG?",
      "description": "Review whether the SVG code correctly implements a 3D cubic box with proper perspective, including front, back, top, bottom, left and right faces. Score 0 if the implementation is 2D only, 5 if the cube faces exist but with perspective errors, and 10 if all faces are properly positioned with correct perspective representation.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the SVG geometry elements properly used for the cubic representation?",
      "description": "Check whether appropriate SVG elements (<path>, <polygon>, <rect>, etc.) are used efficiently to construct the cubic box. Evaluate if the coordinate calculations are mathematically correct for a 3D projection. Deduct 5 points if elements are used inappropriately, and 3 points if the coordinate system is inconsistent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the cubic box visually distinguishable as a package/box?",
      "description": "Evaluate whether the implementation includes packaging-specific features such as flaps, folds, or tape indicators that make it recognizable as a box rather than just a geometric cube. Deduct 5 points if it's just a plain cube without packaging elements, and 3 points if the packaging elements are unrealistic. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the implementation include interactive or dynamic features?",
      "description": "Check whether the cubic box implementation includes interactive elements (rotation, unfolding, opening) or animations that enhance the visualization experience. Award 0 points for static-only implementations, 5 points for basic interactivity, and 10 points for comprehensive interactive features with smooth animations.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser compatibility issues, responsive layout adaptation, parameter validation) and provide fallback mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Texture mapping on cube faces 2. Dynamic lighting effects 3. Box opening/closing animation). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar drawing functions 2. Function modules unrelated to the cubic box visualization 3. Fancy effects that affect performance (e.g., unnecessary complex animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating drawing logic/interaction/styling), maintainability, and reusability. Deduct 5 points if global namespace pollution is found or if drawing functions are not properly encapsulated; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the SVG generation is not parameterized. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper proportions and perspective consistent with real-world expectations 3) Professional use of shadows, gradients and lighting. Deduct 3 points for each unrealistic visual element, 5 points for a jarring color combination, and 5 points for inconsistent proportions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether any dynamic effects conform to human perception characteristics: 1) Smooth transitions if rotation is implemented 2) Animation duration controlled between 300-500ms 3) Natural cubic box behavior in response to user interaction. Deduct 5 points for each operation without feedback, 3 points for visual glitches during animations, and 5 points for unnatural cubic box movements. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "SVG Generation-SVG Images",
  "difficulty": "hard"
}