{
  "index": 112,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, professional responses. Make sure that the generated code is executable for demonstration.\nPlease help me implement the following requirement using code, creating it with SVG code. The requirement is to create a chart showing the number of devices used by audio suppliers.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the SVG chart implementation correct and complete?",
      "description": "Check if the SVG chart correctly implements all required elements (viewBox, dimensions, coordinate system). Verify that the chart includes proper axis lines, labels, and a title. Score 0 if basic SVG structure is missing, 5 if elements are present but incomplete, 10 if fully implemented with proper namespaces and scalability.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the data visualization for audio suppliers appropriate?",
      "description": "Evaluate whether the chart type (bar chart, pie chart, etc.) is appropriate for comparing device numbers across audio suppliers. Check if the data representation is clear and allows for easy comparison. Deduct 5 points if the chart type is inappropriate for the data, 3 points if data labels are missing, and 2 points if the scale is misleading. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the visual elements properly implemented?",
      "description": "Review whether the chart includes necessary visual elements like legends, tooltips, or data labels to clearly identify each audio supplier and their device count. Check if colors are used effectively to differentiate between suppliers. Deduct 5 points if legends are missing, 3 points if supplier labels are unclear, and 2 points if color differentiation is poor. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is interactivity or responsiveness included in the SVG implementation?",
      "description": "Assess whether the chart includes interactive features such as hover effects, click events for additional information, or responsive design that adapts to different screen sizes. Deduct 5 points if no interactivity is implemented, 3 points if hover states are missing, and 2 points if the chart doesn't scale properly on different devices. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as missing data, zero values, extremely large values, etc.) and provide appropriate fallbacks or error handling. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Animated transitions between data updates 2. Filter functionality to focus on specific suppliers 3. Exportable chart as image). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visualization functions 2. Function modules unrelated to the required chart (e.g., unrelated animations) 3. Fancy effects that affect performance (e.g., excessive gradients or filters). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data logic from visualization), reusability of components, and code organization. Deduct 5 points if global variables are overused; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no separation between data and presentation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the chart design follows modern data visualization principles: 1) Harmonious color palette appropriate for data visualization 2) Proper spacing and margins around chart elements 3) Professional typography with readable font sizes and weights. Deduct 3 points for cluttered visual elements, 5 points for poor color choices that hinder data interpretation, and 5 points for illegible text. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether any dynamic effects (like transitions, tooltips, or hover states) conform to human perception characteristics: 1) Immediate visual feedback on interaction 2) Smooth animations with appropriate timing 3) Clear affordances for interactive elements. Deduct 5 points for each operation without feedback, 3 points for jerky animations, and 5 points for unclear interactive elements. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "SVG Generation-SVG Images",
  "difficulty": "medium"
}