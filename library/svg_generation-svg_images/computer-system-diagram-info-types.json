{
  "index": 21,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable whenever possible. \n\nPlease help me implement the following requirements using code, which should be created using SVG code. The requirement is to create a diagram of a computer system with several different types of information.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the basic SVG structure properly implemented?",
      "description": "Check if the SVG document has proper DOCTYPE, namespace declarations, viewBox attributes, and responsive design considerations. Verify the SVG has appropriate dimensions and preserveAspectRatio settings. The base SVG should be properly structured with organized groups (<g>) for different components. Score 0 if SVG basics are missing, 5 if basic structure exists but with issues, and 10 for complete and proper implementation.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the computer system diagram include all essential components?",
      "description": "Evaluate whether the diagram includes core computer system components: CPU, memory (RAM), storage devices, motherboard, input/output devices, and their interconnections. Each component should be clearly visualized with appropriate shapes and proportions. Deduct 2 points for each missing major component. Score 10 if the diagram comprehensively represents a computer system architecture.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the information hierarchy visually represented?",
      "description": "Check if the diagram effectively communicates different layers of information through visual hierarchy (size, position, color, grouping). Components should be organized logically with clear relationships and data flows. Examine if subsystems are properly nested and connections between components are meaningful. Score 0 if hierarchy is absent, 5 if basic hierarchy exists but is confusing, and 10 for clear, intuitive information architecture.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are interactive or dynamic elements incorporated?",
      "description": "Assess whether the SVG includes interactive features (hover effects, click actions, animations) to enhance understanding of the computer system. Check for JavaScript event handlers, CSS transitions/animations, or SMIL animations. Award 3 points for basic interactivity, 7 points for moderate interactivity with purpose, and 10 points for comprehensive, educational interactive elements that explain system functions.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the SVG code handles potential issues like browser compatibility, scaling on different screen sizes, and fallback mechanisms. The code should use best practices like avoiding inline styles when appropriate, using semantic IDs and classes, and implementing proper error handling if JavaScript is used. Score 0 if major compatibility issues exist, 5 if generally compatible but with minor issues, and 10 for robust, cross-browser compatible code.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the SVG includes surprise features that enhance the experience (e.g., 1. Animated data flows between components 2. Interactive tooltips with detailed specifications 3. Visual state changes representing system operations). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant graphical elements that convey the same information 2. Excessive decorative elements that don't contribute to understanding the computer system 3. Overly complex animations or effects that distract from the content. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core diagram clarity is compromised by redundant elements.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review the SVG code organization (such as appropriate grouping of elements), reuse of common elements through symbols or patterns, and optimization for file size and rendering performance. Deduct 5 points if element IDs/classes are inconsistent or poorly named; deduct 5 points if the code is unnecessarily verbose with duplicated definitions; deduct 5 points if no performance optimizations are implemented (like reducing path points or proper use of primitives). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors with appropriate contrasts for readability) 2) Proper layout spacing and alignment of components 3) Professional typography (readable font family, appropriate size hierarchy). Deduct 3 points for each awkward visual element, 5 points for poor color choices that hinder understanding, and 5 points for inconsistent visual language. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether any dynamic effects conform to human perception characteristics: 1) Responsive feedback for interactive elements â‰¤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus on important components. If animations exist, they should enhance understanding rather than distract. Deduct 5 points for jarring transitions, 3 points for excessive or too fast animations, and 5 points for confusing interaction patterns. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "SVG Generation-SVG Images",
  "difficulty": "hard"
}