{
  "index": 160,
  "question": "You are a code expert, please use your professional knowledge to generate accurate, professional responses. Make sure the code you generate is executable for demonstration purposes.\nPlease help me implement the following requirement using SVG code: create an octopus as an underwater marine creature.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the octopus basic anatomy correctly implemented in SVG?",
      "description": "Review whether the SVG code accurately implements the key anatomy of an octopus: round/oval head, eight tentacles with proper proportions, and characteristic features like eyes and siphon. Score 0 if the basic structure is missing, 5 if basic shape is implemented but proportions are off, and 10 if the anatomical representation is accurate and recognizable.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the octopus tentacles properly structured with realistic curling/movement?",
      "description": "Evaluate whether the tentacles use proper SVG path elements with curve controls to simulate natural tentacle curling. Check if bezier curves or arc commands are used to create smooth, organic-looking tentacles with tapered ends. Deduct 5 points if tentacles are straight lines, 3 points if tentacles lack variation in curvature, and 2 points if suckers are missing or poorly implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there appropriate underwater context or environment elements?",
      "description": "Check whether the SVG includes contextual underwater elements (bubbles, seaweed, coral, etc.) to establish the octopus's marine habitat. Award full 10 points for a comprehensive underwater scene with multiple environmental elements, 5 points for minimal context, and 0 if the octopus exists in isolation without any marine context.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the implementation include animation for the octopus or environment?",
      "description": "Assess whether SVG animations (SMIL or CSS) are implemented to create lifelike movement such as tentacle waving, color changing, swimming motion, or bubble floating. Award 10 points for complex, coordinated animations that enhance realism, 5 points for basic animation limited to one or two elements, and 0 points for a completely static implementation.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the SVG code is properly structured with appropriate viewBox settings, namespace declarations, and optimization techniques. Check for fallbacks or responsive design principles that make the illustration work across different screen sizes. Deduct 3 points for each missing viewBox or namespace declaration, 2 points for excessively verbose path commands, and 2 points for lack of grouping related elements. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the SVG includes surprise features that enhance the experience (e.g., 1. Color-changing camouflage effect 2. Interactive elements that respond to mouse/touch 3. Realistic texture using SVG patterns or filters). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Duplicate path definitions that could be reused with transforms 2. Elements unrelated to the underwater scene theme 3. Over-complex effects that significantly increase file size without visual benefit. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core representation is obscured by redundant elements.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular structure (such as proper grouping with <g> elements), meaningful IDs/class names, and code readability. Deduct 5 points if elements lack logical grouping; deduct 3 points if IDs/classes are missing or meaningless; deduct 2 points if there's no code commenting for complex sections. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the visual design meet professional standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color scheme appropriate for underwater scene 2) Good use of gradients or transparency for depth 3) Appropriate level of detail balanced with simplicity. Deduct 3 points for each jarring color combination, 4 points for flat appearance lacking depth, and 3 points for overly simplistic or excessively detailed implementation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the implementation optimized for performance?",
      "description": "Judge whether the SVG implementation is optimized: 1) Reasonable file size (under 50KB) 2) Efficient path commands without unnecessary precision 3) Proper use of reusable elements through symbols or use tags. Deduct 3 points for each 20KB over the recommended size, 4 points for unnecessarily complex paths that could be simplified, and 3 points for missing optimization opportunities like reusing repeated elements. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "SVG Generation-SVG Images",
  "difficulty": "easy"
}