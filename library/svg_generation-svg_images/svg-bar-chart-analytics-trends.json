{
  "index": 148,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, professional responses. Make sure the code you provide is executable for display.\n\nPlease help me implement this SVG image using code. A detailed bar chart displaying analytics data, featuring rising green and orange bars with arrows indicating upward and downward trends.",
  "checklist": [
    {
      "id": 0,
      "title": "Are the core SVG bar chart visual elements correctly implemented?",
      "description": "Evaluate whether the code properly implements SVG bars with accurate heights proportional to data values. Check if the bars have proper width, positioning, and spacing. Score 0 if bars are missing, 5 if implemented but with positioning issues, and 10 if bars are rendered properly with correct dimensions and placement.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the color coding for upward and downward trends correctly implemented?",
      "description": "Check if green bars represent upward trends and orange bars represent downward trends as specified. Verify that the colors are properly applied based on the data trend direction. Deduct 5 points if colors are reversed or inconsistent, and 3 points if colors are not accessible (contrast ratio below 4.5:1). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the trend arrows correctly implemented and positioned?",
      "description": "Review if upward and downward arrows are properly implemented and positioned above each bar according to their trend. Check if arrow shapes are clear, properly sized, and consistently applied. Deduct 5 points if arrows are missing for some bars, 3 points if arrows are inconsistently styled, and 5 points if arrows contradict the trend direction. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the chart's data visualization accurately representing the analytics data?",
      "description": "Evaluate if the chart properly scales data values proportionally and if there's appropriate data labeling (values, percentages, etc.). Check if the implementation includes axes with proper scales and gridlines. Deduct 5 points if data scaling is incorrect, 3 points if data labels are missing, and 5 points if axes/gridlines are improperly implemented or missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle edge cases like zero values, negative values, or extremely large values without breaking the visualization. Check if the code includes input validation and error handling. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Animated transitions when data changes 2. Interactive tooltips showing detailed analytics 3. Responsive design that adapts to container size). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visual elements 2. Function modules unrelated to the bar chart visualization 3. Fancy effects that affect performance or readability. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core visualization is interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data processing from visualization), reusability of components, and clean code practices. Deduct 5 points if global namespace pollution is found or if code is not organized into functions; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there are no comments explaining complex parts. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern data visualization principles: 1) Harmonious color matching beyond just green and orange 2) Proper layout spacing between chart elements 3) Professional typography for labels and titles. Deduct 3 points for each crowded visual element, 5 points for poor color contrast or accessibility issues, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the chart includes appropriate interactions: 1) Hover states on bars with visual feedback â‰¤ 100ms 2) Smooth transitions when displaying data/tooltips 3) Clear visual focus on important data points. Deduct 5 points for each interaction without feedback, 3 points for jerky animations, and 5 points for hard-to-discover interactive elements. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "SVG Generation-SVG Images",
  "difficulty": "medium"
}