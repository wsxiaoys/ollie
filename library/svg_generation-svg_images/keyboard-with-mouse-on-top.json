{
  "index": 55,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the code you generate is executable and can be demonstrated. Please help me implement this SVG image using code: a close up of a keyboard with a mouse on top of it",
  "checklist": [
    {
      "id": 0,
      "title": "Is the SVG keyboard structure accurately implemented?",
      "description": "Review whether the code accurately creates a keyboard layout through SVG elements, including proper key arrangement (QWERTY layout), key sizing proportions, and realistic keyboard dimensions. Check if individual keys are properly defined with correct spacing and alignment. Score 0 if only basic rectangles are used without proper keyboard layout, 5 if basic key arrangement exists but proportions are incorrect, and 10 if a detailed and accurate keyboard structure with proper key groupings (alphanumeric, function keys, arrow keys) is implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the mouse design realistically rendered on top of the keyboard?",
      "description": "Evaluate whether the mouse is properly positioned 'on top' of the keyboard with correct z-index layering and realistic mouse shape. Check if the mouse includes essential components like left/right buttons, scroll wheel, and proper ergonomic curves. Deduct 5 points if the mouse appears flat or unrealistic, 3 points if positioning doesn't clearly show it's 'on top' of the keyboard. The mouse should have proper shadows or depth indicators. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Does the close-up perspective and composition match the requirement?",
      "description": "Check whether the SVG implements a proper 'close-up' view with appropriate cropping and perspective. The composition should show detailed view of keyboard keys with the mouse prominently featured. Evaluate if the viewBox and scaling create a realistic close-up effect rather than a distant overview. Deduct 5 points if the perspective is flat or lacks depth, 3 points if the composition doesn't feel like a close-up shot. Full score requires realistic perspective with proper foreground/background relationship.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are realistic visual details and textures implemented?",
      "description": "Assess whether the code includes realistic visual details such as key legends (letters/numbers on keys), surface textures, beveled edges, and material representation. Check for proper use of gradients, shadows, and highlighting to create depth and realism. Deduct 5 points if keys lack text labels or appear completely flat, 3 points if missing essential details like key borders or realistic coloring. Full implementation should include key backlighting effects, surface reflections, and material differentiation between keyboard and mouse.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common issues such as different viewport sizes, browser compatibility, and SVG rendering variations. Code should include proper error handling for SVG elements and graceful degradation. Check for proper namespacing and valid SVG syntax. Robust code should handle edge cases like missing fonts or unsupported SVG features. Give 10 points if fully robust, 5 points if moderately robust, and 0 points if no error handling exists.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes impressive features that enhance realism (e.g., 1. Animated key press effects 2. Realistic lighting and shadow simulation 3. Interactive hover effects 4. Detailed cable/wireless indicator 5. Brand-specific keyboard/mouse design elements). Add 2 points for each well-implemented innovative feature (maximum 10 points). Features should add value without compromising the core image representation.",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Unnecessary complex animations that don't enhance the static image representation 2. Excessive decorative elements unrelated to keyboard/mouse (e.g., background scenery, unrelated objects) 3. Overly complex gradients or effects that cause performance issues without visual benefit. Deduct 3 points for each redundancy found, and directly deduct 10 points if redundant code interferes with the core image clarity or loading performance.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review code organization with proper SVG grouping, reusable components (defs, symbols), and clean structure. Check for proper use of SVG optimization techniques, meaningful element IDs/classes, and maintainable code patterns. Deduct 5 points if code is unorganized with inline styles everywhere; deduct 5 points if excessive code duplication exists; deduct 5 points if SVG structure is poorly organized without logical grouping. Full score requires clean, modular, and optimized SVG code.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the visual design meet professional illustration standards?",
      "description": "Evaluate whether the SVG follows professional digital illustration principles: 1) Realistic color palette with proper contrast and harmony 2) Consistent lighting direction and shadow casting 3) Proper proportions and perspective accuracy 4) Clean vector art with smooth curves and precise edges. Deduct 3 points for each unrealistic color choice, 5 points for inconsistent lighting or shadows, and 5 points for distorted proportions. Full score requires photorealistic quality within SVG constraints.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the rendering performance and visual quality optimized?",
      "description": "Judge whether the SVG is optimized for both visual quality and performance: 1) Efficient use of SVG elements without excessive complexity 2) Proper file size optimization without quality loss 3) Smooth rendering across different screen resolutions 4) Appropriate level of detail for the intended viewing size. Deduct 5 points for unnecessarily complex paths that hurt performance, 3 points for pixelated or blurry elements when scaled, and 5 points for excessive file size due to unoptimized code. Full score requires balanced optimization.",
      "maxScore": 10
    }
  ],
  "class": "SVG Generation-SVG Images",
  "difficulty": "hard"
}