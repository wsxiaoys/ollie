{
  "index": 790,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the code you generate is executable and can be demonstrated. Write WeChat Mini Program code for registration, login, and real identity verification. Identity verification methods: WeChat verification/Alipay verification source code.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the WeChat Mini Program registration and login system fully implemented?",
      "description": "Review whether the code accurately implements WeChat Mini Program's wx.login() API integration, session key management, and user authorization flow. Check if it includes proper handling of openid/unionid acquisition, user profile binding, and secure token generation. Score 0 if core authentication logic is missing, 5 if only basic login is implemented, and 10 if complete registration/login flow with proper session management is included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the WeChat identity verification mechanism properly integrated?",
      "description": "Evaluate whether the WeChat real-name verification uses official APIs (wx.checkIsSupportSoterAuthentication, wx.startSoterAuthentication) or integrates with WeChat Pay real-name verification services. Check for proper certificate validation, biometric authentication handling, and secure data transmission. Deduct 5 points if verification result validation is missing, and 3 points if error handling for verification failures is inadequate. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the Alipay verification integration correctly implemented?",
      "description": "Check whether the Alipay identity verification implements proper SDK integration or H5 redirection flow for real-name authentication. Evaluate if it includes certificate parsing, identity information validation, and secure callback handling. Verify that the implementation handles Alipay's authentication response properly and stores verification results securely. Deduct 5 points if callback verification is incomplete, and 5 points if cross-platform compatibility issues exist. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is comprehensive identity verification workflow and data security implemented?",
      "description": "Assess whether the code includes complete identity verification lifecycle management: verification initiation, progress tracking, result validation, and certificate storage. Check for data encryption during transmission, secure local storage handling, and compliance with privacy regulations. Deduct 5 points if sensitive data is not encrypted, and 3 points if verification status synchronization is missing. Give 10 points if fully implemented with proper security measures.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as network timeouts, API call failures, user cancellation, invalid certificates, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should effectively handle edge cases including partial verification failures and retry mechanisms, giving 10 points. If robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance user experience (e.g., 1. OCR-based ID card scanning 2. Face recognition integration 3. Multi-factor authentication options 4. Progressive verification levels 5. Verification status dashboard). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar authentication flows (e.g., multiple login validation logics coexisting) 2. Function modules unrelated to identity verification (e.g., built-in games or social features) 3. Excessive verification steps that hinder user experience (e.g., unnecessary multiple confirmations). Deduct 3 points for each redundancy found, and directly deduct 10 points if core verification functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating authentication logic/UI components/API services), proper error handling, and Mini Program best practices compliance. Deduct 5 points if global state pollution is found or component lifecycle is not properly managed; deduct 5 points if code duplication rate is too high (over 30%); deduct 5 points if Mini Program performance optimization guidelines are not followed. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface design meet professional standards?",
      "description": "Evaluate whether the UI design follows WeChat Mini Program design guidelines: 1) Consistent with WeChat design language and color scheme 2) Proper form layout with clear input validation feedback 3) Professional typography with appropriate font sizes (≥28rpx for body text). Deduct 3 points for each confusing verification step UI, 5 points for inconsistent visual elements, and 5 points for poor form accessibility. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the verification flow smooth and user-friendly?",
      "description": "Judge whether the verification process provides smooth user experience: 1) Clear progress indicators and step-by-step guidance 2) Immediate feedback for verification actions (≤100ms response) 3) Intuitive error messages and recovery options 4) Seamless transitions between verification methods. Deduct 5 points for each confusing verification step, 3 points for slow loading states, and 5 points for unclear error recovery paths. Full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Communication",
  "difficulty": "hard"
}