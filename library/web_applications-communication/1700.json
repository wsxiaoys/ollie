{
  "index": 1700,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the code you generate is executable for demonstration purposes. Transform the collection agreement and profit-sharing agreement into a component with a plus sign for image uploads, and also include functionality to display the uploaded images.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the component structure properly implemented?",
      "description": "Review whether the code correctly implements a reusable component structure that integrates both collection agreement and profit-sharing agreement functionality. Check if the component uses proper encapsulation, follows component design patterns, and separates concerns. Score 0 if the component structure is missing, 5 if basic structure is implemented but lacks proper organization, and 10 if the component is well-structured, reusable, and follows best practices.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the image upload functionality with plus sign UI fully implemented?",
      "description": "Evaluate whether the code implements a user-friendly image upload interface with a visible plus sign indicator. Check if it includes proper visual feedback during hover/click states, handles multiple image formats, provides file size validation, and includes loading states. Deduct 3 points if the plus sign UI is missing, 5 points if upload functionality doesn't work, and 2 points if there's no visual feedback during upload process. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the image display functionality properly implemented?",
      "description": "Check whether the uploaded images are properly displayed with appropriate sizing, formatting, and layout considerations. Evaluate if the implementation includes image preview capabilities, thumbnail generation, gallery view options, and proper handling of different aspect ratios. Deduct 5 points if images aren't displayed after upload, 3 points if the display lacks proper formatting controls, and 2 points if there's no preview functionality. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the agreement functionality properly integrated with the image component?",
      "description": "Assess whether both collection and profit-sharing agreement functionalities are properly integrated with the image upload/display component. Check if the agreements can be properly linked to specific uploaded images, if agreement terms are clearly presented, and if user confirmation workflows are implemented. Deduct 5 points if agreements are not connected to images, 3 points if agreement workflows are incomplete, and 3 points if agreement text is not customizable. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid file types, oversized images, network errors during upload, missing image sources, and permission issues) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Drag-and-drop image uploading 2. Image editing tools 3. Agreement template selection 4. Digital signature integration). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple image upload handlers) 2. Function modules unrelated to agreements or image management (e.g., unrelated user profile features) 3. Fancy effects that affect performance (e.g., unnecessary animations that slow down the upload process). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI components/business logic/API calls), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast sliding, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Communication",
  "difficulty": "easy"
}