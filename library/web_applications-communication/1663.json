{
  "index": 1663,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable when possible. Develop a web chat tool with a homepage featuring two buttons: \"Create Room\" and \"Join Room",
  "checklist": [
    {
      "id": 0,
      "title": "Is the web chat room creation functionality fully implemented?",
      "description": "Evaluate whether the 'Create Room' button actually generates a unique room ID, initializes a new chat session, and provides a mechanism to share this room ID with others. Score 0 if room creation is missing, 5 if basic room creation exists without validation, and 10 if it includes server-side verification, unique ID generation with collision prevention, and visual feedback of successful creation.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the room joining mechanism properly implemented?",
      "description": "Check whether the 'Join Room' button includes input validation for room IDs, handles non-existent rooms gracefully, and successfully connects users to existing chat sessions. Deduct 5 points if there's no validation for invalid room IDs, 3 points if there's no loading state during connection, and 2 points if error messages are unclear. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the real-time messaging functionality implemented correctly?",
      "description": "Assess if the chat implements a reliable real-time messaging system (WebSockets/Server-Sent Events/long polling), handles message delivery statuses, and implements message queuing for offline users. Score 0 if messaging doesn't work in real-time, 5 if basic messaging works but lacks delivery confirmations, and 10 if it includes typing indicators, read receipts, and handles network interruptions gracefully.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the chat interface include essential messaging features?",
      "description": "Examine whether the chat interface includes message timestamps, user identification, message history loading, and scrolling to new messages. Deduct 2 points for each missing feature. Give 10 points only if the chat includes all essential features plus at least one additional feature like message editing, deletion, or reactions.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as network interruption, invalid inputs, concurrent users editing, browser tab switching, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. End-to-end encryption 2. File/image sharing 3. Voice/video chat option 4. Custom emoji/sticker support). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple notification systems coexisting) 2. Function modules unrelated to chat (e.g., a built-in calculator) 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/business logic/network layers), error handling patterns, and code reusability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no clear separation between components. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Message sending feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual stuttering during fast message scrolling, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Communication",
  "difficulty": "medium"
}