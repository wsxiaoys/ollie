{
  "index": 1181,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable for demonstration. Design an anonymous online voting system to be published in a fixed group where 17 members have voting rights. The voting requires selecting 3 people from 4 candidates through multiple selection. The system needs to prevent duplicate voting from these 17 people and display voting results after the deadline. Display results in HTML. The candidates are: Zheng Geng, Ge Daoshun, Huang Yiran, and Song Yuting. The voters are: Zheng Geng, Guo Mingkai, Huang Yiran, Song Yuting, Ye Zhen, Wang Yuanxin, Gao Yijun, Wu Fang, Zhang Zhihui, Ling Sicheng, Xu Jinsheng, Chi Zihua, Ge Daoshun, Xu Shiling, Zhang Di, Zhang Fangzhou, and Fan Lingling.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the anonymous voting system properly implemented?",
      "description": "Review whether the code implements a secure anonymous voting system where voters cannot be identified from their votes. Check if a voter authentication mechanism exists without revealing identity in the results. Score 0 if anonymity is not implemented, 5 if basic anonymity is implemented but with flaws, and 10 if complete anonymity with cryptographic protection is implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the multiple selection voting mechanism correctly implemented?",
      "description": "Verify if the system properly constrains voters to select exactly 3 candidates from the 4 options. Check if the UI clearly indicates the selection requirement and prevents submission with invalid selections (less than 3 or more than 3). Deduct 5 points if validation is missing, 3 points if validation exists but has bugs. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the duplicate voting prevention mechanism effective?",
      "description": "Evaluate how the system prevents the 17 specified voters from voting multiple times. Check for session management, cookies, authentication tokens, or other methods to track who has voted. Assess if the implementation securely stores this information. Score 0 if duplicate voting is possible, 5 if prevention exists but can be bypassed, and 10 if the prevention mechanism is robust.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the deadline and result display functionality implemented correctly?",
      "description": "Check if the system has a configurable deadline after which voting closes and results are automatically displayed. Verify if the transition from voting to results display is seamless. Deduct 5 points if deadline implementation is missing, 3 points if result display doesn't show automatically. Award full 10 points if both are implemented correctly with appropriate time handling.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser crashes, network interruptions, page refreshes, or concurrent voting) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Real-time voting statistics (visible only after deadline) 2. Secure voting verification receipts 3. Interactive result visualization). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple voter verification methods) 2. Function modules unrelated to voting (e.g., unnecessary animations) 3. Fancy effects that affect performance. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating voting logic/UI/authentication layers), clean code practices, and security considerations. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there are security vulnerabilities like XSS or CSRF. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual status for voting selection and submission. Deduct 5 points for operations without feedback, 3 points for confusing selection states, and 5 points for unclear submission confirmation. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Communication",
  "difficulty": "easy"
}