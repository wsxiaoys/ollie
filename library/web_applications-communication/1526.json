{
  "index": 1526,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable whenever possible. Implement the frontend for the page described above, including the collapsible sidebar on the left, the streaming response content frame on the right, and the input bar at the bottom right (supporting file and image imports).",
  "checklist": [
    {
      "id": 0,
      "title": "Is the collapsible sidebar implementation complete?",
      "description": "Check whether the sidebar can be collapsed/expanded with smooth animation (duration between 200-300ms). Verify that the sidebar maintains its state across screen size changes and includes proper icon transitions. Score 0 if the sidebar isn't collapsible, 5 if basic toggle functionality exists but lacks animation/transitions, and 10 if fully implemented with responsive behavior and proper state management.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the streaming response content frame properly implemented?",
      "description": "Evaluate the streaming content implementation for proper text animation (character-by-character or word-by-word appearance), scroll management (auto-scroll with user override detection), and proper formatting of code blocks and other content types. Deduct 5 points if streaming animation is missing, 3 points if code syntax highlighting is absent, and 5 points if the scroll behavior is problematic. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the input bar functionality complete?",
      "description": "Assess whether the input bar properly handles multiline input, expands vertically with content (with reasonable max-height), and includes a clear send button. Check for keyboard shortcuts (Enter to send, Shift+Enter for new line). Deduct 5 points if file/image import functionality is missing, 3 points if the input doesn't auto-resize, and 5 points if keyboard shortcuts are not implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the file and image import functionality properly implemented?",
      "description": "Verify that the code handles file/image uploads with proper preview, progress indication, size validation (reject files >10MB), and format validation. Check for drag-and-drop support and clipboard paste functionality. Deduct 5 points if only button upload is supported (no drag-and-drop), 5 points if there's no upload validation, and 7 points if image previews are missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as out-of-bounds input, network interruption, user operation errors, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dark/light mode toggle 2. Keyboard shortcut guide 3. Message search functionality 4. Markdown preview while typing). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to collapse the sidebar) 2. Function modules unrelated to a chat interface (e.g., built-in games) 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI components/state management/API services), component reusability, and build process configuration. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not configured properly. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast sliding, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Communication",
  "difficulty": "medium"
}