{
  "index": 1584,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable and functional. Create a local web page interface that serves as a product login page. It should include product demonstration images, username and password input fields, and the ability to log in with a mobile phone number or email address. At the bottom, provide password recovery functionality and options for logging in through partner websites such as WeChat, QQ, DingTalk, Sina, NetEase, etc. Also include two registration options: one for teachers and one for students.",
  "checklist": [
    {
      "id": 0,
      "title": "Is a complete login interface implemented with all required elements?",
      "description": "Check whether the code includes all required elements: product demo images, username/password fields, mobile/email login options, password recovery, third-party login options (WeChat, QQ, DingTalk, Sina, NetEase), and separate registration options for teachers and students. Score 0 if missing more than 3 elements, 5 if missing 1-2 elements, and 10 if all elements are present with proper layout and design.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the form validation properly implemented?",
      "description": "Evaluate whether the code implements proper validation for username, password, email, and phone number inputs. Check for regex patterns, instant feedback on invalid inputs, and prevention of form submission with invalid data. Score 3 if basic validation exists, 7 if validation provides user feedback, and 10 if comprehensive validation with clear error messages and visual indicators is implemented.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the authentication flow complete and functional?",
      "description": "Review whether the login functionality handles different authentication methods (username/password, mobile, email) correctly with appropriate state management. Check if the code includes proper handling of login attempts, success/failure responses, and session management. Deduct 5 points if the authentication logic is incomplete, and 3 points if error handling is missing. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are the third-party login options and registration paths properly implemented?",
      "description": "Check if the third-party login options (WeChat, QQ, DingTalk, etc.) have proper OAuth implementation or mock interfaces, and whether the different registration paths (teacher vs student) are clearly distinguished with appropriate form fields and validation. Deduct 5 points if third-party logins are merely decorative without functionality, and 3 points if the registration paths lack differentiation. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as network errors, wrong credentials, browser compatibility issues, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Password strength meter 2. Animated transitions between login methods 3. Intelligent form field auto-completion 4. Biometric authentication options). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple validation methods for the same field) 2. Function modules unrelated to login (e.g., news feeds, unnecessary animations) 3. Fancy effects that affect performance (e.g., heavy background animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core login functionality is interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/validation/authentication logic), code organization, and best practices for web development. Deduct 5 points if global variable pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no consideration for accessibility or responsiveness. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times) 4) Consistent styling for form elements. Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic form layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Form feedback delay ≤ 100ms 2) Transition between login methods is smooth and intuitive 3) Clear visual focus guidance and tab navigation 4) Mobile-friendly touch targets (≥ 44px). Deduct 5 points for each operation without feedback, 3 points for jarring transitions between form states, and 5 points for hard-to-find important functions like password recovery. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Communication",
  "difficulty": "easy"
}