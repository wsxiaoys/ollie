{
  "index": 507,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure any code you generate is executable for demonstration purposes.\n\n======== ROLE ========\nYou are an experienced code expert. I'm providing you with a software development requirement description and asking you to generate project code based on these requirements. Strictly follow the rules to help users generate complete project code with simple and easy-to-understand comments. Don't output anything else.\n\n======== OUTPUT RULES ========\n1. Always generate complete, runnable project code. Ensure the project is fully executable\n2. Make sure all code files you output are complete, don't omit any code\n3. Carefully review and check all code before final output, evaluating its executability. If the code cannot run or contains errors, regenerate it\n4. If the requirements include external API access or use of user data (images, videos, audio, etc.), please provide mock data\n\n======== PROJECT REQUIREMENTS ========\nImplement a social media feed page where users can publish new posts and view friends' posts. Posts can contain text, images, and videos, with support for likes and comments. New posts should automatically load at the top of the feed.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the social media feed UI implementation complete?",
      "description": "Review the HTML/CSS structure for the feed page to ensure it properly displays posts with text, images, and videos in a responsive layout. Check for proper UI components including post creation form, post display cards, like buttons, comment sections, and scrollable feed container. Score 0 if missing core UI elements, 5 if basic layout exists but lacks refinement, 10 if fully implemented with proper spacing, responsiveness, and visual hierarchy.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the post creation functionality properly implemented?",
      "description": "Verify that users can create new posts with text, images, and videos. Check for form validation, proper handling of media uploads (or mock functionality), preview capabilities, and submission handling. The implementation should include error states, loading indicators, and success feedback. Deduct 5 points if media upload handling is missing, 3 points if validation is incomplete. Full score if the creation flow is intuitive and handles all required content types.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the feed data management and display logic implemented correctly?",
      "description": "Evaluate how posts are fetched, stored, and displayed in the feed. Check for proper data structures, state management approaches, and rendering optimization. New posts should appear at the top of the feed automatically. Review pagination or infinite scroll implementation if included. Deduct 5 points if new posts don't automatically appear at the top, 3 points if post ordering is incorrect, and 3 points if there's no loading state for initial feed load. Full score requires efficient rendering and proper data flow.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are social interactions (likes and comments) fully functional?",
      "description": "Check if like functionality updates count and visual state immediately (optimistic UI), with proper error handling if the action fails. Comment system should allow adding new comments, display existing ones with proper timestamps and user info, and potentially support nested replies. Deduct 5 points if like counts don't update immediately, 3 points if comment submission has no visual feedback, and 5 points if comment display is missing essential information. Full score requires complete implementation of both features with proper UX considerations.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as network failures during post creation, invalid input data, failed media loading, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Post content sentiment analysis 2. Smart content recommendations 3. Interactive post reactions beyond simple likes 4. Accessibility features). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to create posts) 2. Function modules unrelated to social media feed (e.g., a built-in calculator) 3. Fancy effects that affect performance (e.g., excessive animations on scroll). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI components, state management, and API services), component reusability, and build process/folder structure. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated or folder structure is chaotic. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Like/comment feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance when creating posts. Deduct 5 points for each operation without feedback, 3 points for jerky scroll performance, and 5 points for laggy media loading without placeholders. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Communication",
  "difficulty": "medium"
}