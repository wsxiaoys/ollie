{
  "index": 514,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the generated code is executable and functional. Create a web-based online document collaboration editing frontend interface. The interface should include a text editing area where users can input text content. Above it, there should be a toolbar containing text formatting buttons such as \"Bold,\" \"Italic,\" \"Underline,\" etc. When clicked, these buttons should change the style of the selected text. Additionally, the interface should display a real-time word count of the current document.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the basic text editing area properly implemented?",
      "description": "Review whether the code implements a functional text editing area with proper event handling (keypress, focus, blur), text selection capabilities, and cursor positioning. Score 0 if the editing area is not implemented, 5 if it has basic functionality but lacks advanced features, and 10 if it includes features like auto-save and undo/redo history.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the formatting buttons fully functional?",
      "description": "Check whether the code properly implements formatting buttons (Bold, Italic, Underline, etc.) that apply formatting to selected text. The implementation should handle selection ranges correctly and maintain proper markup in the document. Deduct 2 points if any core formatting option is missing, 3 points if the selection state after formatting is lost, and 5 points if the formatting doesn't persist across editing sessions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the real-time word count feature correctly implemented?",
      "description": "Evaluate whether the word count updates in real-time as the user types, handles different languages correctly, and accounts for edge cases (like consecutive spaces or punctuation). The counter should update without noticeable performance impact. Deduct 3 points if the count is inaccurate, 3 points if it doesn't update in real-time, and 4 points if it causes performance issues. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the interface handle collaborative features appropriately?",
      "description": "Assess whether the code includes conflict resolution mechanisms, user presence indicators, and real-time synchronization capabilities. Check for cursor/selection broadcasting between users and clear visual feedback on who is editing what. Deduct 5 points if there's no conflict resolution strategy, 3 points if user presence is not visualized, and 2 points if there's no indication of remote changes. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as content loss prevention, browser crashes, network interruption, concurrent edits, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Automatic document formatting 2. AI-powered writing suggestions 3. Document history with visual diff 4. Markdown/rich text switching capability). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple text selection methods coexisting) 2. Function modules unrelated to document editing (e.g., built-in games or distracting elements) 3. Fancy effects that affect editing performance (e.g., excessive animations on keypress). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating document model/view/controller layers), component reusability, and build process optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not optimized for performance. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern editor design principles: 1) Clean, distraction-free editing area 2) Proper toolbar organization with logical grouping 3) Appropriate use of white space and contrast 4) Professional typography for both editing area and UI elements. Deduct 3 points for cluttered UI elements, 5 points for inconsistent visual hierarchy, and 5 points for poor readability in the editing area. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Text input latency ≤ 16ms 2) Format button feedback ≤ 100ms 3) Clear visual indicators for text selection and formatting states. Deduct 5 points for perceptible input lag, 3 points for formatting operations that disrupt the editing flow, and 5 points if the current formatting state isn't clearly indicated. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Communication",
  "difficulty": "medium"
}