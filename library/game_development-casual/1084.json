{
  "index": 1084,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable when possible. Create a viral \"cat confession\" code that's especially popular on the internet.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core 'cat confession' functionality fully implemented?",
      "description": "Check if the code creates an interactive interface where users can input 'confessions' alongside cat images/animations. The implementation should include text input, cat image selection/display, and confession posting mechanism. Score 0 if there's no interactive confession input, 5 if basic functionality exists but lacks visual cat elements, and 10 if the complete cat confession experience is implemented with proper text-image integration.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the viral sharing mechanism properly implemented?",
      "description": "Evaluate the social sharing capabilities: 1) One-click sharing to major platforms (Twitter, Facebook, Instagram, TikTok) 2) Ability to generate shareable links/images 3) Copy-to-clipboard functionality. Deduct 3 points for each missing platform integration, 5 points if there's no image export functionality, and 5 points if the shared content lacks proper attribution/watermarking. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the cat visualization element compelling and customizable?",
      "description": "Review the quality and variety of cat visualizations: 1) Multiple cat images/animations to choose from 2) Cat emotion/reaction tied to confession content 3) Customization options (cat colors, accessories, backgrounds). Deduct 3 points if fewer than 5 cat options exist, 5 points if cats don't react to content, and 5 points if no customization is available. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the 'viral' component engineered with effective growth mechanics?",
      "description": "Assess implementation of viral growth features: 1) Call-to-action for sharing 2) Gamification elements like confession streaks or achievements 3) Subtle prompts to engage friends. Deduct 3 points for missing social proof indicators (view/share counters), 5 points for lack of friend invitation system, and 5 points if there's no reward for viral spreading. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as empty confessions, oversized images, network interruption during sharing, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-generated cat responses to confessions 2. Voice-to-text confession with matching cat reactions 3. Seasonal themes or trending meme integration). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple sharing methods that do the same thing) 2. Function modules unrelated to cat confessions (e.g., a built-in weather forecast) 3. Fancy effects that affect performance (e.g., excessive animations that slow page loading). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI components/state management/API calls), code reusability, and performance optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if basic performance optimizations are missing (such as image lazy loading). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during interactions, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Casual",
  "difficulty": "hard"
}