{
  "index": 1581,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable and demonstrable. Create a web-based Chinese-English matching game that comes with 10 English words along with their Chinese translations. Words should be displayed on the left side and Chinese translations on the right side (for example, apple-苹果). Include a voice system that pronounces the English word when the Chinese translation is clicked and pronounces the Chinese when the English word is clicked.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core Chinese-English matching game functionality properly implemented?",
      "description": "Evaluate whether the code accurately implements the matching game with 10 English words and their Chinese translations. Check if the matching logic handles correct and incorrect matches appropriately with visual feedback. Score 0 if matching functionality is not implemented, 5 if basic matching exists but has issues, and 10 if the matching system is fully functional with proper validation and scoring.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the word pronunciation system implemented correctly?",
      "description": "Verify if the voice system pronounces English words when Chinese translations are clicked and Chinese translations when English words are clicked. Check if the Web Speech API or a similar technology is properly integrated, with appropriate error handling for unsupported browsers. Deduct 5 points if only one language works, 3 points if pronunciation has significant delays (>500ms), and 2 points if there's no visual feedback during pronunciation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the required 10 English-Chinese word pairs properly included?",
      "description": "Check if exactly 10 English-Chinese word pairs are included in the implementation. Verify that translations are accurate and culturally appropriate. Deduct 1 point for each missing pair, 0.5 points for each inaccurate translation, and 2 points if words are hardcoded rather than stored in a maintainable data structure. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the layout properly implemented with left-side English words and right-side Chinese translations?",
      "description": "Assess if the layout follows the specification with English words on the left and Chinese translations on the right. Check if the layout is responsive and maintains proper alignment across different screen sizes. Deduct 5 points if the layout is reversed, 3 points if alignment issues exist, and 5 points if the layout breaks on mobile devices. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browsers without speech synthesis support, network issues loading audio resources, user rapid-clicking, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Spaced repetition learning system 2. Pronunciation accuracy scoring 3. Visual mnemonics for vocabulary). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple audio playback methods) 2. Function modules unrelated to language learning (e.g., unrelated games or tools) 3. Fancy effects that affect performance (e.g., excessive animations that slow down matching). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/audio layers), code organization, and maintainability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no clear separation between data and presentation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during interactions, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Casual",
  "difficulty": "easy"
}