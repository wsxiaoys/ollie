{
  "index": 1729,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Create a game about Monkey King's Havoc in Heaven and generate the code for it.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core gameplay mechanic of Monkey King's Havoc in Heaven properly implemented?",
      "description": "Review whether the code accurately implements the core gameplay elements of Monkey King fighting against heavenly forces. Check for proper character movement controls, combat mechanics (attacks, special abilities like cloud-riding, somersaults, staff transformation), and enemy AI behaviors. Score 0 if core gameplay is missing, 5 if basic movement and combat exist, and 10 if the gameplay includes signature Monkey King abilities from the classic story.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the game progression system well-designed?",
      "description": "Evaluate whether the game includes level progression that follows the narrative of Monkey King's journey (Havoc in Heaven storyline with recognizable scenes like the celestial palace, Dragon King's underwater palace, etc.). Check if there are boss battles with known characters from the story (Jade Emperor, Erlang Shen, Nezha). Deduct 5 points if the game lacks progression logic, and 3 points if the progression doesn't follow the traditional narrative. Give 10 points for a comprehensive story-based level system.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the key character abilities and transformations of Monkey King implemented?",
      "description": "Check whether the code implements Monkey King's signature abilities: 1) Staff transformation (extending/shrinking), 2) 72 transformations or shapeshifting, 3) Cloud-somersault travel, 4) Hair magic tricks. Deduct 3 points for each missing signature ability. The full score is 10 points for including all or most iconic abilities with proper visual feedback.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the game's visual style consistent with Chinese mythological aesthetics?",
      "description": "Assess whether the visual elements (character designs, environments, animations) reflect traditional Chinese art styles appropriate for the Journey to the West theme. Check for proper use of colors symbolic in Chinese culture, traditional architectural elements, and authentic character designs. Deduct 5 points if the visuals are generic without Chinese cultural elements, and 3 points if the style is inconsistent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as out-of-bounds input, resource loading failures, user operation errors, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dynamic weather systems affecting gameplay 2. Procedurally generated heavenly palaces 3. Interactive storytelling with famous scenes from Journey to the West). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple movement control systems) 2. Function modules unrelated to the Monkey King theme (e.g., unrelated mini-games) 3. Fancy effects that affect performance (e.g., excessive particle systems that cause lag). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/physics/input layers), resource management efficiency, and performance optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no optimization for asset loading and rendering. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern game UI principles: 1) Harmonious color matching reflecting Chinese cultural aesthetics 2) Proper layout spacing for game HUD elements 3) Professional font system with legible text that fits the theme (possibly stylized Chinese-inspired fonts). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic UI layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Responsive controls with input lag â‰¤ 100ms 2) Smooth animations for Monkey King's movements and transformations 3) Clear visual feedback for player actions and game events. Deduct 5 points for each operation without feedback, 3 points for choppy animations during fast movements, and 5 points for unclear combat hit detection or feedback. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Action/Rhythm",
  "difficulty": "medium"
}