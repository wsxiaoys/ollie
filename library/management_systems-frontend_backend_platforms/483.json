{
  "index": 483,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the code you generate is executable. Develop an office document annotation tool. Users can upload office documents (such as DOCX format) through the frontend, and add annotations to the document (annotator, annotation content, annotation time). Other users can view the annotation information, and the tool supports replying to and modifying annotations.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the document uploading and rendering functionality fully implemented?",
      "description": "Review whether the code implements a complete file upload system with proper validation for document formats (DOCX, etc.), secure file handling, and accurate rendering of the document content in the browser. Check if it handles different document structures properly and maintains formatting. Score 0 if document upload/rendering is not implemented, 5 if basic uploading works but rendering has issues, 10 if the system fully supports uploading and displaying documents with preserved formatting.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the annotation system properly implemented?",
      "description": "Evaluate whether the code implements a complete annotation system that allows users to select portions of text/content and add annotations (including annotator info, content, and timestamp). Check if annotations are visually distinguishable and properly positioned relative to the document content. Deduct 5 points if annotation positioning is inaccurate, 3 points if timestamp tracking is missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the annotation interaction functionality complete?",
      "description": "Verify if the code implements functionality for viewing, replying to, and modifying annotations. Check if the system tracks edit history for annotations and if permission controls are in place (who can edit which annotations). Deduct 4 points if reply threading is missing, 3 points if annotation editing lacks version control, and 3 points if permission management is absent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the document/annotation persistence mechanism robust?",
      "description": "Assess whether the code implements proper storage and retrieval of both documents and annotations. Check if annotations are stored separately from documents but linked appropriately, and if the system handles concurrent edits properly. Deduct 4 points if annotations aren't properly persisted across sessions, 3 points if there's no conflict resolution for concurrent edits, and 3 points if the storage mechanism doesn't scale well. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code handles common error scenarios (invalid document formats, large files, concurrent editing conflicts, etc.) and provides friendly error messages or recovery mechanisms. Code with strong robustness should effectively handle edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Real-time collaborative annotation with presence indicators 2. AI-assisted annotation categorization 3. Document comparison with annotation highlighting 4. Analytics dashboard for annotation activities). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple annotation systems coexisting) 2. Function modules unrelated to document annotation (e.g., a built-in chat system not tied to annotations) 3. Fancy effects that affect performance (e.g., excessive animations when viewing annotations). Deduct 3 points for each redundancy found, and directly deduct 10 points if core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating document handling/annotation logic/view/storage layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Annotation creation feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance when switching between annotations. Deduct 5 points for each operation without feedback, 3 points for visual after-images during document scrolling, and 5 points for hard-to-find annotation controls. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "hard"
}