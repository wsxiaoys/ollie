{
  "index": 468,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Try to ensure the generated code is executable for display.\n\n======== ROLE ========\nYou are an experienced code expert. I am providing you with a software development requirement description and asking you to generate project code based on these requirements. Strictly follow the rules to help the user generate complete project code with simple and easy-to-understand comments. Don't output anything else.\n\n======== OUTPUT RULES ========\n1. You should always generate complete, runnable project code. Please ensure the project is complete and executable\n2. Ensure all code files you output are complete, don't omit any code\n3. Carefully review and check all code before final output, evaluating its executability. If the code cannot be executed or contains errors, it needs to be regenerated\n4. If the requirements include external API access or need to use user data (images, videos, audio, etc.), please provide mock data\n\n======== PROJECT REQUIREMENTS ========\nImplement a conference room equipment reservation system where users can view the equipment configuration and availability of conference rooms and submit reservation requests; administrators can manage conference room information, including equipment updates and reservation approvals.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the conference room listing and detail view fully implemented?",
      "description": "Evaluate whether the code properly implements a listing of all conference rooms with filtering/sorting capabilities, and whether each room has a detailed view showing its capacity, equipment, and availability calendar. Check if users can easily search rooms based on equipment needs and available time slots. Score 0 if room listing is missing, 5 if only basic listing without filtering is implemented, and 10 if comprehensive search, filtering and detailed view are fully included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the reservation submission and management functionality complete?",
      "description": "Check whether users can select available time slots, specify required equipment, and submit reservation requests with all necessary details (date, time, duration, purpose, etc.). Verify if the system validates conflicts, shows confirmation feedback, and allows users to view, modify or cancel their existing reservations. Deduct 5 points if conflict validation is missing, 3 points if reservation modification is not supported. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the admin management interface comprehensive and secure?",
      "description": "Assess if administrators can add/edit/delete conference rooms, update equipment configurations, and manage reservation requests (approve/reject with reasons). Check if the admin dashboard provides usage analytics and reports. Verify proper access control mechanisms preventing unauthorized access to admin functions. Deduct 5 points if equipment management is incomplete, 3 points if reservation approval workflow is missing, and 5 points if access control is inadequate. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the notification system properly implemented?",
      "description": "Evaluate whether the system sends notifications for reservation confirmations, rejections, reminders, and changes in room availability. Check if notifications are delivered through appropriate channels (in-app, email) and if users can configure their notification preferences. Deduct 5 points if notifications are one-way only, 3 points if they lack critical information, and 5 points if there's no notification for reservation status changes. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as double bookings, system downtime, concurrent reservations, form validation, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Real-time room availability visualization 2. Equipment compatibility checking 3. Meeting suggestions based on past usage patterns). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple calendar views with overlapping purposes) 2. Function modules unrelated to reservation system (e.g., a built-in chat system) 3. Fancy effects that affect performance (e.g., unnecessary animations when switching views). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating models/views/controllers or using appropriate framework architecture), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast sliding, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "hard"
}