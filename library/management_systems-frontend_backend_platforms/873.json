{
  "index": 873,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to provide executable code for demonstration. Help me create a webpage that records student classroom completion status.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core student record functionality fully implemented?",
      "description": "Review whether the code accurately implements a student record system with features for adding, editing, and deleting student completion records. Check if it includes student identification, completion status tracking, and timestamp recording. Score 0 if the core functionality is missing, 5 if only basic recording is implemented, and 10 if comprehensive tracking with detailed status indicators is included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is data persistence implemented?",
      "description": "Evaluate whether the application implements proper data storage (localStorage, IndexedDB, or server-side storage). Check if data survives page refreshes and browser restarts. Deduct 5 points if only temporary memory storage is used, 3 points if persistence exists but without error handling for storage failures. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the data visualization and reporting feature implemented?",
      "description": "Assess whether the code includes visualization of completion data (charts, progress bars, or summary statistics). Check for filtering options, sorting capabilities, and exportable reports. Deduct 5 points if only raw data is displayed without visualization, 3 points if visualization exists but lacks interactivity. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the classroom management system comprehensively designed?",
      "description": "Check if the implementation includes class/course management, multiple classroom support, student grouping, and batch operations. Deduct 5 points if only single-class tracking is implemented, 3 points if classroom management exists but without organizational hierarchy. Give 10 points if the system supports complete classroom ecosystem management.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid input, database errors, concurrent edits, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Automatic attendance tracking 2. AI-powered insights on student performance 3. Real-time collaborative editing). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to record the same information) 2. Function modules unrelated to classroom management (e.g., a built-in game) 3. Fancy effects that affect performance (e.g., unnecessary animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data/UI/controller layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast scrolling, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "easy"
}