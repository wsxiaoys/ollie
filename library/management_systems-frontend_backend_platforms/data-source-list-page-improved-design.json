{
  "index": 1410,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, professional responses. Make sure the code you generate is executable for demonstration. Help me write a data source list page with an improved interface design, and also include the code file names.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the data list component fully implemented?",
      "description": "Review whether the code implements a complete data list component including table structure, column headers, data rows, pagination, and sorting functionality. Score 0 if core list rendering is missing, 5 if only basic display is implemented without interactions, and 10 if the list includes proper data binding with dynamic rendering capabilities.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are filtering and search functions properly implemented?",
      "description": "Check whether the implementation includes comprehensive data filtering mechanisms such as text search, dropdown filters, date range filters, and advanced filtering options. Deduct 3 points if only basic text search is available, 5 points if filters lack real-time feedback, and 7 points if there's no filter persistence between sessions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the data management functionality complete?",
      "description": "Evaluate if the code implements CRUD operations (Create, Read, Update, Delete) for the data list. Check for proper form validation, confirmation dialogs for destructive actions, and optimistic UI updates. Deduct 5 points if any CRUD operation is missing, 3 points if validation is incomplete, and 2 points if there's no error handling. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the interface design improved as requested?",
      "description": "Assess whether the implementation includes significant UI/UX improvements over standard data lists such as responsive design, visual hierarchy, appropriate whitespace usage, and consistent styling. Deduct 5 points for using default/basic styling without customization, 3 points for inconsistent UI patterns, and 5 points for non-responsive designs. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as empty data sets, network failures, large data volumes, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Inline data editing 2. Data visualization elements 3. Keyboard shortcuts for navigation/actions). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple search mechanisms) 2. Function modules unrelated to data listing (e.g., unnecessary analytics) 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data/view/controller layers), component reusability, naming conventions, and code organization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if proper file structure with appropriate file naming is missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast scrolling, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "easy"
}