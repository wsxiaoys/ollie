{
  "index": 457,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the generated code is executable for demonstration. I am committed to making investment my lifelong hobby and second career. I want to build a stable and profitable investment system that includes stock selection, buy/sell point identification, and position management functions. I need to integrate these features into a frontend software. This software should be able to automatically and independently obtain real-time information about stocks and other markets from public free sources. I have Visual Studio Code software. Please help me generate standalone software that can meet all my requirements above.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the stock selection system fully implemented?",
      "description": "Review whether the code implements comprehensive stock selection criteria including technical indicators (e.g., RSI, MACD, Moving Averages), fundamental analysis (P/E ratio, EPS growth, etc.), and market sentiment analysis. Check if the system allows for customizable screening parameters and saving favorite screening configurations. Score 0 if no selection system is implemented, 5 if only basic technical indicators are available, and 10 if it includes a comprehensive multi-factor model with backtesting capabilities.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the buy/sell signal identification algorithms implemented effectively?",
      "description": "Evaluate whether the code includes multiple technical analysis algorithms for identifying entry/exit points (candlestick patterns, support/resistance levels, volume analysis). Check if it provides visual indicators on charts for identified signals and includes confidence levels for each signal. The system should allow for customizable signal parameters. Deduct 5 points if signals are based solely on single indicators without confirmation strategies, and 3 points if historical accuracy metrics for signals are not provided. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the position management functionality comprehensive?",
      "description": "Assess whether the code implements portfolio management features including position sizing calculations, risk management rules (stop-loss, take-profit settings), diversification analysis, and overall portfolio performance metrics. Check if it includes scenario analysis for different market conditions. Deduct 5 points if position sizing is simplistic (e.g., fixed percentages only), and 3 points if there's no correlation analysis between holdings. Give 10 points if fully implemented with dynamic risk adjustment capabilities.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the real-time data acquisition system robust and compliant?",
      "description": "Evaluate if the code effectively obtains market data from free public APIs (like Yahoo Finance, Alpha Vantage) with proper rate limiting, fallback mechanisms, and cache strategies. Check for data validation and error handling for API failures. System must respect API terms of service and include proper attribution. Deduct 5 points for hardcoded API keys, 5 points for missing retry logic, and 5 points for no data freshness indicators. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as API failures, network interruption, invalid user inputs, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-based sentiment analysis from news sources 2. Auto-correlation with major economic indicators 3. Pattern recognition from historical market crashes 4. Visualized risk exposure heat maps). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar indicators (e.g., multiple versions of RSI calculations) 2. Function modules unrelated to investment analysis (e.g., a built-in social media client) 3. Fancy visualizations that sacrifice performance (e.g., 3D charts that obscure data). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data acquisition/analysis/visualization layers), unit test coverage for calculation accuracy, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional financial dashboard standards?",
      "description": "Evaluate whether the design follows professional financial interface principles: 1) Color schemes appropriate for financial data (red/green contrasts for gains/losses, muted backgrounds) 2) Information density optimized for scanning large datasets 3) Professional typography for numerical data (monospaced fonts for alignment, appropriate decimal precision). Deduct 3 points for cluttered dashboards, 5 points for indistinguishable data series in charts, and 5 points for poor information hierarchy. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and responsive for investment decision-making?",
      "description": "Judge whether the interface facilitates rapid investment decisions: 1) Chart interactions respond in under 100ms 2) Data refresh rates are configurable based on market volatility 3) Critical alerts have distinct visual and optional audio cues. Deduct 5 points for charts that lag during period changes, 3 points for confusing tooltip behaviors, and 5 points for hard-to-access critical functions during market hours. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "hard"
}