{
  "index": 920,
  "question": "You are a code expert, please use your professional knowledge to generate accurate, professional responses. Pay attention to ensuring that the generated code is executable for demonstration. Please provide code for the frontend page design of a property management system based on WeChat Mini Program.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the Mini Program structure complete with necessary configuration files?",
      "description": "Review whether the code includes the essential WeChat Mini Program configuration files (app.json, app.wxss, app.js, project.config.json) with proper global settings. Check if page registration is correctly implemented in app.json with appropriate window configuration. Deduct 5 points if global configuration is missing, 3 points for incomplete page registration. Score 10 points if all configurations are properly implemented with optimization for property management scenarios.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the core property management features implemented?",
      "description": "Evaluate if the code implements essential property management features: property listing/details, payment management, maintenance requests, announcements, and user profile management. Score 0 if core features are missing, 5 points if only basic features exist, and 10 points if all essential features with proper CRUD operations are implemented. Check for proper API integration points even if backend implementations are not included.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the WeChat Mini Program component utilization appropriate?",
      "description": "Check whether the code effectively utilizes built-in WeChat components (wx-swiper, wx-tab, wx-form, etc.) instead of reinventing with custom implementations. Validate proper usage of component lifecycle hooks and data binding. Deduct 3 points for each major feature implemented without appropriate WeChat components, and 5 points if custom implementations negatively impact performance. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the WeChat authorization and user login flow correctly implemented?",
      "description": "Assess if the code includes proper WeChat authorization flow using wx.login(), handles session management, and implements secure storage of user credentials. Check for proper error handling during login failures and session expiration. Deduct 5 points if authorization is missing, 3 points if error handling is incomplete. Give 10 points if the implementation follows WeChat's best practices including silent login and refreshing mechanisms.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as network failures, API errors, invalid input data, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. OCR-based meter reading submission 2. AI-based maintenance issue identification 3. WeChat payment integration with automatic receipt generation). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple notification systems) 2. Function modules unrelated to property management (e.g., built-in games) 3. Fancy effects that affect performance (e.g., excessive animations on property listings). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI components, logic, and API services), component reusability, and appropriate file organization following WeChat Mini Program conventions. Deduct 5 points if global state management is chaotic; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if custom components lack proper encapsulation and documentation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows WeChat Mini Program design principles: 1) Consistent with WeChat's visual language and component styles 2) Proper layout spacing and responsive design for different device sizes 3) Professional typography system consistent with WeChat standards. Deduct 3 points for each inconsistent visual element, 5 points for non-standard component styling, and 5 points for layouts that break on different screen sizes. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to WeChat Mini Program performance standards: 1) Page transitions complete within 300ms 2) List rendering optimized with recycleView for property listings 3) Lazy loading for image-heavy pages. Deduct 5 points for janky scrolling, 3 points for unoptimized list rendering causing frame drops, and 5 points for blocking operations in the UI thread. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "easy"
}