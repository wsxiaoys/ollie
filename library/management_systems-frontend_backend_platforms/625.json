{
  "index": 625,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the generated code is executable for demonstration. Create a Building Information Modeling (BIM) management system that supports uploading .rvt/.ifc formats and displays 3D previews. Allow adding tags for floors and disciplines (architecture/structure/MEP), provide measurement tools and sectional view generation capabilities. Model updates must follow an approval workflow (initiate-review-publish).",
  "checklist": [
    {
      "id": 0,
      "title": "Is the BIM file upload and format conversion system fully implemented?",
      "description": "Review whether the code accurately implements file upload mechanisms for .rvt and .ifc formats, includes proper validation of file integrity, and conversion to web-compatible 3D formats (e.g., glTF, OBJ). Check if the system handles large file uploads with chunking and progress tracking. Score 0 if upload functionality is missing, 5 if basic upload is implemented without format conversion, and 10 if complete upload, validation, and conversion pipeline is implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the 3D model viewer properly implemented with all required functionality?",
      "description": "Evaluate the implementation of the 3D viewer component. It should support basic navigation (pan, zoom, rotate), camera positioning presets, and display optimization for complex models. Check if the viewer handles different LOD (Level of Detail) to maintain performance with large models. Score 0 if viewer is not implemented, 5 if only basic viewing capabilities exist, and 10 if advanced features like selective rendering, performance optimizations, and cross-browser compatibility are included.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are tagging and classification features complete?",
      "description": "Check if the system allows adding, editing, and filtering tags for floors and disciplines (architecture/structure/MEP). Evaluate whether the tagging system is hierarchical, supports searching, and is visually integrated with the 3D model. Verify that discipline-specific color coding is applied to model components. Deduct 5 points if tagging is not connected to visual representation, and 3 points if bulk tagging options are missing. Full score requires persistent metadata storage and tag-based filtering in the UI.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are measurement tools and sectional view capabilities implemented?",
      "description": "Assess whether the code includes comprehensive measurement tools (distance, area, angle) and generating cross-sectional views through the model. Check for accuracy in measurements with proper units conversion. Verify that section planes can be positioned freely and that section views are generated in real-time. Deduct 5 points if only basic measurements are implemented, and 3 points if sectional views lack customization options. The full score requires tools with professional-grade accuracy and intuitive UX.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as corrupted BIM files, browser memory limitations, unsupported model features, etc.) and provide friendly error prompts or recovery mechanisms. Check for validation of user inputs in measurement tools and handling of concurrent user actions. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-powered clash detection 2. Automated space usage analysis 3. VR/AR viewing mode 4. Collaborative annotation systems). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple measurement tools using different calculation methods) 2. Function modules unrelated to BIM management (e.g., a built-in document editor) 3. Fancy effects that affect performance (e.g., unnecessary particle effects or animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating 3D rendering/BIM data processing/approval workflow), unit test coverage, and build process automation. Check for proper memory management when handling large 3D models. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching that distinguishes different disciplines/systems 2) Proper layout with clear separation between model viewer, navigation controls, and property panels 3) Professional font system with technical readability (body font size â‰¥ 14px, monospace for measurements). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the approval workflow fully implemented and intuitive?",
      "description": "Judge whether the initiate-review-publish workflow is properly implemented with: 1) Clear status indicators for models 2) Role-based permissions for workflow actions 3) Version comparison tools between iterations 4) Comment/feedback system for reviewers. Deduct 5 points if the workflow lacks audit trails, 3 points if notification systems are missing, and 5 points if version control is inadequate. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "hard"
}