{
  "index": 480,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be mindful to ensure the generated code is executable for demonstration. Develop an inventory management system where users can add, edit and delete inventory items, track inventory quantities, set minimum inventory warning thresholds, generate inventory reports, and support barcode scanning functionality.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the inventory item CRUD system fully implemented?",
      "description": "Review whether the code accurately implements complete inventory item management through proper data structures and UI components, including add/edit/delete operations with field validation (item name, SKU, category, price, quantity, etc.). Score 0 if core CRUD operations are not implemented, 5 if only basic add/delete is implemented, and 10 if all operations include proper validation, duplicate prevention, and batch operations.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the inventory quantity tracking and threshold warning system implemented?",
      "description": "Check whether the system includes real-time inventory quantity tracking with automatic updates, configurable minimum stock thresholds, and proactive warning mechanisms (visual alerts, notifications, email triggers). Deduct 5 points if quantity updates are not real-time, and 3 points if warning thresholds cannot be customized per item. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the inventory reporting and analytics functionality designed comprehensively?",
      "description": "Evaluate whether the system generates comprehensive inventory reports including stock levels, movement history, low-stock alerts, and value calculations. Reports should support multiple formats (PDF, Excel, CSV) and date range filtering. Deduct 5 points if reports lack visual charts/graphs, and 3 points if export functionality is missing. Check whether historical data tracking and trend analysis are implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the barcode scanning functionality integrated effectively?",
      "description": "Check whether the code includes barcode scanning capabilities using camera API or external scanner integration, with proper barcode format recognition (UPC, EAN, Code128, etc.). Evaluate scanner UI responsiveness, error handling for unrecognized codes, and seamless integration with inventory lookup/addition workflows. Deduct 5 points if camera permission handling is missing, and 3 points if multiple barcode formats are not supported. Give 10 points if fully implemented with offline scanning capability.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid input data, network failures, database connection issues, concurrent access conflicts, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should include input sanitization, transaction rollback, and graceful degradation, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-powered demand forecasting 2. Mobile app with offline sync 3. Integration with suppliers for automatic reordering 4. Multi-location inventory tracking 5. Photo recognition for item identification). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple validation logics for the same field) 2. Function modules unrelated to inventory management (e.g., built-in games or social features) 3. Overly complex animations that affect performance (e.g., excessive transitions on data tables). Deduct 3 points for each redundancy found, and directly deduct 10 points if core inventory functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data layer/business logic/presentation layers), proper error handling, database optimization, and security measures. Deduct 5 points if SQL injection vulnerabilities exist or input validation is missing; deduct 5 points if the code lacks proper separation of concerns; deduct 5 points if database queries are not optimized for large datasets. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching with proper contrast ratios for accessibility 2) Consistent layout spacing using grid systems 3) Professional typography with readable font sizes (â‰¥14px for body text) 4) Intuitive navigation and information hierarchy. Deduct 3 points for each cluttered interface section, 5 points for poor color accessibility, and 5 points for inconsistent design patterns. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects enhance user experience: 1) Form submissions provide immediate feedback 2) Data table sorting/filtering responds within 200ms 3) Loading states are clearly indicated 4) Barcode scanning provides real-time visual feedback. Deduct 5 points for each operation without proper feedback, 3 points for slow data table performance with large datasets, and 5 points for confusing navigation or unclear action buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "medium"
}