{
  "index": 281,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure the code you generate is executable. I need a website with a MySQL database to store novels, novel categories, and user information. The front-end code should provide functionality for uploading and downloading novels, user login and registration, novel detail pages and reading interface, novel categorization, reading progress tracking, a personal profile page, and a \"currently reading\" feature. I want a personal novel website exclusively for myself and people I authorize to access.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the complete user authentication system implemented?",
      "description": "Review whether the code includes comprehensive authentication implementation, covering registration, login, password reset, and authorization management. The system should use secure password hashing (bcrypt/Argon2), implement JWT or session-based authentication, and include role-based access control (admin vs regular users). Score 0 if basic authentication is missing, 5 if only basic functions exist without security measures, and 10 if the implementation includes all security best practices with invitation-only registration as specified.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the novel database structure properly designed with all required relationships?",
      "description": "Evaluate the MySQL database schema design, checking for proper normalization, relationships between novels, categories, users, and reading progress. The schema should include appropriate indexes, foreign key constraints, and efficient query structures. Deduct 3 points if novels-to-categories uses a basic relationship rather than a many-to-many junction table; deduct 5 points if reading progress tracking lacks timestamp information or book position markers; deduct 3 points if user permission levels aren't granularly defined. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the novel upload and download functionalities complete?",
      "description": "Check whether the code implements secure file handling for uploads (validate file types, scan for malware, handle large files with chunking), supports multiple formats (EPUB, PDF, TXT), and provides efficient download options. The implementation should include metadata extraction, proper storage path management, and content validation. Deduct 5 points if upload size limitations aren't handled; deduct 3 points if download progress indicators are missing; deduct 5 points if no content validation exists. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the novel reading interface well-designed and feature-complete?",
      "description": "Assess whether the reading interface includes essential features: text size adjustment, theme switching (light/dark mode), bookmarking, highlighting, auto-scroll options, and progress tracking. The UI should be responsive across device sizes and remember user preferences. Deduct 3 points for each missing core feature; deduct 5 points if the interface doesn't adapt to mobile screens; deduct 3 points if reading position isn't automatically saved. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as database connection failures, invalid uploads, concurrent user edits, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should implement proper error handling, input validation, and graceful degradation. Give 10 points for comprehensive error handling with user-friendly messages, 5 points if basic error handling exists but edge cases are missed, and 0 points if exceptions aren't handled.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-powered reading time estimations 2. Automatic chapter detection and navigation 3. Reading statistics dashboard 4. Social sharing options with access control). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple progress tracking methods coexisting) 2. Function modules unrelated to novel management (e.g., a built-in game) 3. Fancy effects that affect performance (e.g., unnecessary animations that slow page loading). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data access/business logic/view layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast sliding, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "hard"
}