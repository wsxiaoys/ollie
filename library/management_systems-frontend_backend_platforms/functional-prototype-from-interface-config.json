{
  "index": 1311,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure the generated code is executable for display. Help me generate a functional prototype according to the interface configuration content.\n\nFirst, select a menu for page configuration. Step one is to choose a layout template to determine the page layout and which specific components to include (components include: left tree, query area, tab area, button area, list area). Step two is to configure the basic information of the menu, such as whether to enable workflow. Step three is to configure the UI of each component - when there is a left tree, configure the left tree first; when there is a tab area, configure the tabs first. Tables and buttons under different tabs may vary. Step four is to implement rule connections - each component supports connecting rules.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the menu page configuration system fully implemented?",
      "description": "Review whether the code accurately implements the four-step configuration process: layout template selection, basic menu information setup, component UI configuration, and rule connections. Check if all specified components (left tree, query area, tab area, button area, list area) are properly rendered and configurable. Score 0 if core configuration logic is missing, 5 if only basic template selection is implemented, and 10 if all configuration steps are fully functional with proper state management.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the dynamic component rendering and layout system implemented?",
      "description": "Evaluate whether the layout template system can dynamically render different component combinations based on user selection. Check if the component positioning, sizing, and responsive behavior work correctly across different templates. Verify that component visibility and arrangement update in real-time during configuration. Deduct 5 points if layout breaks with certain component combinations, and 3 points if responsive behavior is inconsistent. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the component configuration management properly designed?",
      "description": "Check whether each component (left tree, query area, tab area, button area, list area) has a comprehensive configuration interface with proper validation. Evaluate if the hierarchical configuration logic (left tree first, then tabs, then tables/buttons under tabs) is correctly implemented with dependency management. Deduct 5 points if configuration data structure is poorly designed, and 3 points if component dependencies are not properly handled. Full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the rule connection system architected and workflow integration provided?",
      "description": "Assess whether the rule connection mechanism allows meaningful relationships between components with proper validation and conflict resolution. Check if workflow enablement affects the available rule types and component behaviors. Evaluate if rule connections persist correctly and can be visualized/edited. Deduct 5 points if rule validation is missing, and 3 points if workflow integration is superficial. Give 10 points if fully implemented with visual rule mapping.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid configuration data, component loading failures, rule conflicts, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the configuration experience (e.g., 1. Visual drag-and-drop layout designer 2. Real-time preview with mock data 3. Configuration templates with import/export 4. Undo/redo configuration history). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar configuration functions (e.g., multiple component property panels) 2. Function modules unrelated to page configuration (e.g., built-in data analysis tools) 3. Fancy effects that affect configuration performance (e.g., heavy animations during component rendering). Deduct 3 points for each redundancy found, and directly deduct 10 points if core configuration functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating configuration logic/component rendering/state management), component reusability, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if configuration data serialization is not properly implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the configuration interface follows modern design principles: 1) Harmonious color matching with clear visual hierarchy 2) Proper layout spacing following grid systems 3) Professional typography with clear form labels and help text 4) Consistent iconography and button styles. Deduct 3 points for each crowded configuration panel, 5 points for confusing visual hierarchy, and 5 points for inconsistent UI components. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the configuration interaction smooth and intuitive?",
      "description": "Judge whether the configuration workflow is intuitive and efficient: 1) Step-by-step guidance with clear progress indication 2) Immediate visual feedback for configuration changes 3) Smooth transitions between configuration steps 4) Context-sensitive help and validation messages. Deduct 5 points for each configuration step without proper feedback, 3 points for confusing navigation between steps, and 5 points for unintuitive component configuration interfaces. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "hard"
}