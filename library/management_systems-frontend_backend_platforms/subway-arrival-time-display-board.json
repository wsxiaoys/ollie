{
  "index": 961,
  "question": "You are a coding expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate is executable for demonstration. Design a program for a subway arrival time display board.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core subway arrival time display functionality implemented?",
      "description": "Review whether the code accurately implements real-time display of train arrival times, including station names, train destinations, and countdown timers. Score 0 if the core display functionality is missing, 5 if only static data is shown, and 10 if dynamic updates with simulated or real data feeds are implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the implementation include multi-line subway information handling?",
      "description": "Evaluate the code's ability to handle and display information for multiple subway lines simultaneously, with proper visual differentiation (color coding, icons, etc.). Deduct 5 points if only a single line is supported, 3 points if multiple lines are supported but poorly differentiated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there a data update and synchronization mechanism?",
      "description": "Check whether the code includes mechanisms for fetching and updating train arrival data (API calls, WebSocket connections, or simulated data generation). Score 0 if no update mechanism exists, 5 if basic periodic updates are implemented, and 10 if there's a robust real-time synchronization system with error handling for connectivity issues.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the implementation include user-focused features?",
      "description": "Assess whether user-friendly features are implemented, such as station selection, line filtering, platform identification, or accessibility options. Deduct 5 points if no user interaction is possible, 3 points if minimal options are available. Give 10 points for comprehensive user features that enhance the practical usability of the display board.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as data feed interruptions, malformed data, missing trains, etc.) and provide fallback displays or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Transit alerts/notifications 2. Multilingual support 3. Interactive map integration). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to display the same information) 2. Function modules unrelated to subway displays (e.g., a built-in weather forecaster) 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data fetching/processing/display layers), code reusability, and maintenance considerations. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no consideration for deployment or configuration options. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional transit display standards?",
      "description": "Evaluate whether the design follows transit information display best practices: 1) High contrast for readability at distance 2) Clear visual hierarchy prioritizing essential information 3) Appropriate use of color coding for line identification. Deduct 3 points for each readability issue, 5 points for confusing information architecture, and 5 points for poor contrast that would affect visibility in public spaces. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the display responsive to different viewing contexts?",
      "description": "Judge whether the display adapts appropriately to different viewing scenarios: 1) Different screen sizes and orientations 2) Visibility considerations for public displays (large text, high contrast) 3) Performance optimization for continuous operation. Deduct 5 points for fixed-size designs that don't scale, 3 points for display elements that would be illegible at typical viewing distances, and 5 points for implementations that would degrade with continuous operation. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Frontend/Backend Platforms",
  "difficulty": "easy"
}