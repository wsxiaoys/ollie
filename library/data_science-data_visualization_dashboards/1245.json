{
  "index": 1245,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable for demonstration purposes. Next, write a data analysis page in a WeChat Mini Program that visually displays the obtained data.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the basic WeChat Mini Program structure implemented correctly?",
      "description": "Verify if the code contains the essential WXML, WXSS, JS files with proper structure, page registration in app.json, and follows Mini Program development specifications. Check if it includes proper page lifecycle hooks (onLoad, onShow, etc.) and follows the correct directory structure. Score 0 if the core Mini Program structure is missing, 5 if basic structure exists with minor issues, and 10 if fully compliant with WeChat specification.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the data acquisition and processing logic complete?",
      "description": "Examine whether the code includes proper data fetching mechanisms (wx.request or equivalent), data transformation functions, error handling for API calls, and caching strategies. Check for loading states and retry mechanisms. Deduct 5 points if API error handling is absent, 3 points if there's no loading state management, and 3 points if data transformation logic is incomplete. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are appropriate visualization components implemented?",
      "description": "Assess if the code uses appropriate visualization libraries (like ec-canvas for ECharts, wx-chart, or Canvas API) with proper chart types matching the data characteristics. Check if the visualizations include proper labels, legends, tooltips, and responsive sizing. Deduct 5 points if chart types don't match the data nature, 3 points for missing interactive elements, and 5 points for poor responsiveness. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the solution include user interaction for data analysis?",
      "description": "Evaluate whether the code implements filtering options, time range selection, category toggles, data drill-down capabilities, and other interactive analysis features. Check if the interactions update the visualizations in real-time. Score 0 if no data interaction exists, 5 if only basic filters are present, and 10 if comprehensive analysis interactions are implemented.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as empty data sets, network errors, unexpected data formats, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-driven data insights 2. Custom gesture controls for analysis 3. Social sharing of analysis results). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple chart libraries for the same purpose) 2. Function modules unrelated to data analysis (e.g., a built-in game) 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data/view/controller layers), component reusability, and Mini Program optimization practices. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if performance optimization measures are absent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows WeChat Mini Program design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic chart layouts. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Chart transitions occur within 300ms 2) Touch feedback delay ≤ 100ms 3) Clear visual focus guidance when switching between analysis views. Deduct 5 points for each operation without feedback, 3 points for laggy chart rendering, and 5 points for awkward gesture recognition. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Data Visualization Dashboards",
  "difficulty": "easy"
}