{
  "index": 1362,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the generated code is executable for display purposes. Present clustered column chart code that shows provinces and job levels.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the clustered column chart properly implemented with clear province and job level data?",
      "description": "Review whether the code accurately implements a clustered column chart that distinctly represents provinces along one axis and job levels as grouped columns. Check if the data structure logically organizes provinces and their corresponding job level values. Score 0 if the chart is not implemented, 5 if basic implementation lacks proper clustering, and 10 if provinces and job levels are clearly visualized with appropriate clustering.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the chart include necessary components (axes, legends, labels, title)?",
      "description": "Evaluate if the chart includes properly labeled axes (x-axis for provinces, y-axis for values), a clear legend identifying different job levels, appropriate data labels, and a descriptive title. Deduct 2 points for each missing component, 1 point for poorly implemented components. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the data visualization coded with appropriate technologies?",
      "description": "Check whether the implementation uses suitable front-end visualization libraries (like D3.js, Chart.js, Highcharts) or native HTML5 canvas/SVG. Assess if the chosen technology is appropriate for clustered column charts. Deduct 5 points if using outdated or inappropriate technology, 3 points if modern libraries are used but not optimally. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the chart responsive and adaptable to different screen sizes?",
      "description": "Test whether the chart adjusts appropriately to different viewport sizes, maintains readability on mobile devices, and implements responsive design principles. Check if the clustering remains clear on smaller screens. Deduct 5 points if the chart is fixed size only, 3 points if responsive but with layout issues on certain devices. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as missing data, unexpected data types, browser compatibility issues, etc.) and provides appropriate fallbacks or error handling. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Interactive tooltips with detailed information 2. Animation when loading/filtering data 3. Ability to toggle or highlight specific job levels 4. Export functionality). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visualization functions 2. Function modules unrelated to the clustered column chart 3. Fancy effects that affect performance (e.g., excessive animations or 3D effects that don't add value). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data processing/visualization/interaction logic), code organization, and maintainability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the code lacks comments or documentation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the chart follows data visualization best practices: 1) Appropriate color scheme that differentiates job levels clearly 2) Proper spacing between columns and groups 3) Balanced visual hierarchy with emphasis on the data. Deduct 3 points for poor color choices that hinder data interpretation, 5 points for cluttered layout with overlapping elements, and 5 points for inappropriate chart dimensions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the chart provides effective interactive elements: 1) Responsive hover effects (â‰¤ 100ms delay) 2) Smooth transitions when filtering or updating data (300-500ms duration) 3) Intuitive interaction patterns. Deduct 5 points for missing interaction feedback, 3 points for laggy transitions, and 5 points for confusing or non-standard interaction patterns. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Data Visualization Dashboards",
  "difficulty": "easy"
}