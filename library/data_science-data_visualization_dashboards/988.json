{
  "index": 988,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Pay attention to ensuring that the generated code is executable for demonstration. Please analyze the data in the attachment and provide a visual presentation, outputting in HTML code format.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the data loading and parsing mechanism properly implemented?",
      "description": "Review whether the code includes proper data loading methods (AJAX, fetch API, or FileReader) and correct parsing logic for different data formats (JSON, CSV, XML). Score 0 if no data loading/parsing is implemented, 5 if basic loading works but lacks error handling, and 10 if comprehensive loading with format detection and error handling is included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is data preprocessing and transformation logic complete?",
      "description": "Evaluate whether the code includes necessary data preprocessing steps such as cleaning (handling missing values, outliers), normalization, aggregation, and transformation to prepare raw data for visualization. Deduct 3 points if missing value handling is absent, 3 points if no data normalization when needed, and 4 points if data aggregation is missing for complex datasets. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the visualization type appropriate for the data characteristics?",
      "description": "Check whether the chosen visualization type (bar charts, line charts, scatter plots, etc.) matches the data properties and analysis goals. Score 0 if the visualization type completely mismatches the data (e.g., pie chart for time series), 5 if the visualization type is adequate but not optimal, and 10 if the visualization perfectly represents the data relationships and patterns.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are interactive elements implemented effectively?",
      "description": "Assess whether the visualization includes appropriate interactive features (tooltips, filtering, zooming, drill-down capabilities) that enhance data exploration. Deduct 3 points for missing basic tooltips, 3 points for lack of filtering options when needed, and 4 points if no zoom/pan functionality is provided for complex visualizations. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as malformed data, browser compatibility issues, resizing windows, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Animated transitions between data views 2. Novel interaction methods 3. Integrated analytical insights alongside visualization). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to filter the same data) 2. Function modules unrelated to the visualization task 3. Fancy effects that affect performance (e.g., excessive animations or 3D effects when unnecessary). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data handling/visualization rendering/interaction logic), code reusability, and performance optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if rendering performance is poor (visible lag on standard hardware). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern visualization principles: 1) Harmonious color matching with appropriate contrast for data encoding 2) Proper layout with clear visual hierarchy 3) Professional typography with readable labels and legends. Deduct 3 points for each crowded visual element, 5 points for a color scheme that hinders data interpretation, and 5 points for poor labeling that makes the visualization hard to understand. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay â‰¤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual feedback for interactive elements. Deduct 5 points for each operation without feedback, 3 points for janky animations during transitions, and 5 points for confusing interaction patterns. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Data Visualization Dashboards",
  "difficulty": "easy"
}