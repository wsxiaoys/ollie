{
  "index": 720,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to provide executable code whenever possible. I have a table - could you help me create a pie chart based on the data in the table and generate an HTML file?",
  "checklist": [
    {
      "id": 0,
      "title": "Is the data extraction and processing logic properly implemented?",
      "description": "Evaluate if the code correctly extracts data from the table input and processes it for chart visualization. Check if the code handles various table formats (HTML tables, CSV strings, JSON data) and applies appropriate data transformations. Deduct 5 points if the code only handles one specific format, deduct 10 points if data extraction fails for complex tables.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the pie chart visualization correctly implemented with proper layout?",
      "description": "Verify that the pie chart is correctly rendered with properly calculated sectors based on data values. Check that the chart uses appropriate angles, radii, and center points. Deduct 5 points if the chart has incorrect proportions, 3 points for minor rendering issues, and 10 points if the chart fails to represent data accurately.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the chart enhanced with proper labeling and legend?",
      "description": "Check if the pie chart includes clear labels for each sector, a comprehensive legend, and meaningful title. Labels should show category names and values/percentages. Deduct 3 points for missing labels, 3 points for missing legend, and 4 points for poor placement that obstructs readability.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are appropriate visualization libraries utilized effectively?",
      "description": "Evaluate if the implementation makes appropriate use of chart libraries (like Chart.js, D3.js, or Google Charts) or implements custom SVG/Canvas rendering when needed. Check correct configuration of library-specific options. Deduct 5 points for inappropriate library choice, 3 points for inefficient implementation, and 10 points for library misuse.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as empty data, single-value datasets, very large or small values, text values mixed with numbers, etc.) and provide friendly error prompts or graceful fallbacks. Deduct 3 points for each unhandled edge case, and 10 points if the chart breaks completely on atypical inputs.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Interactive tooltips showing more details 2. Animation on hover/load 3. Ability to toggle between pie and donut chart 4. Export to image functionality). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visualization methods 2. Function modules unrelated to chart visualization 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core visualization functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data processing/visualization/interaction layers), code reusability, and maintainability. Deduct 5 points if global state pollution is found; deduct 3 points if the code is not organized into logical functions; deduct 2 points if there's no error handling. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the chart design follows visualization best practices: 1) Harmonious color scheme with good contrast 2) Proper proportions and layout 3) Professional typography (legible fonts, proper sizing). Deduct 3 points for poor color choices that hinder data perception, 4 points for cluttered design, and 3 points for illegible labels or text. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and responsive?",
      "description": "Judge whether the chart provides appropriate interactive elements: 1) Responsive design that works across device sizes 2) Smooth transitions when data changes 3) Clear interactive elements (e.g., hover effects, clickable segments). Deduct 3 points for lack of responsiveness, 3 points for missing hover states, and 4 points for jerky transitions or poor performance with larger datasets. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Data Visualization Dashboards",
  "difficulty": "easy"
}