{
  "index": 1586,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate is executable for demonstration purposes. Help me design a data dashboard using HTML code that would be used in the training industry.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the dashboard structure properly implemented?",
      "description": "Check if the HTML structure includes key dashboard components: header section, navigation menu, main content area with data widgets, and footer. Evaluate whether semantic HTML5 elements (header, nav, main, section, footer) are used appropriately. Score 0 if missing essential dashboard structure, 5 if basic structure exists but semantic elements are misused, and 10 if structure is complete with proper semantic markup.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are training-specific data visualizations included?",
      "description": "Verify the implementation of at least 3 training-industry specific visualizations: learner progress charts, course completion rates, assessment performance metrics, attendance tracking, or certification status. Each visualization should have relevant data structures and rendering logic. Deduct 3 points for each missing visualization. Award full points if all visualizations are training-relevant and properly implemented.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the dashboard interactive with filtering and drill-down capabilities?",
      "description": "Evaluate whether the dashboard includes interactive elements: date range filters, course/trainer/learner selectors, and detail drill-down functionality. Check if the JavaScript implements proper event handlers and data manipulation. Deduct 5 points if filtering is missing, 5 points if drill-down functionality isn't implemented, and 5 points if interactivity doesn't update visualizations dynamically.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the dashboard support data export and reporting functions?",
      "description": "Check for implementation of data export capabilities (CSV/PDF), scheduled report generation, and customizable report templates specific to training metrics. Deduct 3 points if basic export is missing, 3 points if data formatting for reports is inadequate, and 4 points if no training-specific report templates are available.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as missing data, API failures, user input errors, etc.) and provide friendly error prompts or fallback displays. Code with strong robustness should include data validation, error handling for empty datasets, and graceful degradation. Give 10 points for comprehensive error handling, 5 points for basic error checks, and 0 points if no error handling exists.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-powered insights on training effectiveness 2. Gamified elements for trainer/learner engagement 3. Customizable dashboard layouts 4. Real-time notification system for training milestones). Add 2.5 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visualization components 2. Function modules unrelated to training metrics (e.g., unnecessary social media feeds) 3. Fancy effects that affect dashboard performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core dashboard functionality is interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data fetching/processing/visualization layers), code reusability, and maintainability. Deduct 5 points if global variable pollution is found; deduct 3 points if visualization components aren't reusable; deduct 2 points if CSS isn't organized using classes/modules/variables. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the dashboard design follows modern design principles: 1) Consistent color scheme aligned with training industry standards 2) Clear visual hierarchy with important metrics highlighted 3) Responsive layout that works on different screen sizes 4) Proper data-to-ink ratio (minimum decorative elements). Deduct 3 points for cluttered layout, 3 points for poor color contrast affecting readability, 2 points for non-responsive design, and 2 points for excessive decoration. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dashboard optimized for usability and accessibility?",
      "description": "Judge whether the dashboard is designed for easy use: 1) WCAG compliance with proper aria-labels and keyboard navigation 2) Intuitive information architecture 3) Loading states for data retrieval operations 4) Tool-tips and context help for complex metrics. Deduct 3 points for missing accessibility features, 3 points for confusing information organization, 2 points for missing loading indicators, and 2 points for lack of instructional elements. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Data Visualization Dashboards",
  "difficulty": "medium"
}