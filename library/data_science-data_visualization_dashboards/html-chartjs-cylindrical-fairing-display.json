{
  "index": 1752,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable for display. Use HTML and Chart.js to create a cylindrical fairing with a base diameter of 2 centimeters and a height of 8 centimeters.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the cylindrical fairing accurately visualized with correct dimensions?",
      "description": "Examine whether the code correctly implements a cylindrical fairing with the specified dimensions (2cm diameter base, 8cm height). Check if the visualization maintains proper proportions and perspective. Score 10 points if dimensions are precisely implemented with proper scaling, 5 points if there are minor proportion issues, and 0 points if the dimensions are significantly inaccurate.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the implementation use Chart.js appropriately for 3D visualization?",
      "description": "Evaluate how effectively Chart.js is utilized to create the 3D cylindrical effect. Since Chart.js is primarily a 2D charting library, check if creative approaches (like overlapping charts, gradients, or shadow effects) are used to simulate 3D. Award 10 points for innovative use of Chart.js capabilities to create convincing 3D effects, 5 points for basic implementation, and 0 points if Chart.js is improperly implemented.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the fairing visualization interactive and rotatable?",
      "description": "Check if the implementation includes user interaction capabilities such as rotation, zooming, or viewing the cylinder from different angles. Give 10 points if fully interactive with smooth transitions, 5 points if basic rotation is implemented but with limitations, and 0 points if no interactivity is provided.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the implementation include proper shading and lighting effects?",
      "description": "Assess whether the cylindrical fairing includes appropriate shading and lighting effects to enhance the 3D appearance. Review gradient usage, shadow implementation, and highlight effects. Award 10 points if professional lighting effects are implemented, 5 points for basic shading, and 0 points if the cylinder appears flat with no depth cues.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser resizing, different screen ratios, or mobile devices). Test browser compatibility and responsiveness. Score 10 points if the visualization remains stable across different scenarios, 5 points if it works in standard conditions but has edge case issues, and 0 points if major rendering problems occur.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Customizable color/texture options 2. Cross-section view capability 3. Dimension annotation display). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visualization methods 2. Function modules unrelated to the cylindrical fairing 3. Fancy effects that affect performance. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating rendering logic from UI controls), code organization, and performance optimization techniques. Deduct 5 points if global variable pollution is found or if proper encapsulation isn't used; deduct 5 points if the code is poorly organized with high duplication; deduct 5 points if rendering performance is suboptimal. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Clean, minimalist UI with harmonious colors 2) Proper layout and spacing of controls and information 3) Professional typography and labeling. Deduct 3 points for each cluttered visual element, 5 points for poor color choices, and 5 points for disorganized layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Immediate visual feedback on user interactions 2) Smooth animation transitions between states 3) Intuitive controls with clear visual cues. Deduct 5 points for each operation without feedback, 3 points for jerky animations, and 5 points for confusing or hidden controls. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Data Visualization Dashboards",
  "difficulty": "hard"
}