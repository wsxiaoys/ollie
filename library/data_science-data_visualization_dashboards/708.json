{
  "index": 708,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Take care to ensure that the code you generate is executable for demonstration purposes. Complement your charts with visualizations and data presentations, outputting in HTML format to ensure executability.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the visual data presentation component properly implemented?",
      "description": "Check whether the code effectively implements data visualization using appropriate JavaScript libraries (D3.js, Chart.js, Highcharts, etc.) and HTML5 elements (Canvas, SVG). Score 0 if no visualization is implemented, 5 if basic charts are present but lack interactivity, and 10 if responsive, interactive visualizations with proper data binding are fully implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the data processing and transformation logic robust?",
      "description": "Evaluate whether the code includes proper data sanitization, transformation pipelines, and error handling for different data formats. Check for presence of data validation, normalization techniques, and effective handling of edge cases (null values, outliers, etc.). Deduct 5 points if data validation is missing, and 3 points if the code doesn't handle incomplete data. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the visualization components responsive and cross-browser compatible?",
      "description": "Review whether the code implements responsive design principles (viewport meta tags, CSS media queries, fluid containers) and maintains compatibility across major browsers. Test for proper rendering in different screen sizes and device types. Deduct 5 points for non-responsive visualizations and 5 points for browser-specific implementations without fallbacks. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the visualization accessibility implemented according to standards?",
      "description": "Check if the code follows WCAG guidelines including proper color contrast ratios (minimum 4.5:1), alternative text for visual elements, keyboard navigation support, and ARIA attributes where necessary. Deduct 3 points for each missing major accessibility feature, and 2 points for each minor issue. Give 10 points if fully accessible.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as malformed data inputs, network failures, browser compatibility issues, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Interactive data exploration capabilities 2. Animated transitions between data states 3. Integration with external data sources or APIs). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visualization functions 2. Unnecessary script imports or dependencies 3. Fancy effects that affect performance (e.g., excessive animations or transitions). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core visualization functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data processing/visualization/interaction layers), code reusability, and build process optimization. Deduct 5 points if global namespace pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if performance optimization techniques are not implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern visualization design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional typography system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast data transitions, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Data Visualization Dashboards",
  "difficulty": "medium"
}