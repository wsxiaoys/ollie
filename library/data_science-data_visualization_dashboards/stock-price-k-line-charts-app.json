{
  "index": 1679,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate is executable for demonstration. Create an application software for analyzing and displaying historical stock price amplitude data with K-line charts.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the stock data retrieval and processing system fully implemented?",
      "description": "Review whether the code effectively retrieves historical stock price data from a reliable source (like Yahoo Finance, Alpha Vantage API), processes it correctly (handles missing data points, adjusts for splits/dividends), and converts it to proper OHLC (Open, High, Low, Close) format for K-line visualization. Score 0 if data retrieval is not implemented, 5 if basic data fetching exists but lacks error handling or preprocessing, and 10 if a complete data pipeline with caching and refresh mechanisms is implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the K-line chart rendering accurate and complete?",
      "description": "Evaluate whether the K-line chart correctly implements standard candlestick visualization with proper color coding (e.g., green for bullish, red for bearish candles), accurate price scaling, and correct time-axis representation. Check if volume bars are included below the main chart. Deduct 5 points if candle bodies or shadows are incorrectly rendered, 3 points if time scale is inconsistent, and 3 points if volume representation is missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are technical analysis indicators and overlays implemented?",
      "description": "Check whether the application includes common technical indicators (e.g., Moving Averages, RSI, MACD, Bollinger Bands) with correct mathematical implementation and visual representation. Score 3 points for each properly implemented indicator category (moving averages, oscillators, volatility indicators, volume indicators) up to a maximum of 10 points. Implementation should include accurate calculations and appropriate visual distinction from price data.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the application provide interactive analysis features?",
      "description": "Assess whether the application allows users to interact with the chart through zooming, panning, selecting time ranges, comparing multiple stocks, or drawing trend lines/Fibonacci retracements. Score 2 points for each well-implemented interactive feature. Check if values are displayed on hover/selection and if selection events provide detailed information about specific candles. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as API failures, malformed data, network interruption, extreme market conditions like circuit breakers) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should gracefully degrade functionality rather than crash. Give 10 points if robust error handling exists throughout the application, 5 points if only basic error handling is implemented, and 0 points if exceptions are unhandled.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the analysis experience (e.g., 1. Pattern recognition algorithms to identify chart patterns 2. AI-based price prediction overlays 3. Social sentiment analysis integration 4. Automated technical signal alerts). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Multiple implementations of similar visualization methods 2. Excessive indicators that clutter the chart or duplicate information 3. Heavy animations or visual effects that impair chart clarity or performance. Deduct 3 points for each redundancy found, and directly deduct 10 points if core functionality is compromised by unnecessary features.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (separation of data retrieval, processing, and visualization layers), use of appropriate design patterns for financial data handling, and implementation of state management. Deduct 5 points if global state pollution exists or if the application has poor component architecture; deduct 5 points if there's significant code duplication across similar indicators; deduct 5 points if there's no test coverage for critical calculations. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional trading platform standards?",
      "description": "Evaluate whether the design follows financial application conventions: 1) Appropriate color scheme that reduces eye strain for extended viewing (dark mode option) 2) Clear visual hierarchy with proper contrast between chart elements 3) Professional typography with legible data labels even at small sizes 4) Efficient use of screen real estate. Deduct 3 points for each usability issue like overlapping labels, 5 points for poor color choices that make data interpretation difficult, and 5 points for inefficient layout that requires excessive scrolling. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the chart performance optimized for large datasets?",
      "description": "Judge whether the application can handle large historical datasets (5+ years of daily data) without significant performance degradation. Check for: 1) Data downsampling techniques when zoomed out 2) Efficient canvas/SVG rendering with element reuse 3) Asynchronous loading of extended historical data 4) Smooth transitions when changing timeframes. Deduct 5 points if charts noticeably lag when panning/zooming, 5 points if rendering more than 1000 candles causes visible performance issues, and 5 points if the application freezes during data loading. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Data Visualization Dashboards",
  "difficulty": "medium"
}