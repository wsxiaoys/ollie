{
  "index": 1722,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you provide is executable and ready for demonstration. I need to create a map of Wenzhou city using Echarts in Vue 2, with bar charts on each district to display specific data for that district.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the Wenzhou city map correctly implemented using ECharts?",
      "description": "Review whether the code accurately implements the Wenzhou city map with correct geographical boundaries and district divisions. Check if GeoJSON data for Wenzhou is properly loaded and rendered. Score 0 if the map is not implemented, 5 if only basic map is shown without district divisions, and 10 if all districts are properly rendered with accurate boundaries.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the district bar charts properly implemented and integrated with the map?",
      "description": "Evaluate if bar charts are correctly positioned on each district of the map and display district-specific data. Check if the charts maintain proper positioning during map interactions (zoom/pan). Deduct 5 points if charts don't align with districts, 3 points if charts overlap causing readability issues, and 2 points if charts don't scale appropriately with the map. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the data binding between Vue 2 and ECharts implemented correctly?",
      "description": "Check whether reactive data binding is properly implemented between Vue 2 component state and ECharts instance. Verify that changes in component data are reflected in the charts, and the ECharts instance is properly disposed when the component is destroyed. Deduct 5 points for incorrect or missing Vue-ECharts integration, 3 points for memory leaks, and 5 points if reactivity is broken. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is there proper map interaction and responsiveness?",
      "description": "Assess whether the map includes essential interactive features like zooming, panning, and tooltips for districts and bar charts. Check if the visualization is responsive and adapts to different screen sizes. Deduct 3 points for missing zoom/pan functionality, 4 points for non-responsive design, and 5 points if tooltips are missing or incomplete. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as missing data, slow loading GeoJSON files, browser compatibility issues, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dynamic data updates with animations 2. Custom themes specific to Wenzhou 3. Additional data layers like population density heatmap). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visualization functions 2. Function modules unrelated to the Wenzhou map visualization 3. Fancy effects that affect performance (e.g., excessive animations or 3D effects that slow down rendering). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data fetching/processing/visualization layers), reusability of components, and proper configuration management. Deduct 5 points if global state pollution is found or Vue best practices are not followed; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if ECharts options are hardcoded rather than dynamically generated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern visualization principles: 1) Harmonious color matching for districts and bar charts (appropriate contrast between map and data) 2) Proper layout with clear legends and scales 3) Professional typography for labels and tooltips (readable font sizes, proper contrast). Deduct 3 points for each crowded visual element, 5 points for poor color choices that hinder data interpretation, and 5 points for cluttered or illegible labels. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Chart hover/click response delay â‰¤ 100ms 2) Smooth transitions between data updates 3) Clear visual feedback for selected districts. Deduct 5 points for each operation without feedback, 3 points for laggy animations during interactions, and 5 points for confusing or inconsistent interaction patterns. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Data Science-Data Visualization Dashboards",
  "difficulty": "medium"
}