{
  "index": 1176,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Coding Expert Character Generator\n\nYou are a code expert. Please use your professional knowledge to generate accurate and professional responses. Try to ensure the generated code is executable for demonstration. We need a dynastic family simulation game set in ancient times with a fictional background. Avoid fantasy superpowers, blood, horror, or overly dark themes. Don't include urgent choices, but focus on character development. I am the new family head (16 years old, unmarried), with a mother and underage sibling(s). The game includes ancient professions like officials, scholars, warriors, doctors, merchants, farmers, etc., with distinctions between nobility and commoners. The game primarily focuses on marriage and family drama.\n\nReply settings: Each round should update the time and character information in the main interface in real-time. All information should be wrapped in pseudo-code blocks. Use asterisks for prompts, quotation marks for dialogues, and emoticons for expressions. Display character relationships in a tree diagram. Code blocks should fit mobile display dimensions. Reply \"next month\" to advance to the next month, reply \"restart\" to regenerate character information.\nStarting as an aristocratic family.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the dynastic family simulation game structure fully implemented?",
      "description": "Review whether the code accurately implements the core game structure with character generation, family relationships, and time progression mechanics. Check if it includes character attributes (age, marital status, profession), family hierarchy, and month-by-month progression as specified.Score 0 if core game structure is missing, 5 if basic character and time progression exists but lacks depth, 10 if it fully implements an interactive family simulation with rich character attributes and meaningful time progression.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the aristocratic family system properly designed?",
      "description": "Evaluate whether the code implements a comprehensive aristocratic family system with appropriate hierarchies, titles, and social dynamics from ancient times. Check if it includes the 16-year-old unmarried family head, mother, and underage siblings as specified, with proper relationships between them.Deduct 5 points if family hierarchy is poorly implemented, 3 points if social status mechanics are missing, and 5 points if character relationships lack depth. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are the ancient professions and social class distinctions implemented?",
      "description": "Check if the code includes diverse ancient professions (officials, scholars, warriors, doctors, merchants, farmers) with appropriate mechanics and distinctions between nobility and commoners. Verify that these professions influence gameplay and character interactions.Deduct 3 points for each major profession category missing, 5 points if nobility/commoner distinctions are absent, and 3 points if professions don't meaningfully impact gameplay. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the marriage and family drama system robust?",
      "description": "Assess if the code implements compelling marriage mechanics and family drama scenarios that drive gameplay. Check if it includes courtship, marriage options, relationship dynamics, and realistic family conflicts appropriate for the ancient setting.Score 0 if marriage systems are absent, 5 if basic marriage options exist but lack depth, and 10 if a comprehensive system with meaningful choices and consequences is implemented. Deduct 5 points if family drama elements are missing.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid inputs, edge cases in character relationships, unexpected game states) and provide friendly error prompts or recovery mechanisms.Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dynamic personality development system 2. Historical events integration 3. Family reputation mechanics 4. Detailed relationship visualization).Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple character status systems overlapping) 2. Function modules unrelated to dynastic simulation (e.g., unrelated mini-games) 3. Overly complex features that distract from the core experience.Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating character logic/view/event systems), consistency in code structure, and maintainability for future extensions.Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the code lacks organized structure. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows the specified format requirements: 1) Proper use of pseudo-code blocks 2) Consistent use of asterisks for prompts, quotation marks for dialogues, and emoticons for expressions 3) Clear family relationship tree diagram 4) Mobile-friendly display dimensions.Deduct 3 points for each formatting requirement not met, 5 points for poor character relationship visualization, and 5 points for layouts that would break on mobile displays. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the interaction logic seamless and user-friendly?",
      "description": "Judge whether the game provides clear interaction mechanisms: 1) Proper implementation of \"next month\" and \"restart\" commands 2) Real-time updating of time and character information 3) Clear presentation of choices and consequences 4) Logical progression of the family narrative.Deduct 5 points if command responses are not implemented correctly, 3 points for unclear information updates, and 5 points if the narrative progression lacks coherence or user agency. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Simulation/Management",
  "difficulty": "medium"
}