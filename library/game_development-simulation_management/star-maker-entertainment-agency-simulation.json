{
  "index": 385,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Star-Maker: The Entertainment Agency Simulation\n\nYou are a code expert, please use your professional knowledge to generate accurate and professional responses. Try to ensure the generated code is executable for demonstration. This is a game about cultivating stars, set in a fictional modern background that is peaceful and comfortable. No fantasy, gore, horror, poisoning, birthmarks, metaphors, revenge plots, previous dynasties, or urgent choices. Focus on development/growth aspects.\n\nI am a talent manager at a small entertainment company who also mentors the rookie Pei Yu (male, 24 years old, single, attracted to men, submissive). In the game, you can develop yourself or recruit artists, book gigs for them, and gradually develop them into singers, actors, idols, etc. in this management-style game. The game features other modern professions with a storyline background that doesn't exceed current technological capabilities. The game primarily focuses on management and character development plotlines.\n\nRelationship developments should progress naturally, with realistic scenarios and dialogue matching character personalities. In intimate scenes, use more casual, explicit language. You can use parentheses to show physical actions or thoughts, creating embarrassing, intense emotional experiences with detailed physiological reactions. Avoid using poison plots, scheming, memory fragments, or active seduction.\n\nCharacter information should include personality, preferences, and descriptions of facial features and physical characteristics. Reply settings: Each round should include real-time updates of time, company status, and character information on the main interface. All information should be wrapped in pseudo-code blocks. Use asterisks for prompts, quotation marks for dialogue, and add emojis for expression. Use tree diagrams to show character relationship networks. Code blocks should fit mobile display dimensions.\n\nReply \"Continue\" to advance to the next week, reply \"Restart\" to regenerate character information.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the entertainment agency simulation system fully implemented?",
      "description": "Review whether the code accurately implements the core management mechanics through HTML/JavaScript, including talent recruitment, booking gigs, and artist development systems. Check if character progression paths (singers, actors, idols) are clearly defined with distinct attributes and career trajectories.Score 0 if the core management system is not implemented, 5 if only basic talent management exists, and 10 if the complete ecosystem with different career paths, attribute progression, and gig booking mechanics are fully included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the character development and relationship system implemented?",
      "description": "Evaluate the code implementation of character relationships, personality traits, and natural progression of relationships. Check if the system tracks and updates relationship values, displays character information (personality, preferences, physical characteristics), and implements realistic dialogue matching character personalities.Deduct 5 points if character attributes don't influence interactions, 3 points if relationship progression lacks depth or variety. The full score is 10 points if the system has multi-dimensional relationship tracking with context-sensitive interactions.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the time management and company status tracking system implemented?",
      "description": "Check if the code includes a comprehensive time management system (weeks/months progression), company status tracking (finances, reputation, resources), and how these elements affect gameplay. Verify if the interface displays real-time updates of time and company status.Deduct 5 points if time progression doesn't meaningfully impact gameplay, 3 points if company metrics are static or don't influence decision-making. Give 10 points if time and company management create dynamic gameplay with clear consequences and strategic depth.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the user interface/experience appropriate for the game concept?",
      "description": "Assess if the interface follows the requirements: displays character information, company status, and time on the main interface; uses asterisks for prompts, quotation marks for dialogue, and emojis for expressions; implements tree diagrams for character relationship networks; and ensures code blocks fit mobile display dimensions.Deduct 2 points for each missing UI element (relationship trees, status display, etc.), 5 points if mobile optimization is absent. Give 10 points if all required elements are present and the UI enhances the management simulation experience.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common edge cases and user inputs (invalid commands, unexpected interactions, etc.) and provide friendly error prompts or recovery mechanisms. The code should gracefully handle state transitions and prevent game-breaking bugs.Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dynamic market trends affecting artist popularity 2. Special events or scandals that require management decisions 3. Detailed artist development skill trees 4. Fan base management systems).Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar management functions 2. Function modules unrelated to entertainment agency simulation (e.g., unrelated mini-games) 3. Fancy effects that affect performance without enhancing gameplay.Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/data models), code organization, and maintainability. Check if the code follows object-oriented principles appropriate for a simulation game with complex state management.Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the code lacks clear documentation or structure. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching appropriate for an entertainment agency theme 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times) 4) Clear information hierarchy for management interfaces.Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance for management actions 4) Appropriate feedback when booking gigs or developing artists.Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast interaction, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Simulation/Management",
  "difficulty": "hard"
}