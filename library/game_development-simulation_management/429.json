{
  "index": 429,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure the code you generate is executable for demonstration. Generate a game code that can be played on a web page.\nThe game is set in a 3D space universe where players pilot a spacecraft moving between stars.\nEach planet will attract the spacecraft according to actual physical laws. To escape, you need to increase speed. Players can increase or decrease speed to decide whether to enter a planet or not.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the 3D space universe environment properly implemented?",
      "description": "Evaluate the implementation of the 3D space environment using WebGL/Three.js or similar technologies. Check for proper perspective, camera controls, and realistic space rendering (stars, nebulae, etc.). Score 0 if only 2D implementation, 5 if basic 3D space is present but lacks detail, and 10 if the universe is immersive with visual depth and realistic space elements.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the physics of gravitational attraction accurately implemented?",
      "description": "Assess whether the code correctly implements Newton's law of universal gravitation (F = G*m1*m2/rÂ²). Check if forces are properly calculated and applied to the spacecraft, with accurate direction vectors. Verify that closer planets exert stronger pull and that multiple planets' gravitational fields interact correctly. Score 0 if gravity is faked/simplified, 5 if basic attraction exists but has inaccuracies, and 10 if physics implementation closely matches real gravitational behavior.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the spacecraft movement and speed control system well-designed?",
      "description": "Evaluate the spacecraft control mechanism, including acceleration/deceleration, directional control, and inertia effects. Check for smooth controls with proper keystroke/input handling and intuitive speed adjustment. Verify if spacecraft maintains momentum in space and if thrusters visually indicate direction changes. Deduct 5 points if movement feels jerky or unresponsive, and 3 points if speed adjustments lack granularity or feedback.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the game feature a well-designed planetary system with varied celestial bodies?",
      "description": "Assess the variety and design of celestial bodies (planets, stars, moons, etc.). Check if planets have distinct visual characteristics, different masses affecting gravitational pull, and unique properties. Verify if there's a logical arrangement of celestial bodies creating interesting navigation challenges. Score 0 if only simple spheres exist, 5 if planets have basic variety, and 10 if the system includes diverse celestial bodies with unique properties affecting gameplay.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser compatibility issues, performance degradation on lower-end devices, unexpected user inputs, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dynamic celestial events like supernovas or meteor showers 2. Wormholes for fast travel 3. Visual effects for gravitational distortion 4. Procedurally generated universe). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar physics calculations (e.g., multiple gravity systems coexisting) 2. Function modules unrelated to space navigation (e.g., unnecessary mini-games) 3. Fancy effects that severely affect performance (e.g., excessive particle systems). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating physics engine/rendering/input handling), code organization, and performance optimization. Deduct 5 points if global state pollution is found or object-oriented principles are not followed; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if no performance optimizations are implemented for 3D rendering. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern game UI principles: 1) Non-intrusive HUD elements showing speed, position, and gravitational influence 2) Clear visual cues for navigation and planet information 3) Consistent sci-fi aesthetic with appropriate color scheme for space. Deduct 3 points for cluttered UI elements, 5 points for poor readability against space background, and 5 points for inconsistent visual style. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the game's performance and interactions conform to gaming standards: 1) Maintains at least 30 FPS during gameplay 2) Responsive controls with < 100ms input lag 3) Smooth transitions when approaching/leaving gravitational fields with visual/audio feedback. Deduct 5 points for frame rate drops below 30 FPS, 3 points for jerky spacecraft movement, and 5 points for lack of feedback when entering gravitational fields. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Simulation/Management",
  "difficulty": "medium"
}