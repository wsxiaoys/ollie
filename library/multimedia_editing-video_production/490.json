{
  "index": 490,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable for demonstration whenever possible.\n\n======== ROLE ========\nYou are an experienced code expert. You are provided with a software development requirement description and asked to generate project code based on these requirements. Strictly follow the rules to help users generate complete project code with simple and understandable comments. Don't output anything else.\n\n======== OUTPUT RULES ========\n1. Always generate complete, runnable project code. Please ensure the project is fully executable\n2. Ensure all code files you output are complete without omitting any code\n3. Carefully review and check all code before final output, evaluating its executability. If the code cannot be executed or contains errors, it needs to be regenerated\n4. If the requirements involve external API access or need to use user data (images, videos, audio, etc.), please provide simulated data\n\n======== PROJECT REQUIREMENTS ========\nDevelop an online dynamic background video generator where users can choose different dynamic backgrounds (such as dynamic particles, animated smoke), add text and images, adjust animation effects and timing of elements, preview in real-time, and export as video.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the dynamic background generation system fully implemented?",
      "description": "Review whether the code properly implements at least 3 different dynamic background effects (particles, animated smoke, etc.) with appropriate HTML5 Canvas/WebGL rendering. Check if the animation loop is well-optimized and maintains consistent frame rates (minimum 30 FPS) even with complex effects. Score 0 if no dynamic backgrounds are implemented, 5 if only basic effects are available, and 10 if multiple high-quality effects with customization options are provided.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the code implement comprehensive text and image overlay capabilities?",
      "description": "Evaluate if users can add, edit, and position both text and images on the dynamic background. Check for text styling options (font family, size, color, shadows, animation), and image manipulation features (resize, crop, opacity, filters). Verify if the code handles text wrapping, image loading errors, and maintains proper layering. Deduct 5 points if either text or image functionality is missing, 3 points if basic positioning is implemented but advanced styling is absent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the animation control system properly implemented?",
      "description": "Check if the code provides a timeline or keyframe-based system for controlling element animations. Verify if users can adjust timing, duration, easing functions, and transition effects for all elements. The system should support entry/exit animations and persistent effects. Deduct 5 points if only basic animations are available with fixed timing, 3 points if the timeline lacks precision control or preview scrubbing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the real-time preview and video export functionality working correctly?",
      "description": "Evaluate if the code includes real-time preview capabilities that accurately represent the final output. Check if the video export functionality uses proper techniques (such as MediaRecorder API, canvas capture with WebM encoding, or server-side rendering). Verify export settings (resolution, frame rate, file format) and error handling. Deduct 5 points if preview is implemented but export is missing, 5 points if export quality is significantly lower than preview. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as large file uploads, browser compatibility issues, memory constraints with complex animations, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-suggested design templates 2. Audio-reactive backgrounds 3. Community sharing platform for created videos). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple animation systems coexisting) 2. Function modules unrelated to video generation (e.g., a built-in music player without purpose) 3. Fancy effects that affect performance (e.g., excessive background calculations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating rendering/animation/export layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast sliding, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Video Production",
  "difficulty": "hard"
}