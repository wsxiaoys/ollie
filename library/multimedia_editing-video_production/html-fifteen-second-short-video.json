{
  "index": 1191,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Help me create HTML for a fifteen-second short video.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the HTML5 video implementation complete and functional?",
      "description": "Review whether the code properly implements HTML5 video elements with correct attributes (src, controls, autoplay, loop, muted, etc.). Check if the video duration is precisely controlled to 15 seconds through JavaScript timing mechanisms or video editing. Score 0 if basic video element is missing, 5 if only static video tag is present without duration control, and 10 if all video attributes and 15-second constraint are properly implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are interactive controls and playback features properly implemented?",
      "description": "Evaluate whether custom video controls are implemented including play/pause buttons, progress bar, volume control, and fullscreen toggle. Check if JavaScript event listeners handle video state changes (play, pause, ended, timeupdate). Deduct 5 points if custom controls are missing, 3 points if progress tracking is inaccurate. Full score requires seamless control integration with proper event handling.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is responsive design and cross-device compatibility ensured?",
      "description": "Check whether the video player adapts to different screen sizes using CSS media queries and flexible layouts. Verify compatibility across major browsers (Chrome, Firefox, Safari, Edge) and mobile devices. Deduct 5 points if mobile responsiveness is poor, 3 points if aspect ratio is not maintained on different screens. Full score requires perfect adaptation across all devices.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are performance optimization and loading strategies implemented?",
      "description": "Evaluate whether video loading is optimized with proper preload strategies, lazy loading, and compression techniques. Check if fallback mechanisms are provided for unsupported video formats (WebM, MP4, OGG). Deduct 5 points if no preload optimization, 3 points if multiple format support is missing. Full score requires comprehensive loading optimization and format compatibility.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as video loading failures, unsupported formats, network interruption, user operation errors, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Custom video overlays or annotations 2. Interactive hotspots or clickable elements 3. Picture-in-picture mode 4. Video thumbnail preview on hover). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple video control sets) 2. Function modules unrelated to video playback (e.g., unnecessary social sharing widgets) 3. Fancy effects that affect video performance (e.g., heavy CSS animations during playback). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core video functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating video logic/UI/styling layers), semantic HTML structure, and maintainable CSS organization. Deduct 5 points if global state pollution is found or modern HTML5 semantics are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if CSS is not organized or lacks proper naming conventions. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional typography system (control labels ≥ 14px, proper contrast ratios) 4) Video player aesthetics matching modern standards. Deduct 3 points for each crowded visual element, 5 points for glaring color combinations, and 5 points for chaotic video control layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the video interactions conform to user experience standards: 1) Control response delay ≤ 100ms 2) Smooth progress bar scrubbing without stuttering 3) Hover states and transitions between 200-400ms 4) Clear visual feedback for all interactive elements. Deduct 5 points for each control without proper feedback, 3 points for laggy video seeking, and 5 points for hard-to-find or unclear control elements. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Video Production",
  "difficulty": "easy"
}