{
  "index": 471,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Ensure that the code you generate is executable and can be demonstrated. Design an online video frame extractor that allows users to upload videos, select specific time points or ranges, and extract the corresponding video frames as downloadable image files. Provide a functionality to preview the selected frames.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the video upload functionality fully implemented?",
      "description": "Review whether the code correctly implements file upload with proper validation for video formats (mp4, webm, mov, etc.) and handles large files efficiently. Check if progress indicators are included and if error handling for failed uploads is implemented. Score 0 if upload functionality is missing, 5 if basic upload works but lacks validation or progress indication, and 10 if it includes all features with a fallback mechanism.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the video player implementation complete and functional?",
      "description": "Evaluate if the player includes standard controls (play/pause, volume, timeline seeking), supports major video formats, and provides precise frame navigation. The player should display accurate timestamps and support keyboard shortcuts. Deduct 5 points if precise frame-by-frame navigation is missing, and 3 points if the player lacks responsive design. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the frame selection mechanism properly implemented?",
      "description": "Check if both single frame selection and time range selection are supported, with intuitive UI controls like sliders or timecode input fields. Verify if preview thumbnails are generated for selected points/ranges and if multiple selection points can be saved. Deduct 5 points if only one selection method is implemented, 3 points if the selection isn't visually indicated on the timeline. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the frame extraction functionality complete?",
      "description": "Assess if the code correctly extracts frames at selected time points or from ranges, maintains original resolution quality, and allows configuration of output format and quality. Check if batch processing with appropriate memory management is implemented. Deduct 5 points if extraction doesn't maintain original quality, 3 points if processing options are limited, and 5 points if extraction performance is poor. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as corrupt video files, browser compatibility issues, memory limitations, and network interruptions) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Automatic scene detection 2. Batch export with custom naming patterns 3. Image enhancement filters for extracted frames 4. Integration with cloud storage). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple video processing libraries doing the same thing) 2. Function modules unrelated to frame extraction (e.g., a built-in image editor when simple extraction is needed) 3. Fancy effects that affect performance (e.g., unnecessary animations during processing). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating video processing/UI/storage layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast sliding, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Video Production",
  "difficulty": "medium"
}