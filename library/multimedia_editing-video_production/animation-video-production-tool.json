{
  "index": 497,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable and can be demonstrated. ======== Role ========\nYou are an experienced code expert. Given a software development requirement description, you are required to generate project code based on the project requirements. Strictly follow the rules to help users generate complete project code that is thoroughly commented in simple, easy-to-understand language, without outputting anything else.\n\n======== Output Rules ========\n1. Always generate complete, runnable project code, ensuring the project is fully executable\n2. Ensure all code files you output are complete, do not omit any code\n3. Before final output, carefully review and check all code, evaluating its executability. If the code cannot be executed or contains errors, it needs to be regenerated\n4. If the requirements involve external API access or the use of user data (images, videos, audio, etc.), please provide simulated data\n\n======== Project Requirements ========\nPlease create an animation video production tool where users can drag and drop animation elements (such as shapes, text, icons, etc.) onto a timeline, set animation effects (such as movement, scaling, rotation) and timing, and ultimately generate videos with animation effects.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the animation timeline implementation complete?",
      "description": "Review whether the code implements a functional timeline with proper time tracking, frames/keyframes, and playback control (play, pause, stop, seek). Check if the timeline supports multiple layers and tracks for different elements. Score 0 if the timeline is not implemented, 5 if basic timeline functionality exists but lacks advanced features, and 10 if it has complete timeline controls with visual representation and scrubbing capabilities.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the drag-and-drop animation elements fully implemented?",
      "description": "Evaluate the implementation of the drag-and-drop system for animation elements. Check if users can drag shapes, text, icons, and other elements onto the canvas. Verify if the elements maintain their properties and can be selected, moved, and modified after placement. Score 0 if drag-and-drop is not implemented, 5 if basic functionality exists but with limitations, and 10 if the system is robust with multiple element types and intuitive interaction.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are animation effects and property manipulations properly implemented?",
      "description": "Check if the code supports essential animation effects (movement, scaling, rotation, opacity) with proper interpolation between keyframes. Verify if users can set timing functions (ease-in, ease-out, linear, etc.) and if property changes are properly calculated and displayed. Score 0 if animation effects are missing, 5 if basic effects are implemented but lack customization options, and 10 if comprehensive animation controls are available with preview capabilities.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the video export functionality fully implemented?",
      "description": "Review the implementation of the video rendering and export pipeline. Check if the code can properly convert animation sequences into video frames and compile them into standard video formats (MP4, WebM). Verify if export settings (resolution, framerate, quality) can be configured. Score 0 if export functionality is missing, 5 if basic export exists but with format limitations, and 10 if comprehensive export options are available with progress feedback.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid user inputs, resource loading failures, memory constraints with large projects, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Template library for quick animation creation 2. AI-assisted animation suggestions 3. Visual effects library with presets). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple methods to achieve the same animation effect) 2. Function modules unrelated to animation creation (e.g., a built-in file manager) 3. Fancy effects that affect performance (e.g., excessive background animations in the UI). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating animation engine/UI/rendering pipeline), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast scrubbing or preview, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Video Production",
  "difficulty": "hard"
}