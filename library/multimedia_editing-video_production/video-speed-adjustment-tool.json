{
  "index": 512,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, professional responses. Make sure that the generated code can be executed as demonstrated. ======== ROLE ========\nYou are an experienced code expert. I am providing you with a software development requirement description, and I need you to generate project code according to these requirements. Strictly follow the rules to help the user generate complete project code with simple and understandable comments. Don't output anything else.\n\n======== OUTPUT RULES ========\n1. You should always generate complete and runnable project code. Please ensure the project is fully executable\n2. Ensure all code files you output are complete without omitting any code\n3. Carefully review and check all code before final output, evaluating its executability. If the code cannot be executed or contains errors, it needs to be regenerated\n4. If the requirements involve external API access or need to use user data (images, videos, audio, etc.), please provide simulated data\n\n======== PROJECT REQUIREMENTS ========\nDevelop a video speed adjustment tool where users can upload video files and set the video playback speed (fast or slow) using a slider. Finally, export a video file with the applied speed change.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the video upload functionality correctly implemented?",
      "description": "Check if the application properly allows users to upload video files. Evaluate if the code handles different video formats (MP4, WebM, AVI, etc.), implements file size validation, and provides clear error handling for unsupported formats. Score 0 if upload functionality is missing, 5 if basic upload with limited format support is implemented, and 10 if comprehensive upload with proper validation and error handling is provided.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the video playback speed adjustment feature properly implemented?",
      "description": "Assess if the slider for speed adjustment is correctly implemented and effectively controls the playback rate. Check if the code supports a reasonable range of speeds (e.g., 0.25x to 4x) and updates the video playback in real-time as the slider moves. Deduct 3 points if the slider doesn't provide smooth transitions, 5 points if speed changes don't apply in real-time during preview, and 3 points if the range is too limited. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the video export functionality working as expected?",
      "description": "Evaluate if the application can successfully export videos with the modified playback speed. Check if the code uses MediaRecorder API or another appropriate method to generate the new video file, maintains original video quality, and provides progress indicators during processing. Score 0 if export is not implemented, 5 if basic export works but has quality issues or lacks progress indication, and 10 if export is fully functional with proper quality preservation and user feedback.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the user interface intuitive and responsive?",
      "description": "Review the user interface design for the video speed adjustment tool. Check if all essential controls (upload button, playback controls, speed slider, export button) are clearly visible and properly positioned. Assess if the interface provides immediate visual feedback for user interactions and is responsive across different screen sizes. Deduct 3 points for each critical UI element that's difficult to find, 5 points for lack of responsive design, and 3 points for missing visual feedback. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as corrupted video files, browser compatibility issues, memory constraints for large files, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Video preview thumbnails at different speeds 2. Audio pitch correction when changing speed 3. Batch processing for multiple videos 4. Ability to apply variable speed to different segments of the video). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple video processing libraries doing the same task) 2. Function modules unrelated to video speed adjustment (e.g., unnecessary image filters) 3. Fancy effects that affect performance (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating video processing/UI/data management layers), code reusability, and performance optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if no performance optimization techniques are implemented for video processing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size â‰¥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Video playback controls respond within 100ms 2) Smooth transitions when adjusting speed 3) Clear visual indication of processing state during export. Deduct 5 points for laggy video playback, 3 points for jerky slider movement, and 5 points for lack of loading indicators during processing operations. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Video Production",
  "difficulty": "medium"
}