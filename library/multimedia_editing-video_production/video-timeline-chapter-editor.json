{
  "index": 486,
  "question": "You are a code expert, please use your professional knowledge to generate accurate, professional replies. Be sure to ensure that the generated code is executable and demonstrable.\n\n## Role ##\nYou are an experienced code expert. I am providing you with a software development requirement description and asking you to generate project code based on these requirements. Strictly follow the rules to help users generate complete project code that is fully commented with simple, easy-to-understand language, without outputting anything else.\n\n## Output Rules ##\n1. You will always generate complete, runnable project code. Please ensure the project is complete and executable.\n2. Ensure all code files you output are complete, without omitting any code.\n3. Before final output, carefully review and check all code and evaluate its executability. If the code cannot be executed or contains errors, it needs to be regenerated.\n4. If the requirements include external API access or require user data (images, videos, audio, etc.), please provide mock data.\n\n## Project Requirements Description ##\nPlease develop a video timeline marker and chapter editor. After users upload a video, they can add multiple markers and chapter divisions on the timeline. Each marker can have a title and description, forming a video chapter table of contents. Support quick navigation to corresponding video positions through the table of contents, and allow exporting video files containing chapter information or separate chapter metadata files (such as VTT format), to enable chapter navigation on various playback platforms.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the video upload functionality fully implemented?",
      "description": "Check if the code properly implements video file upload with validation for supported formats (mp4, webm, etc.), file size limits, and error handling. The upload process should include a progress indicator and gracefully handle interruptions. Score 0 if video upload is not implemented, 5 if basic upload exists without proper validation, and 10 if complete with format checking, progress tracking, and error handling.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the timeline marker system properly implemented?",
      "description": "Evaluate if the code allows users to add, edit, delete, and visualize markers on the video timeline. Each marker should store timestamp, title, and description. The markers should be visually distinct on the timeline and clickable for navigation. Deduct 3 points if markers cannot be edited, 3 points if visual representation is unclear, and 4 points if navigation to markers doesn't work correctly. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the chapter division functionality complete?",
      "description": "Assess whether the code enables users to create logical chapters by setting start/end times or connecting markers. Chapters should be visually represented on the timeline with distinct boundaries and be editable (rename, merge, split, delete). Score 0 if chapter creation isn't implemented, 5 if basic functionality exists but lacks editing capabilities, and 10 if the feature is complete with intuitive visualization and full editing support.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the export functionality properly implemented?",
      "description": "Check if the code supports exporting chapter metadata in standard formats (VTT, JSON, etc.) and/or embedding chapter information in video files. The exported data should correctly maintain all timestamp information and metadata. Deduct 5 points if only one export format is supported, 3 points if the exported files contain formatting errors, and 5 points if the export process is not user-friendly. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid video formats, browser compatibility issues, timestamp conflicts, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-assisted chapter detection 2. Real-time collaborative editing 3. Customizable chapter thumbnails 4. Keyboard shortcuts for quick marking). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to create markers that overlap in functionality) 2. Function modules unrelated to video timeline marking (e.g., a built-in image editor) 3. Fancy effects that affect performance (e.g., excessive animations during timeline operations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating video processing/UI/data management layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Timeline scrubbing response ≤ 100ms 2) Marker creation feedback within 200ms 3) Clear visual indication when navigating between chapters. Deduct 5 points for laggy timeline interactions, 3 points for delayed feedback when adding/editing markers, and 5 points for unclear or confusing navigation between chapters. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Video Production",
  "difficulty": "medium"
}