{
  "index": 1277,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Pay attention to ensuring that the generated code is executable for demonstration. So, based on this web server and combining with AntV G6, develop an online network topology diagram editing tool.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core graph editing functionality properly implemented?",
      "description": "Review whether the code correctly implements node creation, edge connection, selection, and basic editing operations using AntV G6. Check if the topology editing interface includes essential operations like add/delete/move nodes, connect/disconnect edges, and group/ungroup elements. Score 0 if the core editing functions are missing, 5 if only basic operations are implemented, and 10 if a comprehensive set of topology editing features is available.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the network topology data structure well-designed?",
      "description": "Evaluate if the code implements an appropriate data structure for representing network topology (nodes, edges, groups, attributes). Check if the structure supports topology validation, cycle detection, and maintains referential integrity. Deduct 5 points if the data structure doesn't allow for custom node/edge properties, and 3 points if it doesn't handle hierarchical relationships. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is a proper server integration implemented for topology persistence?",
      "description": "Check if the code includes proper API integration with the web server for saving, loading, and versioning topology diagrams. Verify if the implementation handles concurrent editing conflicts, provides auto-save functionality, and includes error recovery. Deduct 5 points if server synchronization is missing, and 3 points if there's no offline editing capability. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are advanced topology visualization features implemented?",
      "description": "Assess whether the tool implements advanced visualization features like automatic layout algorithms, mini-map navigation, zoom/pan controls, and custom styling options. Check if it includes filtering/search capabilities for large topologies. Score 10 points for comprehensive visualization features with performance optimization, 5 points for basic functionality, and 0 if advanced features are missing.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid topology configurations, server connection failures, concurrent editing conflicts, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Real-time collaborative editing 2. Topology validation and error checking 3. Network simulation capabilities 4. AI-assisted layout suggestions). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple node creation workflows) 2. Function modules unrelated to network topology editing (e.g., unnecessary analytics) 3. Fancy effects that affect performance (e.g., excessive animations or 3D effects). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data model/view/controller layers), efficient use of AntV G6 API, proper event handling, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching for topology elements (distinguishable but not jarring) 2) Proper layout of toolbars and editing panels (following standard UX patterns) 3) Professional typography and iconography for network elements. Deduct 3 points for cluttered toolbars, 5 points for poor visual hierarchy, and 5 points for inconsistent node/edge styling. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Responsive node dragging with < 50ms latency 2) Smooth zooming and panning with proper acceleration/deceleration 3) Clear visual feedback during edge creation and connection. Deduct 5 points for laggy graph manipulation, 3 points for jumpy animations during layout changes, and 5 points for confusing interaction models. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Web Visuals",
  "difficulty": "medium"
}