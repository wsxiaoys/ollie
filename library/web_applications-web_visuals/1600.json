{
  "index": 1600,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the generated code can be executed and displayed properly. I want to create a video website where the video URLs are collected through web scraping technologies. The video website needs to include features such as video listings, video details, recommended videos, and pagination.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the web scraping mechanism properly implemented?",
      "description": "Check if the code includes robust web scraping functionality with proper error handling, rate limiting, and respect for robots.txt. The implementation should handle different website structures, use appropriate parsing libraries (BeautifulSoup, Cheerio, etc.), and include proxy rotation or user-agent switching. Score 0 if no scraping code is provided, 5 if basic scraping is implemented but lacks safeguards, and 10 if a complete solution with error handling and ethical considerations is included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the video listing feature complete?",
      "description": "Evaluate whether the video listing includes essential metadata (title, thumbnail, duration, upload date, view count), supports different sorting options (trending, newest, most viewed), and has proper grid/list view toggles. The UI should be responsive across different screen sizes. Deduct 3 points if metadata is incomplete, 3 points for non-responsive design, and 2 points if sorting options are missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "How well is the video detail page implemented?",
      "description": "Analyze if the video detail page includes a functional video player with standard controls, complete metadata display, sharing options, and proper handling of different video sources/formats. Check if the page properly handles video loading states and errors. Score 0 if the video player doesn't work, 5 if it works but lacks important features (like fullscreen or playback speed), and 10 if it's fully featured with proper error handling.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the recommendation system effectively implemented?",
      "description": "Check if the code implements a recommendation algorithm based on video metadata, user history, or content similarity. The system should display recommended videos in appropriate places (sidebar, after video ends) with relevant preview information. Deduct 5 points if recommendations are random instead of algorithmic, 3 points if they lack preview information, and 2 points if they're not contextually placed. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as broken video links, failed API requests, missing metadata, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Picture-in-picture mode 2. Video history with resume capability 3. Smart tagging/categorization of scraped content). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementations of similar functions (e.g., multiple pagination systems coexisting) 2. Function modules unrelated to video streaming (e.g., a built-in calculator) 3. Fancy effects that affect performance (e.g., heavy animations that slow down video loading). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating data fetching/UI/state management layers), appropriate caching mechanisms for scraped data, and scalability considerations. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if no data persistence or caching strategy exists. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern video platform principles: 1) Clean layout with focus on video content 2) Proper thumbnail aspect ratios and sizes (16:9 with consistent dimensions) 3) Professional typography hierarchy (titles, descriptions, metadata). Deduct 3 points for cluttered layouts, 5 points for inconsistent thumbnail sizes, and 5 points for poor information hierarchy. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to video platform expectations: 1) Video loads within 3 seconds 2) Smooth transitions between listing and detail pages 3) Infinite scroll or pagination without page reloads. Deduct 5 points for each video that fails to load properly, 3 points for jerky transitions between pages, and 5 points for pagination that requires full page reloads. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Web Visuals",
  "difficulty": "hard"
}