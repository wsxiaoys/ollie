{
  "index": 1626,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable and displayable. Help me create a prize drawing webpage with an admin panel that allows adjusting prize names and winning probabilities. The admin panel password is 123456789987654321. There should be a popup notification when a prize is won.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the prize drawing core mechanism properly implemented?",
      "description": "Review whether the code accurately implements a weighted random selection algorithm based on configured probabilities. Check if the probability distribution is correctly calculated and if the random number generation is properly seeded. Score 0 if the core drawing mechanism is missing, 5 if basic random selection is implemented without weighting, and 10 if the weighted probability system is fully implemented with proper verification that actual results match the configured odds.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the admin panel functionality complete and secure?",
      "description": "Evaluate whether the admin panel allows comprehensive prize management (adding, editing, deleting prizes and adjusting their probabilities). Check if the authentication mechanism is properly implemented with the specified password (123456789987654321). Deduct 5 points if the password is stored in plain text or visible in client-side code, 3 points if CSRF protection is missing, and 3 points if there's no session timeout. Give 10 points if the admin panel is fully functional and reasonably secure.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the prize notification system properly implemented?",
      "description": "Check whether the popup notification appears when a prize is won, with appropriate animation and visibility. Evaluate if the notification includes all relevant prize details and is properly positioned. Deduct 5 points if the notification is not visually distinct, 3 points if it lacks animation, and 5 points if it disappears too quickly or doesn't have a dismissal option. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is data persistence implemented for configuration and results?",
      "description": "Assess whether the application properly stores prize configurations and drawing history. Check if localStorage/sessionStorage is used for client-side persistence or if server-side storage is implemented. Verify if data is properly loaded when the page initializes. Deduct 5 points if prize configurations are lost on page refresh, 3 points if there's no drawing history, and 5 points if there's no export/backup functionality. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid probability inputs, empty prize lists, concurrent admin operations, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Visual drawing animation with suspense 2. Confetti/celebration effects for winners 3. Statistics dashboard of historical draws). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementations of similar functions (e.g., multiple prize drawing algorithms coexisting) 2. Function modules unrelated to prize drawing (e.g., unnecessary third-party widgets) 3. Fancy effects that affect performance (e.g., excessive animations that slow down the interface). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/business logic/data layers), code reusability, and maintainability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there are no comments on complex logic. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual jarring during animations, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Web Visuals",
  "difficulty": "easy"
}