{
  "index": 889,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that any code you generate is executable for demonstration. Design a small program interface for New Year's wishes.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the New Year's wishes core functionality implemented?",
      "description": "Review whether the code implements the essential elements of a New Year's wishes interface, including input fields for entering wishes, submission functionality, and display of wishes. Score 0 if the core interaction logic is missing, 5 if only basic wish submission is implemented, and 10 if the solution includes rich text formatting, wish categorization, or filtering capabilities.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the New Year theme aesthetically represented?",
      "description": "Evaluate whether the interface incorporates appropriate New Year elements (such as fireworks, countdowns, festive colors, seasonal imagery) that match cultural expectations. Deduct 3 points if theming is minimal, 5 points if theme elements are inappropriate or missing entirely. Full score requires thoughtful integration of New Year visuals that enhance rather than distract from the core functionality.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are interactive New Year elements implemented?",
      "description": "Check for interactive elements that enhance the New Year's experience, such as animations (fireworks, confetti, etc.), sound effects, countdown timers, or transition effects when submitting wishes. Score 0 if no interactive elements exist, 5 if basic animations are implemented, and 10 if multiple well-integrated, performant interactive elements are present.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the data management for wishes properly implemented?",
      "description": "Assess how wishes are stored, retrieved, and managed. Look for appropriate data structures, local storage implementation, or simple backend integration. Deduct 5 points if wishes disappear on page reload, 3 points if there's no validation for inputs. Full score requires data persistence and proper handling of wish data lifecycle.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as empty inputs, special characters in wishes, rapid clicking, handling many wishes, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Wish sharing to social media 2. Personalized digital greeting cards 3. AR wishes viewing). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple wish submission methods) 2. Function modules unrelated to New Year wishes (e.g., a built-in calculator) 3. Fancy effects that affect performance (e.g., excessive particle animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/logic/data layers), code organization, and reusability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the code lacks comments or documentation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual focus guidance. Deduct 5 points for each operation without feedback, 3 points for visual after-images during fast interactions, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Web Visuals",
  "difficulty": "easy"
}