{
  "index": 958,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration when possible.\n\n2. Today's Alarm Data Overview Module\n- Statistical analysis of total alarms by time dimension\n- Alarm type distribution (bar chart/pie chart)\n- Processing status proportion (donut chart)\n- Alarm heat map of key areas\n\nPlease help me design the frontend component layout for the above features, and write a complete HTML example page for mobile version.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the statistical analysis of total alarms by time dimension properly implemented?",
      "description": "Check if the code implements a time-based visualization (line chart, bar chart, etc.) showing alarm frequency over different time periods. The implementation should include time filtering options (daily, weekly, monthly), proper time axis formatting, and data aggregation logic. Score 0 if missing, 5 if basic implementation without filtering, 10 if complete with interactive time range selection.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the alarm type distribution visualization correctly implemented?",
      "description": "Evaluate whether the bar chart or pie chart accurately represents alarm type distribution with proper legends, labels, and percentage values. Check if the visualization is responsive and handles various data scenarios (many categories, single dominant category). Deduct 5 points if legends are missing or unclear, 3 points if percentage calculation is incorrect. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the processing status proportion (donut chart) properly visualized?",
      "description": "Check if the donut chart correctly displays alarm processing statuses (e.g., pending, in progress, resolved) with clear color coding, labels, and center statistics. The chart should be interactive allowing users to select status segments for filtering. Deduct 3 points if center statistics are missing, 5 points if interaction is not implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the alarm heat map for key areas effectively implemented?",
      "description": "Review if the heat map properly visualizes alarm concentration in different areas using appropriate color gradients, legends, and location markers. The heat map should be responsive to different screen sizes and provide zoom/pan capabilities. Deduct 5 points if the color gradient is hard to interpret, 3 points if area labeling is unclear, 5 points if the map is not interactive. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as empty datasets, network errors, rendering on different screen sizes, etc.) and provide friendly error prompts or fallback displays. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Real-time data updates with animation 2. Cross-chart filtering capabilities 3. Custom alert thresholds with visual indicators). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visualizations (e.g., multiple charts showing the same data) 2. Function modules unrelated to alarm data overview 3. Fancy effects that affect performance (e.g., excessive animations or 3D effects that slow down rendering). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating chart components, data processing, and layout), code reuse for similar chart types, and responsive design implementation. Deduct 5 points if global variables are excessively used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if responsive design breakpoints are poorly implemented. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards for mobile?",
      "description": "Evaluate whether the mobile design follows modern principles: 1) Touch-friendly element size (min 44px tap targets) 2) Proper layout spacing for small screens (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 16px for mobile readability). Deduct 3 points for elements that are too small to tap accurately, 5 points for horizontal scrolling on standard mobile screens, and 5 points for text that requires zooming to read. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the mobile interaction smooth and optimized for touch?",
      "description": "Judge whether the mobile interaction conforms to touch interaction standards: 1) Fast touch response (≤ 100ms) 2) Proper touch gestures for map navigation/chart interaction 3) Clear visual feedback for tapped states. Deduct 5 points for interactions requiring precise cursor control, 3 points for missing touch feedback, and 5 points for overlapping touch targets. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Web Visuals",
  "difficulty": "easy"
}