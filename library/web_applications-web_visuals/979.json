{
  "index": 979,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure that the code you generate is executable and can be demonstrated. Help me create an HTML webpage that reads MP3 and WAV files within the current directory to create a playlist for online playback.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the file loading and directory scanning mechanism properly implemented?",
      "description": "Check if the code correctly implements file system access API or uses input type='file' with proper directory scanning. For browsers with FileSystem API support, verify directory traversal logic for MP3/WAV files. Score 0 if no file scanning is implemented, 5 if only basic file selection exists, and 10 if recursive directory scanning with proper error handling is included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the audio player implement all core playback controls?",
      "description": "Verify if the implementation includes play/pause, next/previous track, volume control, mute toggle, and progress bar functionality. Each missing control deducts 2 points. The player should properly handle transitions between tracks and maintain state when navigating the playlist. Score 10 for comprehensive controls with smooth transitions.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is proper audio metadata extraction and display implemented?",
      "description": "Evaluate whether the code extracts and displays ID3 tags from MP3 files and metadata from WAV files (artist, title, album, duration, etc.). Check for proper error handling when metadata is missing. Score 3 for basic filename display, 7 for partial metadata extraction, and 10 for complete metadata with album art display when available.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the playlist management system fully functional?",
      "description": "Review if the code implements saving/loading playlists, drag-and-drop reordering, search/filter functionality, and playlist persistence (localStorage or IndexedDB). Deduct 2 points for each missing feature. Score 10 if the implementation includes shuffle, repeat modes, and custom playlist creation capabilities.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as unsupported file formats, corrupted audio files, browser compatibility issues, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Visualizer for audio frequencies 2. Keyboard shortcuts for playback control 3. Dark/light theme toggle). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple volume control mechanisms) 2. Function modules unrelated to audio playback 3. Fancy effects that affect performance (e.g., unnecessary animations that slow down the interface). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating audio processing/UI/storage logic), proper event handling patterns, and clean code structure. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no error handling for browser compatibility. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Progress bar updates smoothly during playback 3) Clear visual feedback for current playing track. Deduct 5 points for each operation without feedback, 3 points for choppy progress updates during playback, and 5 points for hard-to-identify the current playing track. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Web Visuals",
  "difficulty": "easy"
}