{
  "index": 898,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for display. Create an interface for an engineering graphics-based 3D visualization system using Vue and Element Plus.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the 3D visualization core functionality implemented?",
      "description": "Review whether the code accurately implements a 3D visualization system using WebGL/Three.js/Babylon.js within Vue. Check if basic 3D operations are supported (camera rotation, zooming, panning). Score 0 if the core 3D rendering is not implemented, 5 if only basic rendering is implemented without interactions, and 10 if full 3D object manipulation, camera controls, and proper perspective are included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the engineering graphics functionality incorporated?",
      "description": "Evaluate whether the visualization system supports engineering graphics features such as precise measurements, dimensioning, cross-sectioning, wireframe mode, and technical specifications display. Check for CAD-like functionalities such as snap-to-grid, orthographic projections, and technical drawing standards. Deduct 3 points if measurements are missing, 3 points if dimensioning is absent, and 4 points if technical drawing capabilities are lacking. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is Vue properly integrated with Element Plus for the UI?",
      "description": "Check whether Vue components are correctly structured with proper props/emits, composition API or options API is used appropriately, and Element Plus components are properly integrated. Look for reactive data management, component lifecycle handling, and proper event bindings. Deduct 5 points for improper Vue component architecture, 3 points for incorrect Element Plus usage, and 2 points for state management issues. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are engineering data visualization features implemented?",
      "description": "Review if the code includes specialized engineering visualization capabilities like material property rendering, stress analysis coloring, parametric modeling, assembly visualization, or BIM/CAD data support. Check for technical specs display, layer management, and metadata visualization. Deduct 3 points for each major engineering visualization feature missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid 3D models, browser compatibility issues, memory management with large models, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Real-time collaborative viewing/editing 2. AR/VR compatibility 3. Physics-based simulation 4. Exploded view animations). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple camera control systems coexisting) 2. Function modules unrelated to engineering visualization (e.g., excessive animations) 3. Heavy effects that affect performance (e.g., unnecessary post-processing or particle systems). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating 3D engine logic/UI components/data services), unit test coverage, and build process optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process does not optimize 3D assets. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern engineering software design principles: 1) Clear workspace separation (viewport, toolbar, property panels) 2) Proper use of Element Plus components with consistent styling 3) Professional color scheme with sufficient contrast for technical data. Deduct 3 points for each crowded panel, 5 points for inconsistent component styling, and 5 points for poor information hierarchy. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the 3D performance and UI responsiveness conform to professional standards: 1) Stable 30+ FPS even with complex models 2) Smooth transitions between different views/modes 3) Responsive UI despite heavy 3D rendering. Deduct 5 points for frame drops during interaction, 3 points for sluggish UI response when manipulating models, and 5 points for lack of loading indicators during heavy operations. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Web Applications-Web Visuals",
  "difficulty": "medium"
}