{
  "index": 430,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure that the code you generate is executable. Use HTML to create a cake player that can play the Happy Birthday song with waveform visualization.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the cake-themed audio player visually implemented?",
      "description": "Check if the HTML includes an actual visual representation of a cake (not just a plain audio player). The cake should have appropriate styling with CSS to look like a birthday cake (with layers, frosting, candles, etc.). Score 0 if there's no cake visualization, 5 if there's a basic cake design, and 10 if the cake is detailed and visually appealing.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the Happy Birthday song playback functionality fully implemented?",
      "description": "Verify that the player can actually play the Happy Birthday song. Check if the code includes the audio file or generates the notes programmatically. The player must have basic controls (play/pause at minimum). Deduct 5 points if the song is incomplete, 3 points if the audio controls are missing, and 5 points if there are no error handlers for audio loading issues.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the waveform visualization accurately implemented?",
      "description": "Examine whether the code properly implements audio visualization using Web Audio API (AudioContext, AnalyserNode) and either Canvas or SVG to draw the waveform. The visualization should synchronize with the actual audio playback. Give 0 points if visualization is missing, 5 points if basic visualization exists but isn't synchronized well, and 10 points if the waveform accurately represents the audio in real-time.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are there interactive elements incorporated into the cake player?",
      "description": "Assess whether the code includes interactive elements like clickable candles that affect the music, draggable audio controls on the cake, or animations that respond to user interaction. Deduct 5 points if there's no interaction beyond basic play/pause, and 3 points if the interactions aren't intuitive or cake-themed.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser incompatibilities, audio loading errors, user interruptions, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Candles that light up with the beat 2. Responsive cake that changes with music intensity 3. Visual effects synchronized to specific birthday song phrases). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar visualization methods 2. Function modules unrelated to the cake player or birthday theme 3. Fancy effects that affect audio performance or visualization clarity. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating audio processing/visualization/UI components), code reusability, and performance optimization. Deduct 5 points if global variable pollution is found; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no performance consideration for the visualization (e.g., excessive DOM updates). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching suitable for a birthday theme (festive but not garish) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic cake-to-control layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the waveform animation and cake interactions conform to human perception characteristics: 1) Audio response delay ≤ 100ms 2) Smooth visualization with no frame drops at 60fps 3) Clear visual feedback when interacting with the cake elements. Deduct 5 points for jerky waveform animation, 3 points for delayed audio response, and 5 points for confusing interaction feedback. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Audio Editing",
  "difficulty": "medium"
}