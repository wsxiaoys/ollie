{
  "index": 516,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable whenever possible. Implement a real-time multi-user online audio editing collaboration platform that allows multiple users to simultaneously edit the same audio project, synchronize changes in real-time, and provide version control functionality.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the audio editing system fully implemented?",
      "description": "Review whether the code implements core audio processing functionality including waveform visualization, playback controls, track mixing, and effects application. Score 0 if core editing capabilities are missing, 5 if only basic playback and recording are implemented, and 10 if comprehensive audio manipulation features (cutting, splicing, effects, multi-track editing) are present.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the real-time collaboration functionality implemented?",
      "description": "Evaluate whether the system allows multiple users to edit the same audio project simultaneously with proper conflict resolution. Check for WebSocket/WebRTC implementation with operational transformation or CRDT algorithms for handling concurrent edits. Deduct 5 points if changes aren't propagated in real-time (≤ 300ms), and 3 points if user presence indicators are missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the version control system properly implemented?",
      "description": "Assess whether the code includes robust version control capabilities including commit history, branching, merging, and the ability to revert to previous states. Check if audio state snapshots are stored efficiently (using differential storage rather than full copies). Deduct 5 points if there's no visual history timeline, and 3 points if branch management is missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the audio synchronization mechanism optimized for network efficiency?",
      "description": "Evaluate whether the code implements bandwidth-efficient audio synchronization using techniques like delta encoding, audio chunk caching, and progressive loading. Check for handling of network latency with local prediction and server correction. Deduct 5 points if large audio files transfer causes UI freezing, and 3 points if there's no offline editing capability with later synchronization. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as audio format incompatibilities, network interruptions, browser audio API limitations, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-assisted audio enhancement tools 2. Real-time voice chat for collaboration sessions 3. Interactive audio visualization options). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple audio processing pipelines) 2. Function modules unrelated to audio editing (e.g., a built-in video player) 3. Fancy effects that affect performance (e.g., excessive animations in the UI). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating audio processing/UI/network layers), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Waveform rendering and manipulation response ≤ 100ms 2) Transition animation duration controlled between 300-500ms 3) Clear visual feedback during audio processing operations. Deduct 5 points for each operation without feedback, 3 points for laggy waveform displays during editing, and 5 points for unintuitive tool placement. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Audio Editing",
  "difficulty": "hard"
}