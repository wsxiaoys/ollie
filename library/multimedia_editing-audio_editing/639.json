{
  "index": 639,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable when possible. Implement a web-based music synthesizer that offers various synthesizer modules (such as oscillators, filters, envelope generators), allowing users to create custom sounds by dragging and connecting modules, with capabilities for real-time playback and audio export.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core synthesizer architecture properly implemented?",
      "description": "Review whether the code correctly implements the Web Audio API with proper audio nodes (OscillatorNode, BiquadFilterNode, GainNode, etc.) and connects them in a functional audio graph. Check if the system handles audio context initialization, sample rate management, and buffer processing correctly. Score 0 if audio synthesis is not implemented, 5 if basic oscillators are present but lacking modulation capabilities, and 10 if a complete modular synthesis system is implemented.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are essential synthesizer modules implemented and functional?",
      "description": "Evaluate the range of synthesizer modules offered: oscillators (sine, square, sawtooth, triangle, noise), filters (lowpass, highpass, bandpass), envelope generators (ADSR), LFOs, and effects (reverb, delay, distortion). Each module should be properly parameterized. Deduct 1 point for each essential module missing, with a minimum score of 0. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the drag-and-drop connection system properly implemented?",
      "description": "Check whether the interface allows intuitive dragging of modules onto a workspace and creating connections between them. Examine if the connection system validates compatible inputs/outputs, prevents audio feedback loops, and handles signal flow visualization. Deduct 5 points if connections aren't visually represented, 5 points if invalid connections aren't prevented, and 3 points if reconnection/disconnection isn't supported. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the system handle real-time control and audio export functions?",
      "description": "Verify that real-time parameter adjustment is possible while audio is playing, with minimal latency (<50ms). Check if the system supports exporting audio as WAV or MP3 files with proper encoding, metadata handling, and download functionality. Deduct 5 points if real-time control introduces audible glitches, and 5 points if export functionality is missing or produces corrupted files. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as audio context suspended states, browser audio restrictions, memory management for long audio processes, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Preset library with shareable configurations 2. Spectral visualization of output audio 3. MIDI device support for external control). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar audio processing functions 2. Function modules unrelated to audio synthesis (e.g., built-in video player) 3. Fancy effects that consume excessive CPU and affect audio performance. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating audio engine/UI/persistence layers), unit test coverage, and web audio performance optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if audio performance is not optimized (e.g., unnecessary resampling or inefficient audio processing). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern DAW/synthesizer design principles: 1) Consistent control appearance (knobs, sliders, buttons share visual language) 2) Proper layout spacing with logical signal flow (typically left-to-right) 3) Professional color coding of different module types and connection paths. Deduct 3 points for confusing module appearances, 5 points for unintuitive control layouts, and 5 points for unclear signal flow visualization. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to musical instrument interaction standards: 1) Parameter changes reflect in audio with <10ms latency 2) Smooth animations for control adjustments without audio artifacts 3) Clear visual feedback when making connections. Deduct 5 points for audible glitches during control changes, 3 points for laggy UI responses during audio processing, and 5 points for connection feedback that doesn't clearly indicate signal flow. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Audio Editing",
  "difficulty": "hard"
}