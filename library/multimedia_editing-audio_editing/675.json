{
  "index": 675,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable whenever possible. Develop a frontend project for audio recording and basic editing, where users can use the browser's recording function to record audio, perform simple editing operations such as trimming and adding sound effects after recording, and finally save and download the edited audio.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the audio recording functionality fully implemented?",
      "description": "Review whether the code properly implements the MediaRecorder API with appropriate error handling. Check for microphone access permission management, recording state indicators, and audio format support (WAV/MP3). Score 0 if recording functionality is missing, 5 if basic recording works but lacks proper state management, and 10 if recording handles all edge cases including permission denial and device switching.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the basic audio editing features implemented?",
      "description": "Evaluate the implementation of core editing features: trimming/cutting functionality, volume adjustment, and basic sound effects (e.g., echo, reverb). Verify that the Web Audio API is properly utilized with appropriate visualizations of edits. Score 3 points for each well-implemented editing feature. Deduct points if the implementation is buggy or has poor UX (e.g., difficult to identify trim points or unclear effect application).",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the audio visualization component properly implemented?",
      "description": "Check if waveform visualization is implemented using Canvas/WebGL or SVG with proper time scaling. Verify that the visualization updates in real-time during recording and accurately reflects editing operations. Assess responsiveness for different audio durations. Score 0 if visualization is missing, 5 if basic static visualization exists, and 10 if the visualization is interactive, allowing selection of audio segments and showing editing effects.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the audio saving and downloading functionality complete?",
      "description": "Review the export functionality for different audio formats (at minimum WAV/MP3), proper file naming, metadata handling, and download implementation using Blob objects and download attributes. Verify the exported file quality and check if the implementation handles large files appropriately. Score 0 if export is missing, 5 if basic export works with limitations, and 10 if export handles multiple formats with proper metadata.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser compatibility issues, microphone disconnection during recording, aborted downloads, memory constraints with large files, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Noise reduction capabilities 2. Voice-to-text transcription 3. Audio filters with preview 4. Multi-track mixing 5. Keyboard shortcuts for editing). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple audio processing pipelines) 2. Function modules unrelated to audio recording/editing (e.g., unnecessary social sharing features) 3. Performance-heavy features that affect core functionality (e.g., excessive visual effects). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating audio processing logic/UI components/storage handling), error handling strategies, memory management (especially for large audio files), and code organization. Deduct 5 points if global state pollution is found; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if no performance optimization strategies are implemented for audio processing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern audio app design principles: 1) Clear recording controls with proper state indication 2) Intuitive editing interface with visual feedback 3) Consistent spacing and alignment of controls 4) Professional color scheme for audio visualizations. Deduct 3 points for confusing recording state indicators, 5 points for cluttered editing controls, and 5 points for poor contrast that affects usability. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to audio editing expectations: 1) Immediate feedback when recording starts/stops 2) Smooth waveform scrolling during long recordings 3) Responsive editing operations with visual confirmation 4) Progress indicators for processing operations. Deduct 5 points for laggy waveform rendering, 3 points for delayed response to editing actions, and 5 points for missing progress indicators during audio processing operations. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Audio Editing",
  "difficulty": "hard"
}