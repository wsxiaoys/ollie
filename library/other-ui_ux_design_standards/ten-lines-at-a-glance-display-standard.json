{
  "index": 854,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable when presented. \"Ten Lines at a Glance\" Training\nBased on the title, generate a standard for an app's subtitle display that allows viewing ten lines at a glance.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the subtitle display system properly designed?",
      "description": "Review whether the code implements a proper subtitle display mechanism that shows exactly 10 lines at a time. Check if it handles text wrapping correctly, accounts for different screen sizes, and maintains consistent line height. Score 0 if the display doesn't show 10 lines, 5 if it shows 10 lines but with inconsistent spacing or formatting, and 10 if it perfectly displays 10 lines with proper formatting and responsiveness.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is text rendering optimization implemented?",
      "description": "Evaluate whether the code includes techniques for efficient text rendering such as text virtualization, canvas-based rendering, or optimized DOM manipulation for smooth scrolling through subtitles. Check if the implementation prevents layout thrashing when updating lines. Deduct 5 points if no optimization is present, 3 points if basic optimization exists but performance still suffers under load. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is there a proper timing synchronization mechanism?",
      "description": "Check if the subtitle system includes synchronization with media timing (video/audio) through either timestamp-based or duration-based approaches. Verify that there's a mechanism to adjust subtitle display based on playback speed changes. Deduct 5 points if subtitles aren't properly synchronized, 3 points if synchronization works only at normal speed. Award 10 points for a comprehensive solution with frame-accurate timing.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Does the implementation handle various subtitle formats and languages?",
      "description": "Assess whether the code supports common subtitle formats (SRT, WebVTT, etc.) and handles different languages properly, including right-to-left text, vertical text, and complex scripts. Check if it correctly manages Unicode characters and text that requires special rendering. Deduct 5 points if only one format is supported, 3 points if language support is limited. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as malformed subtitle files, missing timing information, overlapping time codes, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dynamic font sizing based on content importance 2. Color-coded speaker identification 3. Smooth transition animations between subtitle changes). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant subtitle parsing mechanisms 2. Unnecessary rendering loops or DOM manipulations 3. Overly complex animations that could impact performance or readability. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core subtitle display functionality is compromised by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating subtitle parsing/rendering/synchronization), unit test coverage, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the subtitle display follows modern design principles: 1) Appropriate contrast ratio between text and background (minimum 4.5:1) 2) Proper typography with adequate spacing between lines (1.2-1.5Ã— line height) 3) Consistent margins and padding around the subtitle area. Deduct 3 points for poor contrast, 5 points for illegible font choices, and 5 points for inconsistent spacing or alignment. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the subtitle transitions conform to human perception characteristics: 1) Subtitles appear and disappear without jarring 2) Smooth scrolling if content changes while maintaining readability 3) Proper focus handling for accessibility. Deduct 5 points for abrupt transitions between subtitles, 3 points for stuttering during scrolling, and 5 points for lack of user controls for subtitle display preferences. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Other-UI/UX Design Standards",
  "difficulty": "hard"
}