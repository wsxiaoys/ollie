{
  "index": 616,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Ensure that the code you produce is executable when possible. Please design an image comparison tool that allows users to upload two images for visual comparison. The tool needs to support multiple comparison modes: 1) Slide comparison (drag the middle divider to view before and after comparison); 2) Transparency comparison (adjust the transparency of the top image); 3) Flip comparison (click to quickly switch between the two images); 4) Side-by-side comparison. Also provide synchronized zoom and pan functions to ensure that corresponding areas of both images can be precisely compared. This is suitable for designers comparing before and after design modifications or photographers comparing photos before and after processing.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the image upload and display functionality fully implemented?",
      "description": "Review whether the code properly handles image upload (supporting common formats like JPG, PNG, WebP), validates file types/sizes, and correctly displays the images with proper error handling. Check if images are properly scaled to fit the viewport initially while preserving aspect ratios.0 points if image upload is not implemented; 5 points if basic upload works but lacks validation or proper error handling; 10 points for complete implementation with proper validation, error handling, and responsive display.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are all four comparison modes correctly implemented?",
      "description": "Verify that all required comparison modes function properly: 1) Slide comparison with draggable divider, 2) Transparency adjustment with smooth opacity control, 3) Flip comparison with clean toggling, and 4) Side-by-side view with consistent alignment. Each mode should handle image differences gracefully.Deduct 2.5 points for each missing or poorly implemented comparison mode. Full 10 points requires all four modes to be fully functional with smooth transitions between modes.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the synchronized zoom and pan functionality implemented effectively?",
      "description": "Evaluate whether zoom and pan functions maintain perfect synchronization between images across all comparison modes. Check if zoom controls are intuitive (mouse wheel, pinch gesture, or UI controls), if pan works with mouse drag or touch gestures, and if the zoomed area remains properly aligned between images.0 points if zoom/pan is not implemented; 5 points if basic functionality exists but synchronization issues occur; 10 points if zoom/pan works flawlessly with proper event handling and maintains perfect alignment between images.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the UI for switching between comparison modes intuitive and accessible?",
      "description": "Assess the implementation of mode switching UI: clearly labeled buttons/controls, visual indicators for active mode, smooth transitions between modes, and keyboard shortcuts for accessibility. Mode switching should preserve the current zoom/pan position.Deduct 3 points if mode switching is confusing or lacks visual feedback; deduct 2 points if transitions between modes are jarring; deduct 2 points if keyboard accessibility is missing. Full 10 points for intuitive, accessible controls with smooth transitions.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid image files, extremely large/small images, browser compatibility issues, touch vs mouse input) and provide friendly error prompts or recovery mechanisms. Check if the tool degrades gracefully when features aren't supported.Evaluate whether the code can handle common abnormal situations (such as out-of-bounds input, network interruption, user operation errors, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Image histogram comparison, 2. Hotspot detection highlighting differences, 3. Image metadata display, 4. History of previous comparisons, 5. Integration with common design tools).Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple zoom controls with overlapping functionality) 2. Function modules unrelated to image comparison (e.g., unrelated editing tools) 3. Fancy effects that affect performance (e.g., unnecessary animations that slow rendering).Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI logic/image processing/event handling layers), code reusability, performance optimization for large images, and browser compatibility considerations. Check for proper memory management when handling multiple images.Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if image rendering optimization is poor (causing lag with larger images). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size â‰¥ 14px, line height over 1.5 times) 4) Clear visual distinction between control elements and image display area.Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Image loading shows clear progress indicators 2) Slide divider moves smoothly with cursor/touch 3) Opacity changes render without stuttering 4) Zoom/pan operates at 60fps without jank 5) Mode transitions use appropriate easing.Deduct 5 points for each operation without feedback, 3 points for visual stuttering during interactions, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Image Editing",
  "difficulty": "medium"
}