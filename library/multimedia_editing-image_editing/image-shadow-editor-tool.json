{
  "index": 593,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Implement a front-end tool for adding shadows to images. After the user uploads an image, they should be able to set the shadow color, offset, and blur level. The image should display the shadow effect in real-time, and users should be able to save the processed image.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the image upload functionality fully implemented?",
      "description": "Check if the code provides a complete file input system for image upload, including file type validation (only allowing image formats), proper error handling for invalid files, and visual feedback during the upload process. Score 0 if upload functionality is missing, 5 if basic upload works but lacks validation, and 10 if it includes comprehensive validation, error handling, and loading indicators.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are the shadow customization controls properly implemented?",
      "description": "Evaluate whether all required shadow customization options are available: color picker with alpha channel support, horizontal/vertical offset controls, blur radius adjustment, and spread radius control if applicable. Controls should have appropriate min/max values and step increments. Deduct 3 points for each missing control, 2 points if controls lack proper range limits, and 2 points if the UI doesn't provide visual cues for current values.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Does the real-time shadow preview work correctly?",
      "description": "Verify that shadow changes are applied to the image in real-time without noticeable delay (<100ms). The preview should accurately reflect the final output. Deduct 5 points if the preview is delayed (>200ms), 5 points if the preview doesn't match the final output, and 5 points if the preview fails under certain parameter combinations.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the image saving functionality properly implemented?",
      "description": "Check if users can save the processed image with the applied shadow effect as a common image format (PNG/JPEG). The saved image should maintain the shadow effect and original image quality. Deduct 5 points if saving is limited to screenshots, 5 points if the shadow effect is not preserved in the saved file, and 3 points if there are no options for image format or quality selection.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as large image files, unsupported formats, browser compatibility issues, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Multiple shadow layering 2. Shadow presets/templates 3. History/undo functionality 4. Batch processing capabilities). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to adjust the same shadow property) 2. Function modules unrelated to image shadow editing (e.g., unrelated filters) 3. Fancy effects that affect performance (e.g., unnecessary animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI controls/image processing/file handling), error handling coverage, and performance optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there are no performance optimizations for large images. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic control placement. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Shadow update delay ≤ 100ms 2) Smooth transitions when adjusting parameters 3) Clear visual indicators for active controls. Deduct 5 points for sluggish shadow updates, 3 points for jerky slider movements, and 5 points for confusing interface state feedback. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Image Editing",
  "difficulty": "easy"
}