{
  "index": 467,
  "question": "You are a code expert, please use your professional knowledge to generate accurate and professional responses. Try to ensure the generated code is executable for demonstration.\n\n======== ROLE ========\nYou are an experienced code expert. I'm providing you with a software development requirement description, and you need to generate project code based on these requirements. Strictly follow the rules to help users generate complete project code with simple and easy-to-understand comments, without outputting anything else.\n\n======== OUTPUT RULES ========\n1. Always generate complete, runnable project code, ensuring the project is fully executable\n2. Ensure all code files you output are complete, don't omit any code\n3. Carefully review and check all code before final output, evaluating its executability. If the code cannot be executed or contains errors, regenerate it\n4. If the requirements involve external API access or user data (images, videos, audio, etc.), please provide simulated data\n\n======== PROJECT REQUIREMENTS ========\nPlease develop an image format conversion tool that supports conversion between various image formats. The tool should have the following features: support formats including JPG, PNG, WEBP, GIF, BMP, TIFF, SVG, etc.; batch conversion functionality; adjustable conversion parameters (such as quality, compression rate, size, etc.); preserve or edit metadata information; provide frame preview and editing for dynamic images (such as GIF); provide basic image optimization options; display size comparison before and after conversion; conversion history records. All processing should be completed locally in the browser without uploading to a server. The interface should be clear and concise with explicit steps for use.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the image format conversion core functionality fully implemented?",
      "description": "Review whether the code implements conversion between all required formats (JPG, PNG, WEBP, GIF, BMP, TIFF, SVG). Check if the conversion logic handles edge cases like transparent backgrounds, color spaces, and alpha channels correctly. Score 0 if fewer than 3 formats are supported, 5 if most basic formats work but with errors, and 10 if all specified formats convert correctly with proper error handling.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the batch conversion functionality properly implemented?",
      "description": "Evaluate if the code allows users to select and convert multiple files simultaneously. Check for queue management, progress tracking, and parallel processing capabilities. The implementation should handle memory efficiently when processing large batches. Deduct 5 points if batch operations are limited to sequential processing without progress indicators, deduct 3 points if the UI becomes unresponsive during conversion, full score if batch operations are optimized with proper feedback.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are adjustable conversion parameters implemented effectively?",
      "description": "Check whether the code provides UI controls for adjusting quality, compression rate, dimensions, and other format-specific settings. Each format should have appropriate parameter options (e.g., JPEG quality slider, PNG compression level). Deduct 3 points if parameters are hardcoded, 5 points if format-specific options are missing, and give 10 points if comprehensive and intuitive parameter controls are implemented with real-time preview capabilities.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is metadata preservation and editing functionality implemented?",
      "description": "Review if the code correctly extracts, displays, preserves, and allows editing of image metadata (EXIF, IPTC, XMP). Check if critical metadata like copyright information and camera data is handled properly. Score 0 if metadata is always stripped, 5 if metadata is preserved but not editable, and 10 if the implementation provides both preservation and comprehensive editing capabilities with proper validation.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (malformed images, unsupported formats, browser limitations, memory constraints, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should validate input files, employ try-catch blocks, and gracefully handle WebAssembly/library failures. Give 10 points for comprehensive error handling, 5 points for basic validation, and 0 points if errors cause the application to crash.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. AI-powered automatic optimization suggestions 2. Drag-and-drop workflow builder for complex conversions 3. Visual difference highlighter between original and converted images). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementations of image processing libraries (e.g., including both Sharp and ImageMagick wrappers) 2. Function modules unrelated to image conversion (e.g., a built-in audio player) 3. Expensive computations that don't contribute to core functionality. Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (separation of conversion logic/UI/file handling), use of appropriate design patterns, and memory management strategies. Examine if the code efficiently uses Web Workers for heavy processing to prevent UI freezing. Deduct 5 points for global state pollution or tight coupling; deduct 5 points for inefficient memory usage with large images; deduct 5 points if intensive operations aren't offloaded from the main thread. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Clear visual hierarchy with conversion options and preview areas 2) Consistent spacing and alignment of controls 3) Professional typography with appropriate font sizing for readability. Deduct 3 points for each crowded control panel, 5 points for poor information architecture, and 5 points for unintuitive conversion workflow. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Immediate visual feedback when files are selected 2) Smooth progress indicators for conversion processes 3) Responsive UI even during heavy conversion tasks. Deduct 5 points for each operation without feedback, 3 points for laggy interactions during processing, and 5 points for unclear conversion status indicators. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Image Editing",
  "difficulty": "hard"
}