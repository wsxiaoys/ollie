{
  "index": 1535,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable and demonstrable. Please create a simple drawing app using HBuilder, with complete, runnable code for browsers. Provide step-by-step instructions on how to create it, how to import it, and how to package it.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the drawing functionality fully implemented?",
      "description": "Check if the code provides core drawing capabilities: free-hand drawing, shape creation (at least rectangles, circles, and lines), color selection, and brush size adjustment. Score 0 if basic drawing isn't implemented, 5 if only basic pen tool works, 10 if all essential drawing tools are functional with proper event handling and canvas manipulation.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the HBuilder integration properly explained?",
      "description": "Evaluate whether clear instructions for HBuilder setup, project creation, and code organization are provided. Check for specific HBuilder-related configurations, plugin recommendations, and proper directory structures. Deduct 5 points if instructions are vague, 3 points if missing import/export procedures. Full score requires detailed steps with HBuilder-specific screenshots or command references.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the packaging process thoroughly documented?",
      "description": "Assess if the code includes complete packaging instructions for different platforms (Web, Android, iOS) using HBuilder's capabilities. Check for manifest configuration, app icons setup, and deployment steps. Deduct 5 points if packaging steps are incomplete, 3 points if platform-specific settings are missing. Full score requires comprehensive packaging workflow with proper error handling scenarios.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are save/export functionalities implemented?",
      "description": "Review whether the drawing app allows users to save their creations as image files (PNG/JPEG), and possibly export to cloud storage or share via social media. Check if the implementation includes file naming options and quality settings. Deduct 5 points if only basic saving is implemented, 3 points if no preview before saving exists. Full score requires multiple export formats and sharing capabilities.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as browser compatibility issues, canvas size limitations, memory management for large drawings, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Layer management 2. Filters and effects 3. Undo/Redo history with previews). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple color pickers) 2. Function modules unrelated to drawing (e.g., a built-in calculator) 3. Fancy effects that affect performance (e.g., unnecessary animations during drawing). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/drawing logic/storage layers), code reusability, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the drawing interactions conform to human perception characteristics: 1) No visible lag between pen movement and drawing (≤ 16ms) 2) Smooth transitions between tools and states 3) Clear visual feedback for selections and operations. Deduct 5 points for noticeable drawing lag, 3 points for jerky tool transitions, and 5 points for confusing or hidden tool states. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Image Editing",
  "difficulty": "easy"
}