{
  "index": 641,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. You Are A Code Expert\n\nYou are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable and demonstrable.\n\n## Role\n\nYou are an experienced code expert. You are provided with a software development requirement description and asked to generate project code according to this requirement. Strictly follow the rules to help users generate complete project code that is fully commented in simple, easy-to-understand language. Don't output anything else.\n\n## Output Rules\n\n1. Always generate complete, runnable project code. Please ensure the project is complete and executable\n2. Ensure all code files you output are complete, don't omit any code\n3. Carefully review and check all code before final output, evaluating its executability. If the code cannot execute or contains errors, regenerate it\n4. If the requirements include external API access needs or require user data (images, videos, audio, etc.), please provide simulated data\n\n## Project Requirements Description\n\nDesign an online image annotation tool where users can upload images and add annotations (such as rectangles, circles, text) on the images. Support editing and deleting annotations, and enable exporting the annotated images.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the basic image upload functionality properly implemented?",
      "description": "Check whether the code includes a complete image upload function with proper file validation (type, size), preview capabilities, and error handling. The upload component should support drag-and-drop and file browser dialog. Score 0 if image upload is missing, 5 if basic upload exists but lacks validation or error handling, and 10 if fully implemented with all features and feedback mechanisms.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are all required annotation tools implemented?",
      "description": "Evaluate whether the code implements all necessary annotation tools (rectangles, circles, text) with proper drawing capabilities. Each tool should have clear selection states and visual feedback. Score 2 points for each well-implemented tool type (rectangle, circle, text). Add 2 points if the annotation tools have configuration options (color, line width, etc.). Add 2 points if the tool implementation includes snapping or alignment guides for precise positioning.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is annotation editing and manipulation functionality complete?",
      "description": "Check if users can select, move, resize, and rotate existing annotations. Review whether the code includes proper event handling for manipulation (mouse/touch events), transformation calculations, and state management. Score 0 if editing is missing, 5 if basic editing exists but lacks some features (e.g., rotation), and 10 if fully implemented with all manipulation capabilities and proper visual feedback during edits.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the annotation deletion and history management implemented?",
      "description": "Verify if the code includes functionality to delete annotations and whether it implements undo/redo operations. Check if the annotation state history is properly tracked for these operations. Score 3 points for basic deletion functionality, 3 points for proper history state management, and 4 points for complete undo/redo implementation with keyboard shortcuts support.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as invalid image formats, browser compatibility issues, large images, multiple concurrent operations, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Auto-save functionality 2. Keyboard shortcuts for all operations 3. Annotation templates or presets 4. Collaborative editing features). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to handle the same event) 2. Function modules unrelated to image annotation (e.g., a built-in photo editor) 3. Fancy effects that affect performance (e.g., unnecessary animations that slow down annotation rendering). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating annotation logic/view/data models), code reusability, and build process automation. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the build process is not automated. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size â‰¥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Immediate visual feedback when drawing annotations 2) Smooth selection and manipulation of objects 3) Clear visual focus guidance for active tools and selected annotations. Deduct 5 points for each operation without feedback, 3 points for laggy annotation rendering during manipulation, and 5 points for confusing tool state indicators. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Multimedia Editing-Image Editing",
  "difficulty": "hard"
}