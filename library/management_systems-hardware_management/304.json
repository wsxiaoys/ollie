{
  "index": 304,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, professional responses. Make sure the generated code is executable for demonstration. I am now able to obtain temperature and light intensity information through temperature and light sensors, and I want to display the collected data curves on an LCD screen. The temperature curve and its coordinates should be displayed in blue, while the light intensity curve and its coordinates should be displayed in yellow. When temperature/light intensity values rise, the corresponding curve should show an upward trend, and when they decrease, the curve should show a downward trend. The UI graph should have time information on the x-axis and temperature/light intensity information on the y-axis. Additionally, as time progresses, the curve should scroll when it exceeds the screen's boundaries.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the sensor data acquisition and processing system properly implemented?",
      "description": "Check whether the code implements interfaces for both temperature and light sensors, including proper initialization, periodic sampling, and data preprocessing (filtering/normalization). Score 0 if data acquisition is missing, 5 if only basic reading is implemented without error handling, and 10 if the system includes comprehensive data validation, error handling, and adaptive sampling rates.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the code correctly implement dual-parameter visualization with appropriate color coding?",
      "description": "Verify that temperature data is visualized with a blue curve and light intensity with a yellow curve as specified. Review whether the code includes proper color definitions (#0000FF for blue, #FFFF00 for yellow), consistent line styling, and clear visual differentiation between the two data sets. Deduct 5 points if colors are inconsistent or wrong, and 3 points if the visual distinction between curves is poor. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the coordinate system correctly implemented with proper scaling and units?",
      "description": "Evaluate whether the visualization includes properly labeled x-axis (time) and y-axis (temperature/light intensity), with appropriate units (°C/lux and time units), grid lines, and dynamic scaling that adapts to the data range. Check if both axes have proper tick marks and values. Deduct 5 points if units are missing, 3 points if the grid is improperly scaled, and 5 points if automatic rescaling for different ranges is absent. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is the scrolling mechanism for time-series data properly implemented?",
      "description": "Assess whether the code implements smooth horizontal scrolling when data exceeds screen boundaries, with proper buffering of historical data and optimized rendering to prevent flickering. Check for consistent scroll speed and proper refresh rate management. Deduct 5 points if scrolling is jerky, 3 points if old data is simply discarded rather than scrolled, and 5 points if the scrolling doesn't adapt to different data acquisition rates. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as sensor disconnection, out-of-range readings, LCD rendering issues, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Touch screen interaction for zooming/panning 2. Min/max/average value indicators 3. Automatic anomaly detection highlighting). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant data processing paths (e.g., multiple filtering algorithms running in parallel) 2. Visualization elements unrelated to the temperature and light data (e.g., unnecessary decorative elements) 3. Performance-intensive effects that may slow down real-time display (e.g., excessive animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating sensor data acquisition/processing/visualization layers), use of appropriate design patterns, memory management for resource-constrained LCD environments, and optimization for embedded systems. Deduct 5 points if global state pollution is found; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if memory management is inefficient for embedded systems. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern data visualization principles: 1) Contrast ratio between graph elements and background (at least 4.5:1 for accessibility) 2) Proper axis labeling and legend placement 3) Professional typography (readable font size even on small LCD, appropriate spacing). Deduct 3 points for each crowded visual element, 5 points for poor contrast that affects readability, and 5 points for ambiguous data representation. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the visualization performance meets real-time requirements: 1) Render delay ≤ 100ms after new sensor data 2) Smooth curve transitions without jagged artifacts 3) Consistent frame rate even with rapid data changes. Deduct 5 points for visible render lag, 3 points for jerky scrolling animation, and 5 points for dropped frames during continuous operation. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Management Systems-Hardware Management",
  "difficulty": "hard"
}