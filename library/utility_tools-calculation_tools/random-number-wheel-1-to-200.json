{
  "index": 1816,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Be sure to ensure that the code you generate is executable for demonstration. Create a random number wheel from 1 to 200.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the wheel interface properly implemented?",
      "description": "Check whether the code creates a visually clear wheel with numbers 1-200 displayed in a circular arrangement. Numbers should be legible, with appropriate font size and spacing. Score 0 if no visual wheel is created, 5 if the wheel exists but numbers are hard to read, and 10 if the wheel is visually well-designed with clear number placement.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the random number selection mechanism properly implemented?",
      "description": "Evaluate whether the code uses a proper random number generation method (Math.random or similar appropriate function) that ensures each number from 1-200 has an equal probability of being selected. Check if the randomness is correctly applied to the wheel's spinning mechanism. Score 0 if randomness is not implemented, 5 if basic randomness exists but with bias, and 10 if truly random selection is implemented.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the spinning animation smooth and realistic?",
      "description": "Review the wheel's spinning animation - it should gradually slow down to simulate physics (easing function), have appropriate duration (3-7 seconds), and provide a clear indication of the final selected number. Deduct 5 points if the animation is jerky, 3 points if there's no deceleration effect, and 3 points if the final selection isn't clearly highlighted.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is there user interaction for triggering the wheel spin?",
      "description": "Check if there's a clear mechanism (button, click event, etc.) for users to trigger the wheel spin. The interaction should include appropriate visual feedback (button state change, cursor change) and prevent multiple spins while animation is in progress. Score 0 if no interaction exists, 5 if basic interaction exists but lacks feedback, and 10 if interaction is intuitive with proper feedback.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as rapid multiple clicks, browser resizing, script errors) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Sound effects during spinning 2. Confetti/visual effects when landing on a number 3. History of previous spins 4. Customizable speed/appearance). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple methods to trigger spinning) 2. Function modules unrelated to the wheel (e.g., unnecessary analytics) 3. Fancy effects that affect performance (e.g., excessive animations that slow down the page). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating wheel logic/view/animation), code organization, and reusability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high; deduct 5 points if there's no separation of concerns between UI and logic. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (no more than 3 primary colors) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ≥ 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic wheel layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Click feedback delay ≤ 100ms 2) Wheel animation performance (60fps without frame drops) 3) Clear visual indication of result. Deduct 5 points for each operation without feedback, 3 points for stuttering animation, and 5 points for unclear result indication. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Utility Tools-Calculation Tools",
  "difficulty": "medium"
}