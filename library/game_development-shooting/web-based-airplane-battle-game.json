{
  "index": 323,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the generated code is executable for demonstration. Please create a web-based airplane battle game.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core game mechanics fully implemented?",
      "description": "Review whether the code accurately implements the airplane movement, shooting mechanism, and collision detection. Check if player controls (keyboard/touch) are responsive and intuitive. Score 0 if core game mechanics are missing, 5 if only basic movement and shooting are implemented, and 10 if advanced features like powerups or multiple weapon types are included.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the enemy AI system properly designed?",
      "description": "Evaluate the intelligence and variety of enemy behaviors. Check if enemies have different movement patterns, attack strategies, or difficulty progression. Deduct 5 points if enemies move in fixed patterns only, 3 points if there's no difficulty scaling as the game progresses. Full score requires at least 3 distinct enemy types with unique behaviors.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the scoring and level progression system implemented?",
      "description": "Check if the game includes a proper scoring system, level progression, and game state management (start, pause, game over). Verify if the difficulty increases with progression. Deduct 5 points if score tracking is missing, 3 points if level progression is absent, and 2 points if there's no game state management. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are the collision detection and physics accurate?",
      "description": "Verify if collision detection between player, enemies, projectiles, and game boundaries is accurate. Check for physics elements like acceleration, deceleration, and inertia if applicable. Deduct 5 points for imprecise collision detection, 3 points for missing boundary handling, and 5 points if hit detection feels unnatural or laggy.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as rapid input, browser resize, focus loss, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Special screen-clearing bombs 2. Dynamic weather effects 3. Unlockable airplane skins/upgrades). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple control systems that conflict) 2. Function modules unrelated to the airplane battle game (e.g., unnecessary mini-games) 3. Fancy effects that affect performance (e.g., excessive particle effects causing lag). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/input handling), code organization, and maintainability. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if there's no separation between game logic and rendering. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern game UI principles: 1) Clear visual hierarchy (player, enemies, projectiles, UI elements) 2) Proper contrast between game elements and background 3) Readable UI indicators for health, score, and game state. Deduct 3 points for cluttered visuals, 5 points for poor contrast making gameplay difficult, and 5 points for unreadable or poorly positioned UI elements. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the game provides smooth gameplay experience: 1) Consistent frame rate without drops 2) Responsive controls with immediate feedback 3) Smooth animations for movement, explosions, and transitions. Deduct 5 points for noticeable frame drops, 3 points for input lag, and 5 points for choppy animations or visual glitches. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Shooting",
  "difficulty": "medium"
}