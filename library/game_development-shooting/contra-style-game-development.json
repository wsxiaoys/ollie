{
  "index": 1514,
  "question": "You are a coding expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable for demonstration. Write code for a game similar to the NES/Famicom Contra game.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the core game character movement and control system fully implemented?",
      "description": "Review whether the code accurately implements the classic Contra character movement mechanics including running, jumping, crouching, and aiming in 8 directions. Score 0 if core movement is missing, 5 if basic movement is implemented but lacks fluidity, and 10 if the character control feels responsive with proper acceleration/deceleration and matches the original NES Contra feel.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Is the shooting and weapon system thoroughly developed?",
      "description": "Check if the code implements the iconic Contra weapon system with different weapon types (regular gun, machine gun, spread gun, laser, flame thrower). Evaluate bullet physics, collision detection, and weapon switching mechanism. Deduct 5 points if fewer than 3 weapon types are implemented, and 3 points if weapon pickup mechanics are missing. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the enemy AI and spawn system properly implemented?",
      "description": "Assess whether the code includes varied enemy types with distinct movement patterns and attack behaviors similar to the original Contra. Check if the enemy spawn system follows logical patterns based on level progression. Deduct 5 points if enemies have no AI variation, 3 points if spawn patterns are random rather than designed. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Are the level design and stage progression mechanics implemented?",
      "description": "Evaluate if the code includes at least 2 different stage types (side-scrolling and pseudo-3D perspective stages) with proper checkpoints, boss encounters, and scene transitions. Check for implementation of the iconic level features like destructible environments and vertical scrolling sections. Score 0 if only a single static level exists, 5 for basic scrolling levels, and 10 for complete level progression system.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as rapid input combinations, collision edge cases, game state persistence during browser refresh, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Modern visual effects while maintaining retro feel 2. Customizable character skins 3. Level editor functionality 4. Co-op multiplayer support). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple collision detection systems coexisting) 2. Function modules unrelated to a Contra-style game (e.g., unnecessary RPG elements) 3. Fancy effects that affect performance (e.g., excessive particle effects causing framerate drops). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating game logic/view/input handlers/physics), sprite management efficiency, and performance optimization. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if rendering optimization techniques are missing (e.g., sprite batching, object pooling). The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the visual design capture the authentic NES/Famicom Contra aesthetic?",
      "description": "Evaluate whether the visual design faithfully reproduces the iconic Contra pixel art style: 1) Proper use of limited color palette (NES-like constraints) 2) Authentic sprite animations matching the original game's frame counts 3) Appropriate screen resolution and scaling (maintaining proper pixel ratio). Deduct 3 points for inconsistent art style, 5 points for modern visual effects that break the retro aesthetic, and 5 points for improper scaling causing visual artifacts. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the audio and game feel implementation authentic to the original?",
      "description": "Judge whether the game successfully recreates the iconic Contra audio-visual experience: 1) Implementation of the classic sound effects and music 2) Screen shake and visual feedback on hits/explosions 3) Appropriate game difficulty curve and death mechanics. Deduct 5 points for missing sound effects, 3 points for inconsistent game feel compared to the original, and 5 points if the iconic Contra jingles and music themes are absent. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Shooting",
  "difficulty": "hard"
}