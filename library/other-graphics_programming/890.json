{
  "index": 890,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate, expert responses. Be careful to ensure that the code you generate is executable and can be displayed. Desktop heart code creation.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the desktop heart basic animation implemented correctly?",
      "description": "Evaluate whether the code implements a functional desktop heart animation with smooth transitions. Check if the heart shape is properly rendered using SVG/Canvas/CSS, and whether it includes proper color gradients or effects. Score 0 if no animation is present, 5 if the heart is static or has minimal animation, and 10 if it has fluid, attractive animations with proper easing functions.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Does the desktop heart follow proper window management?",
      "description": "Check whether the code properly implements window management features such as 'always on top', proper z-index handling, transparency control, and clickthrough capabilities. Deduct 3 points if the window isn't set to stay on top, 4 points if it interferes with normal desktop interaction, and 3 points if it lacks proper transparency settings. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Are interactive features implemented for the desktop heart?",
      "description": "Assess whether users can interact with the heart through mouse hover, click, drag, or keyboard shortcuts. Check for event listeners and handlers. Deduct 5 points if no interaction is possible, 3 points if the interaction is limited to basic hover effects. Give 10 points if multiple interaction modes are implemented with proper feedback mechanisms.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is a customization system provided for the desktop heart?",
      "description": "Evaluate whether the code provides options to customize the heart's appearance (color, size, effects), behavior (movement patterns, response to inputs), or includes themes/skins. Deduct 3 points for each major customization category missing. Score 10 if the customization is comprehensive with a settings interface.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as screen resolution changes, system theme switches, multi-monitor setups, etc.) and provide graceful error handling or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Dynamic reactions to system time/events 2. Subtle particle effects or weather animations 3. Integration with system notifications). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant event listeners that could cause memory leaks 2. Unnecessary rendering loops when static display would suffice 3. Excessive animations that drain system resources. Deduct 3 points for each redundancy found, and directly deduct 10 points if core performance is significantly affected by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (separating animation logic/rendering/interaction handling), performance optimization techniques, and resource management. Deduct 5 points if global state pollution is found; deduct 3 points if animation frames are not properly managed; deduct 5 points if the code uses excessive CPU/memory resources. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the desktop heart design meet professional aesthetic standards?",
      "description": "Evaluate whether the visual design follows good principles: 1) Harmonious color palette with proper contrast 2) Appropriate size that doesn't distract from work 3) Smooth edges and proper anti-aliasing. Deduct 3 points for harsh color combinations, 3 points for pixelated or jagged rendering, and 4 points for disproportionate or oversized elements. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the desktop heart optimized for system resources?",
      "description": "Judge whether the implementation is optimized for desktop integration: 1) CPU usage remains below 5% when idle 2) Memory footprint under 50MB 3) Proper cleanup on window close or refresh. Deduct 5 points for each resource leak identified, 3 points for noticeable system slowdown during animation, and 5 points for missing throttling/debouncing for intensive operations. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Other-Graphics Programming",
  "difficulty": "medium"
}