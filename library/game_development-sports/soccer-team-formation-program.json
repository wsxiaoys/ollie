{
  "index": 1445,
  "question": "You are a code expert. Please use your professional knowledge to generate accurate and professional responses. Make sure the code you generate is executable and can be displayed.\n\nI need you to create a soccer team formation program based on the following list of names:\nChen Junchao, Huang Dun'an, Yang Nian, Wang Zhijian, Tu, Xu Ben, Fan Kai, Chen Zhen, Zhu Jun, Wu Rui, Xin Lei, Wen Quan, Zhang Jin, Wu Di, Xiao Long, Jie, Chen Gang, He Shaomin, Jiang Rui, Y.püçÄüë£, gx, Wu Zhenxing, Deng Wei, Yu Fan, Liu Lei\n\nThe program should have a green soccer field background and allow selection between 5-a-side, 7-a-side, 8-a-side, 9-a-side, and 11-a-side formats. The formation should vary based on the number of players, with some basic preset formations. The program should include a player database where you can add, remove, and modify player names. Don't include the numbers before the names. Please create this in HTML format. I want to use AI to generate this program code, so please help me optimize this prompt.",
  "checklist": [
    {
      "id": 0,
      "title": "Is the soccer field visualization properly implemented?",
      "description": "Check if the code creates a visually accurate green soccer field with appropriate dimensions, markings (penalty areas, center circle, etc.), and proper orientation. The field should scale responsively based on screen size. Deduct 5 points if field dimensions aren't proportional, 3 points if key markings are missing, and 2 points if the green color isn't consistent with standard soccer fields. Full implementation scores 10 points.",
      "maxScore": 10
    },
    {
      "id": 1,
      "title": "Are all the required formation options implemented correctly?",
      "description": "Verify that the code includes all required formation options (5-a-side, 7-a-side, 8-a-side, 9-a-side, and 11-a-side) and that each formation displays players in tactically logical positions. Each formation should have at least 2 preset variations (e.g., 4-4-2 vs 4-3-3 for 11-a-side). Deduct 2 points for each missing format, and 1 point for each formation without tactical coherence. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 2,
      "title": "Is the player database functionality complete?",
      "description": "Evaluate if the player database allows adding, removing, and modifying player names as specified. Test if the initial 25 players are preloaded correctly (without numbers before names) and if the database persists changes (using localStorage). Verify that the UI for player management is intuitive. Deduct 4 points if CRUD operations are incomplete, 3 points if data persistence is missing, and 3 points if the initial player list is incorrect. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 3,
      "title": "Is there a random team generation feature with balanced team selection?",
      "description": "Check if the code implements a random team generation algorithm that creates balanced teams from the available player pool. The algorithm should distribute players evenly while maintaining the selected formation. Verify that the randomization doesn't create duplicate player assignments and handles cases when there are insufficient players. Deduct 5 points if randomization is unbalanced, 3 points if duplicates are possible, and 2 points if edge cases aren't handled. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 4,
      "title": "Is the code robust?",
      "description": "Evaluate whether the code can handle common abnormal situations (such as insufficient players for a formation, duplicate player names, special characters in names, etc.) and provide friendly error prompts or recovery mechanisms. Code with strong robustness should be able to effectively handle these edge cases, giving 10 points. If the robustness is average, give 5 points, and if no exceptions are handled, give 0 points.",
      "maxScore": 10
    },
    {
      "id": 5,
      "title": "Are there any innovative features that are eye-catching?",
      "description": "Check whether the code includes surprise features that enhance the experience (e.g., 1. Drag-and-drop player positioning 2. Player statistics tracking 3. Formation effectiveness visualization 4. Player position compatibility indicators). Add 3 points for each practical innovative feature implemented (maximum 10 points).",
      "maxScore": 10
    },
    {
      "id": 6,
      "title": "Are there any redundant features?",
      "description": "Strictly check three types of redundancy: 1. Redundant implementation of similar functions (e.g., multiple ways to generate teams) 2. Function modules unrelated to soccer team formation (e.g., weather forecasts) 3. Fancy effects that affect performance (e.g., unnecessary animations). Deduct 3 points for each redundancy found, and directly deduct 10 points if the core functions are interfered with by redundant code.",
      "maxScore": 10
    },
    {
      "id": 7,
      "title": "Does the code have engineering quality?",
      "description": "Review modular design (such as separating UI/data/formation logic), code reusability, and efficiency of algorithms. Deduct 5 points if global state pollution is found or design patterns are not used; deduct 5 points if the code duplication rate is too high (over 30%); deduct 5 points if the code isn't organized into logical functions/components. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 8,
      "title": "Does the interface vision meet professional design standards?",
      "description": "Evaluate whether the overall design follows modern design principles: 1) Harmonious color matching (soccer-appropriate green field with contrasting, readable UI elements) 2) Proper layout spacing (element spacing follows the 8px multiple principle) 3) Professional font system (body font size ‚â• 14px, line height over 1.5 times). Deduct 3 points for each crowded visual element, 5 points for a glaring color combination, and 5 points for chaotic text-image layout. The full score is 10 points.",
      "maxScore": 10
    },
    {
      "id": 9,
      "title": "Is the dynamic interaction smooth and seamless?",
      "description": "Judge whether the dynamic effects conform to human perception characteristics: 1) Formation switching transitions smoothly within 300ms 2) Clear visual feedback when selecting players 3) Intuitive UI for adding/removing players. Deduct 5 points for each operation without feedback, 3 points for jarring transitions between formations, and 5 points for hard-to-find key function buttons. The full score is 10 points.",
      "maxScore": 10
    }
  ],
  "class": "Game Development-Sports",
  "difficulty": "medium"
}